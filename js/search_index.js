var search_data = {"index":{"searchIndex":["boolean","carrepository","dry","validation","messages","hanami","action","baseparams","csrfprotection","cache","cachecontrol","classmethods","directives","conditionalget","directives","etag","expires","classmethods","directives","lastmodified","nonvaluedirective","valuedirective","callable","callbacks","classmethods","instancemethods","configurable","cookiejar","cookies","exposable","classmethods","flash","glue","head","invalidcsrftokenerror","mime","classmethods","instancemethods","params","rack","callable","classmethods","file","instancemethods","redirect","request","routinghelpers","session","throwable","classmethods","validatable","classmethods","application","applicationname","assets","bundler","cache","compiler","compressors","abstract","builtinjavascript","builtinstylesheet","closurejavascript","javascript","nullcompressor","sassstylesheet","stylesheet","uglifierjavascript","unknowncompressorerror","yuijavascript","yuistylesheet","config","digestmanifest","globalsources","nulldigestmanifest","sources","configuration","error","helpers","missingasset","missingdigestasseterror","missingdigestmanifesterror","precompiler","unknownassetengine","classmethods","cli","clibase","clisubcommands","assets","db","destroy","generate","commands","assets","precompile","console","methods","db","abstract","apply","console","create","drop","migrate","prepare","version","generate","abstract","action","app","mailer","migration","model","new","abstract","app","container","routes","server","config","configure","cookies","frameworkconfiguration","loadpaths","logger","mapper","mapping","routes","security","sessions","configuration","container","router","controller","configuration","error","unknownformaterror","entity","classmethods","dirtytracking","environment","generators","databaseconfig","templateengine","hanamirc","http","status","interactor","interface","result","layout","classmethods","loader","logger","formatter","jsonformatter","mailer","classmethods","configuration","delivery","dsl","error","glue","missingdeliverydataerror","rendering","templatename","templatesfinder","template","middleware","model","adapters","abstract","databaseadapternotfound","disconnectedadaptererror","disconnectedresource","filesystemadapter","implementation","memory","collection","primarykey","command","query","memoryadapter","missingurierror","noadaptererror","notsupportederror","nulladapter","sql","collection","command","console","consoles","mysql","postgresql","sqlite","query","sqladapter","checkconstraintviolationerror","coercer","config","adapter","adapternotfound","mapper","configuration","foreignkeyconstraintviolationerror","invalidcommanderror","invalidqueryerror","mapper","mapping","attribute","coercers","array","bigdecimal","boolean","date","datetime","float","hash","integer","set","string","symbol","time","collection","collectioncoercer","entitynotfound","repositorynotfound","unmappedcollectionerror","migrationerror","migrator","adapter","connection","mysqladapter","postgresadapter","sqliteadapter","memory","nomappingerror","notnullconstraintviolationerror","nullmapper","uniqueconstraintviolationerror","presenter","rakehelper","renderingpolicy","repository","classmethods","instancemethods","router","notroutableendpointerror","routes","routing","classendpoint","default","nullaction","endpoint","endpointnotfound","endpointresolver","error","forcessl","httprouter","invalidrouteexception","lazyendpoint","namespace","parsers","parsing","bodyparsingerror","jsonparser","parser","unknownparsererror","recognizedroute","resource","action","collectionaction","create","defaultmemberaction","destroy","edit","memberaction","nested","new","options","show","update","resources","action","collectionaction","create","defaultmemberaction","destroy","edit","index","memberaction","new","pluralizedaction","show","update","route","routesinspector","server","static","utils","attributes","basicobject","blank","callbacks","callback","chain","factory","methodcallback","class","classattribute","classmethods","deprecation","duplicable","escape","safestring","hash","io","inflector","irregularrules","json","kernel","loadpaths","pathprefix","string","validations","attribute","attributedefiner","classmethods","entityattributedefiner","instancemethods","blankvaluechecker","classmethods","coercions","error","errors","form","classmethods","inlinepredicate","namespace","nestedattributes","predicates","validationset","validator","view","configuration","dsl","error","escape","instancemethods","presenter","inheritable","missingformaterror","missingtemplateerror","missingtemplatelayouterror","rendering","instancemethods","layoutfinder","layoutregistry","layoutscope","nulllayout","nulllocal","nulltemplate","partial","partialfile","partialfinder","partialtemplatesfinder","registry","scope","template","templatefinder","templatename","templatesfinder","viewfinder","template","views","default","defaulttemplatefinder","nullview","welcome","httprouter","route","jsmin","parseerror","mailers","namerepository","object","range","<<()","<<()","<<()","==()","==()","==()","==()","==()","==()","==()","==()","===()","array()","bigdecimal()","boolean()","date()","datetime()","float()","hash()","integer()","pathname()","set()","string()","symbol()","time()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","__add()","__apply()","__inspect()","_attribute()","_base_rules()","_find()","_find()","_load_assets_middleware()","_load_default_welcome_page_for()","_load_method_override_middleware()","_load_session_middleware()","_payload()","_requires_no_body?()","_sort_handled_exceptions!()","absolute!()","absolute?()","action()","action_module()","action_separator()","actions()","actions()","adapter()","adapter()","adapter()","adapter()","adapter=()","adapter_name()","add()","add()","add()","add_error()","add_layout()","add_mailer()","add_partial()","add_view()","after()","all()","all()","all()","all()","all()","all()","all()","all?()","allowed_attribute_name?()","and()","and()","any?()","any?()","app()","app=()","app_name()","append()","append_after()","append_before()","application()","application_name()","application_name()","applications()","apply()","apply()","apply()","apps_path()","architecture()","as()","asc()","asc()","asset_path()","asset_path()","asset_url()","asset_url()","assets()","attribute()","attribute()","attribute()","attribute_names()","attributes()","audio()","average()","average()","avg()","avg()","bcc()","before()","blank?()","blank_value?()","body_parsers()","build()","build()","bundler_groups()","cache()","cache_control()","cache_control()","cache_control_directives()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","capitalize()","cc()","cdn()","changed?()","changed_attributes()","charset()","charset=()","class()","class()","class_attribute()","classify()","classify()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","close()","code_reloading?()","coerce()","coercer()","collection()","collection()","command()","command()","command()","compile()","compile()","compile()","compress()","compress()","compress()","compress()","compress()","config()","configuration()","configure()","configure()","configure()","configure()","configure()","configure()","configure()","configure()","connection_string()","connection_string()","connection_string()","connection_string()","connection_string()","console()","console()","constantize()","container?()","content()","content_security_policy()","content_type()","content_type()","controller()","controller_pattern()","cookies()","cookies()","cookies()","cookies()","copy!()","copy!()","copy!()","count()","count()","count()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","css_compressor()","dasherize()","database()","database_type()","deep_dup()","default()","default_charset()","default_charset()","default_encoding()","default_format()","default_headers()","default_request_format()","default_request_format()","default_response_format()","default_response_format()","define()","define()","define_attr_accessor()","define_attr_accessor()","define_commands()","defined?()","defined_attributes()","defined_attributes()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete_param()","deliver()","deliver()","deliveries()","delivery()","delivery_method()","demodulize()","deploy()","desc()","desc()","deserialize()","deserialize_attribute()","destination_directory()","destroy()","digest()","disconnect()","disconnect()","disconnect()","disconnect()","drop()","drop()","drop()","drop()","drop()","drop()","drop()","dump()","dump()","dump()","dump()","dump()","dump_coercer()","dup()","dupe()","dupe()","dupe()","dupe()","duplicate()","duplicate()","duplicate()","duplicate()","duplicate()","duplicate()","duplicate()","duplicate()","duplicate()","duplicates()","each()","each()","each()","each()","each()","each_key()","empty?()","empty?()","empty?()","enabled?()","enabled?()","encode()","engine()","engine()","engines()","engines()","entity()","env()","env?()","env_config()","env_for()","environment()","environment()","environment?()","eql?()","eql?()","eql?()","eql?()","error()","errors()","errors()","errors()","errors()","exception()","exception_handler()","exclude()","exclude()","exclude()","execute()","execute()","exist?()","exist?()","exists?()","expires()","expires()","expires_directives()","expose()","expose()","exposures()","exposures()","extended()","extended()","extended()","extended()","extended()","extended()","fabricate()","fabricate()","fail!()","favicon()","fetch()","fetch()","file()","files()","files()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find_partial()","finish()","finish()","finish()","finish()","finish()","finish()","first()","first()","first()","first()","for()","for()","for()","for()","for()","for()","for()","for()","for_code()","force?()","force_ssl()","format()","format()","format()","format()","format()","format()","format()","format()","format()","format()","format_for()","format_to_mime_type()","freeze()","freeze()","fresh()","fresh?()","fresh?()","fresh?()","fresh?()","from()","from_record()","generate()","generate()","generate()","generate()","get()","get()","get()","get()","global_uri()","group()","group()","group()","gsub()","halt()","hanami_entity?()","hanami_nested_attributes?()","handle_exception()","handle_exceptions()","handle_exceptions()","handled_exception?()","hash()","hash()","hash()","header()","header()","headers()","headers()","headers()","headers()","host()","host()","host()","host()","html()","html()","html_attribute()","identity()","identity()","image()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","increment!()","inflections()","info()","inherited()","inherited()","inherited()","inherited()","inherited()","initialize_copy()","inner_join()","insert()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect_routes()","inspector()","install()","install_tasks()","interval()","interval()","invalid?()","javascript()","javascript_compressor()","jdbc?()","join()","join()","join()","join_table()","jruby?()","js_compressor()","keys()","last()","last()","last()","last()","layout()","layout()","layout()","layout()","left_join()","left_outer_join()","level()","level=()","limit()","limit()","limit()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load!()","load_coercer()","load_default_stack()","load_from_pattern!()","load_middleware()","load_partials!()","load_paths()","local()","local()","locals()","locals()","logger()","mailer()","mailer()","manifest()","manifest_path()","map()","map()","map_templates()","map_templates()","map_templates()","map_templates()","map_templates()","map_templates()","map_templates()","mapped()","mapping()","mapping()","max()","max()","merge()","message_for()","messages()","messages_path()","method_added()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","middleware()","middleware()","middleware()","middleware()","migrate()","migrate()","migration()","migration()","migration()","migrations()","mime_type_for()","mime_types()","mime_types()","min()","min()","minify()","model()","model()","model()","mount()","mount()","mount()","name()","names()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","namespace()","negate!()","negate!()","nested_router()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nil?()","no_response()","not()","not()","numeric?()","offset()","offset()","offset()","options()","options()","options()","options()","or()","or()","or()","order()","order()","order()","order_more()","params()","params()","params()","params_class()","parse()","parse()","parsed_uri()","partial_name()","partial_template_under_view_path()","pass_on_response()","password()","patch()","patch()","path()","path()","path_prefix()","persist()","persist()","persist()","pluralize()","pluralize()","port()","port()","port()","port()","post()","post()","post_process_templates()","post_process_templates()","post_process_templates()","post_process_templates()","precompile()","predicate()","predicates()","prefix()","prefix()","preload!()","preload_applications!()","prepare()","prepare()","prepare()","prepare()","prepare()","prepare()","prepare!()","prepare!()","prepend()","prepend()","prepend_after()","prepend_before()","public_directory()","public_directory()","push()","push()","put()","put()","query()","query()","query()","query()","rack_builder()","rackserver()","rackup()","rackup_config()","raise()","raise_missing_template_error()","range()","range()","raw()","raw_call()","raw_path()","raw_url()","read()","realpath()","recognize()","recursive()","recursive()","redirect()","redirect()","registry()","relative!()","relative_join()","relative_partial_path()","reload!()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","renderable?()","rendered()","renderer()","repository()","request()","request_id()","require_application_environment()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","resolve()","resolve()","resolve()","resolve()","resource()","resource()","resource()","resource_name()","resources()","resources()","resources()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","response()","reverse_order()","reverse_order()","rewrite_partial_path_info()","root()","root()","root()","root()","root()","root()","root()","root()","root()","root()","root()","routable?()","routes()","routes()","routes()","rsub()","rubinius?()","run()","run()","run()","run()","scan()","schema()","scheme()","scheme()","scope()","scoped()","search_path()","search_path()","security()","select()","select()","select()","select_all()","sending_file?()","separator()","separator()","serialize()","serve_static_assets?()","server()","session()","session()","sessions()","set()","silence_warnings()","singularize()","singularize()","size()","size()","sources()","sources()","split()","ssl?()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","status()","store()","stream()","stringify!()","stylesheet()","stylesheet_compressor()","subclasses()","subject()","success?()","suffix()","sum()","sum()","symbolize!()","table_name()","template()","template()","template()","template()","template()","template()","template()","template_name()","template_name()","template_name()","template_name()","template_options()","template_options()","template_options()","template_options()","template_options()","template_options()","template_source_path()","templates()","templates()","templates()","templates_path()","test()","title()","titleize()","to()","to_a()","to_a()","to_a()","to_config()","to_env_s()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_hash()","to_hash()","to_hash()","to_options()","to_path()","to_proc()","to_proc()","to_proc()","to_record()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_str()","to_str()","to_str()","to_str()","to_str()","tokenize()","trace()","trace()","transaction()","transaction()","transaction()","transaction()","uncountable()","underscore()","unload!()","unload!()","unload!()","unload!()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_param()","uri()","url()","url()","url()","use()","use()","user()","valid?()","valid?()","valid?()","validate()","validate()","validate()","validates()","validations()","values()","values_at()","verb()","version()","version()","version()","version()","video()","view()","view()","view_pattern()","view_template_dir()","views()","where()","where()","where()","wildcard_param()","wildcard_param()","x_frame_options()","readme"],"longSearchIndex":["boolean","carrepository","dry","dry::validation","dry::validation::messages","hanami","hanami::action","hanami::action::baseparams","hanami::action::csrfprotection","hanami::action::cache","hanami::action::cache::cachecontrol","hanami::action::cache::cachecontrol::classmethods","hanami::action::cache::cachecontrol::directives","hanami::action::cache::conditionalget","hanami::action::cache::directives","hanami::action::cache::etag","hanami::action::cache::expires","hanami::action::cache::expires::classmethods","hanami::action::cache::expires::directives","hanami::action::cache::lastmodified","hanami::action::cache::nonvaluedirective","hanami::action::cache::valuedirective","hanami::action::callable","hanami::action::callbacks","hanami::action::callbacks::classmethods","hanami::action::callbacks::instancemethods","hanami::action::configurable","hanami::action::cookiejar","hanami::action::cookies","hanami::action::exposable","hanami::action::exposable::classmethods","hanami::action::flash","hanami::action::glue","hanami::action::head","hanami::action::invalidcsrftokenerror","hanami::action::mime","hanami::action::mime::classmethods","hanami::action::mime::instancemethods","hanami::action::params","hanami::action::rack","hanami::action::rack::callable","hanami::action::rack::classmethods","hanami::action::rack::file","hanami::action::rack::instancemethods","hanami::action::redirect","hanami::action::request","hanami::action::routinghelpers","hanami::action::session","hanami::action::throwable","hanami::action::throwable::classmethods","hanami::action::validatable","hanami::action::validatable::classmethods","hanami::application","hanami::applicationname","hanami::assets","hanami::assets::bundler","hanami::assets::cache","hanami::assets::compiler","hanami::assets::compressors","hanami::assets::compressors::abstract","hanami::assets::compressors::builtinjavascript","hanami::assets::compressors::builtinstylesheet","hanami::assets::compressors::closurejavascript","hanami::assets::compressors::javascript","hanami::assets::compressors::nullcompressor","hanami::assets::compressors::sassstylesheet","hanami::assets::compressors::stylesheet","hanami::assets::compressors::uglifierjavascript","hanami::assets::compressors::unknowncompressorerror","hanami::assets::compressors::yuijavascript","hanami::assets::compressors::yuistylesheet","hanami::assets::config","hanami::assets::config::digestmanifest","hanami::assets::config::globalsources","hanami::assets::config::nulldigestmanifest","hanami::assets::config::sources","hanami::assets::configuration","hanami::assets::error","hanami::assets::helpers","hanami::assets::missingasset","hanami::assets::missingdigestasseterror","hanami::assets::missingdigestmanifesterror","hanami::assets::precompiler","hanami::assets::unknownassetengine","hanami::classmethods","hanami::cli","hanami::clibase","hanami::clisubcommands","hanami::clisubcommands::assets","hanami::clisubcommands::db","hanami::clisubcommands::destroy","hanami::clisubcommands::generate","hanami::commands","hanami::commands::assets","hanami::commands::assets::precompile","hanami::commands::console","hanami::commands::console::methods","hanami::commands::db","hanami::commands::db::abstract","hanami::commands::db::apply","hanami::commands::db::console","hanami::commands::db::create","hanami::commands::db::drop","hanami::commands::db::migrate","hanami::commands::db::prepare","hanami::commands::db::version","hanami::commands::generate","hanami::commands::generate::abstract","hanami::commands::generate::action","hanami::commands::generate::app","hanami::commands::generate::mailer","hanami::commands::generate::migration","hanami::commands::generate::model","hanami::commands::new","hanami::commands::new::abstract","hanami::commands::new::app","hanami::commands::new::container","hanami::commands::routes","hanami::commands::server","hanami::config","hanami::config::configure","hanami::config::cookies","hanami::config::frameworkconfiguration","hanami::config::loadpaths","hanami::config::logger","hanami::config::mapper","hanami::config::mapping","hanami::config::routes","hanami::config::security","hanami::config::sessions","hanami::configuration","hanami::container","hanami::container::router","hanami::controller","hanami::controller::configuration","hanami::controller::error","hanami::controller::unknownformaterror","hanami::entity","hanami::entity::classmethods","hanami::entity::dirtytracking","hanami::environment","hanami::generators","hanami::generators::databaseconfig","hanami::generators::templateengine","hanami::hanamirc","hanami::http","hanami::http::status","hanami::interactor","hanami::interactor::interface","hanami::interactor::result","hanami::layout","hanami::layout::classmethods","hanami::loader","hanami::logger","hanami::logger::formatter","hanami::logger::jsonformatter","hanami::mailer","hanami::mailer::classmethods","hanami::mailer::configuration","hanami::mailer::delivery","hanami::mailer::dsl","hanami::mailer::error","hanami::mailer::glue","hanami::mailer::missingdeliverydataerror","hanami::mailer::rendering","hanami::mailer::rendering::templatename","hanami::mailer::rendering::templatesfinder","hanami::mailer::template","hanami::middleware","hanami::model","hanami::model::adapters","hanami::model::adapters::abstract","hanami::model::adapters::databaseadapternotfound","hanami::model::adapters::disconnectedadaptererror","hanami::model::adapters::disconnectedresource","hanami::model::adapters::filesystemadapter","hanami::model::adapters::implementation","hanami::model::adapters::memory","hanami::model::adapters::memory::collection","hanami::model::adapters::memory::collection::primarykey","hanami::model::adapters::memory::command","hanami::model::adapters::memory::query","hanami::model::adapters::memoryadapter","hanami::model::adapters::missingurierror","hanami::model::adapters::noadaptererror","hanami::model::adapters::notsupportederror","hanami::model::adapters::nulladapter","hanami::model::adapters::sql","hanami::model::adapters::sql::collection","hanami::model::adapters::sql::command","hanami::model::adapters::sql::console","hanami::model::adapters::sql::consoles","hanami::model::adapters::sql::consoles::mysql","hanami::model::adapters::sql::consoles::postgresql","hanami::model::adapters::sql::consoles::sqlite","hanami::model::adapters::sql::query","hanami::model::adapters::sqladapter","hanami::model::checkconstraintviolationerror","hanami::model::coercer","hanami::model::config","hanami::model::config::adapter","hanami::model::config::adapternotfound","hanami::model::config::mapper","hanami::model::configuration","hanami::model::foreignkeyconstraintviolationerror","hanami::model::invalidcommanderror","hanami::model::invalidqueryerror","hanami::model::mapper","hanami::model::mapping","hanami::model::mapping::attribute","hanami::model::mapping::coercers","hanami::model::mapping::coercers::array","hanami::model::mapping::coercers::bigdecimal","hanami::model::mapping::coercers::boolean","hanami::model::mapping::coercers::date","hanami::model::mapping::coercers::datetime","hanami::model::mapping::coercers::float","hanami::model::mapping::coercers::hash","hanami::model::mapping::coercers::integer","hanami::model::mapping::coercers::set","hanami::model::mapping::coercers::string","hanami::model::mapping::coercers::symbol","hanami::model::mapping::coercers::time","hanami::model::mapping::collection","hanami::model::mapping::collectioncoercer","hanami::model::mapping::entitynotfound","hanami::model::mapping::repositorynotfound","hanami::model::mapping::unmappedcollectionerror","hanami::model::migrationerror","hanami::model::migrator","hanami::model::migrator::adapter","hanami::model::migrator::connection","hanami::model::migrator::mysqladapter","hanami::model::migrator::postgresadapter","hanami::model::migrator::sqliteadapter","hanami::model::migrator::sqliteadapter::memory","hanami::model::nomappingerror","hanami::model::notnullconstraintviolationerror","hanami::model::nullmapper","hanami::model::uniqueconstraintviolationerror","hanami::presenter","hanami::rakehelper","hanami::renderingpolicy","hanami::repository","hanami::repository::classmethods","hanami::repository::instancemethods","hanami::router","hanami::router::notroutableendpointerror","hanami::routes","hanami::routing","hanami::routing::classendpoint","hanami::routing::default","hanami::routing::default::nullaction","hanami::routing::endpoint","hanami::routing::endpointnotfound","hanami::routing::endpointresolver","hanami::routing::error","hanami::routing::forcessl","hanami::routing::httprouter","hanami::routing::invalidrouteexception","hanami::routing::lazyendpoint","hanami::routing::namespace","hanami::routing::parsers","hanami::routing::parsing","hanami::routing::parsing::bodyparsingerror","hanami::routing::parsing::jsonparser","hanami::routing::parsing::parser","hanami::routing::parsing::unknownparsererror","hanami::routing::recognizedroute","hanami::routing::resource","hanami::routing::resource::action","hanami::routing::resource::collectionaction","hanami::routing::resource::create","hanami::routing::resource::defaultmemberaction","hanami::routing::resource::destroy","hanami::routing::resource::edit","hanami::routing::resource::memberaction","hanami::routing::resource::nested","hanami::routing::resource::new","hanami::routing::resource::options","hanami::routing::resource::show","hanami::routing::resource::update","hanami::routing::resources","hanami::routing::resources::action","hanami::routing::resources::collectionaction","hanami::routing::resources::create","hanami::routing::resources::defaultmemberaction","hanami::routing::resources::destroy","hanami::routing::resources::edit","hanami::routing::resources::index","hanami::routing::resources::memberaction","hanami::routing::resources::new","hanami::routing::resources::pluralizedaction","hanami::routing::resources::show","hanami::routing::resources::update","hanami::routing::route","hanami::routing::routesinspector","hanami::server","hanami::static","hanami::utils","hanami::utils::attributes","hanami::utils::basicobject","hanami::utils::blank","hanami::utils::callbacks","hanami::utils::callbacks::callback","hanami::utils::callbacks::chain","hanami::utils::callbacks::factory","hanami::utils::callbacks::methodcallback","hanami::utils::class","hanami::utils::classattribute","hanami::utils::classattribute::classmethods","hanami::utils::deprecation","hanami::utils::duplicable","hanami::utils::escape","hanami::utils::escape::safestring","hanami::utils::hash","hanami::utils::io","hanami::utils::inflector","hanami::utils::inflector::irregularrules","hanami::utils::json","hanami::utils::kernel","hanami::utils::loadpaths","hanami::utils::pathprefix","hanami::utils::string","hanami::validations","hanami::validations::attribute","hanami::validations::attributedefiner","hanami::validations::attributedefiner::classmethods","hanami::validations::attributedefiner::entityattributedefiner","hanami::validations::attributedefiner::entityattributedefiner::instancemethods","hanami::validations::blankvaluechecker","hanami::validations::classmethods","hanami::validations::coercions","hanami::validations::error","hanami::validations::errors","hanami::validations::form","hanami::validations::form::classmethods","hanami::validations::inlinepredicate","hanami::validations::namespace","hanami::validations::nestedattributes","hanami::validations::predicates","hanami::validations::validationset","hanami::validations::validator","hanami::view","hanami::view::configuration","hanami::view::dsl","hanami::view::error","hanami::view::escape","hanami::view::escape::instancemethods","hanami::view::escape::presenter","hanami::view::inheritable","hanami::view::missingformaterror","hanami::view::missingtemplateerror","hanami::view::missingtemplatelayouterror","hanami::view::rendering","hanami::view::rendering::instancemethods","hanami::view::rendering::layoutfinder","hanami::view::rendering::layoutregistry","hanami::view::rendering::layoutscope","hanami::view::rendering::nulllayout","hanami::view::rendering::nulllocal","hanami::view::rendering::nulltemplate","hanami::view::rendering::partial","hanami::view::rendering::partialfile","hanami::view::rendering::partialfinder","hanami::view::rendering::partialtemplatesfinder","hanami::view::rendering::registry","hanami::view::rendering::scope","hanami::view::rendering::template","hanami::view::rendering::templatefinder","hanami::view::rendering::templatename","hanami::view::rendering::templatesfinder","hanami::view::rendering::viewfinder","hanami::view::template","hanami::views","hanami::views::default","hanami::views::defaulttemplatefinder","hanami::views::nullview","hanami::welcome","httprouter","httprouter::route","jsmin","jsmin::parseerror","mailers","namerepository","object","range","hanami::action::cache::directives#<<()","hanami::assets::config::globalsources#<<()","hanami::utils::loadpaths#<<()","hanami::entity#==()","hanami::model::mapping::attribute#==()","hanami::utils::hash#==()","hanami::utils::loadpaths#==()","hanami::utils::string#==()","hanami::validations::error#==()","hanami::validations::errors#==()","hanami::validations::inlinepredicate#==()","hanami::utils::inflector::irregularrules#===()","hanami::utils::kernel::array()","hanami::utils::kernel::bigdecimal()","hanami::utils::kernel::boolean()","hanami::utils::kernel::date()","hanami::utils::kernel::datetime()","hanami::utils::kernel::float()","hanami::utils::kernel::hash()","hanami::utils::kernel::integer()","hanami::utils::kernel::pathname()","hanami::utils::kernel::set()","hanami::utils::kernel::string()","hanami::utils::kernel::symbol()","hanami::utils::kernel::time()","hanami::action::baseparams#[]()","hanami::action::cookiejar#[]()","hanami::action::flash#[]()","hanami::action::request#[]()","hanami::routing::resource::options#[]()","hanami::utils::attributes#[]()","hanami::utils::hash#[]()","hanami::action::cookiejar#[]=()","hanami::action::flash#[]=()","hanami::action::request#[]=()","hanami::utils::hash#[]=()","hanami::config::frameworkconfiguration#__add()","hanami::config::frameworkconfiguration#__apply()","hanami::interactor::result#__inspect()","hanami::validations::attributedefiner::classmethods#_attribute()","hanami::action::params::_base_rules()","hanami::mailer::rendering::templatesfinder#_find()","hanami::view::rendering::templatesfinder#_find()","hanami::middleware#_load_assets_middleware()","hanami::middleware#_load_default_welcome_page_for()","hanami::middleware#_load_method_override_middleware()","hanami::middleware#_load_session_middleware()","hanami::interactor::result#_payload()","hanami::action::head#_requires_no_body?()","hanami::controller::configuration#_sort_handled_exceptions!()","hanami::utils::pathprefix#absolute!()","hanami::utils::pathprefix#absolute?()","hanami::routing::recognizedroute#action()","hanami::controller::configuration#action_module()","hanami::routing::httprouter#action_separator()","hanami::clisubcommands::destroy#actions()","hanami::clisubcommands::generate#actions()","hanami::configuration#adapter()","hanami::model::configuration#adapter()","hanami::repository::classmethods#adapter()","hanami::repository::instancemethods#adapter()","hanami::repository::classmethods#adapter=()","hanami::model::adapters::abstract#adapter_name()","hanami::utils::inflector::irregularrules#add()","hanami::validations::errors#add()","hanami::validations::validationset#add()","hanami::interactor::result#add_error()","hanami::view::configuration#add_layout()","hanami::mailer::configuration#add_mailer()","hanami::view::configuration#add_partial()","hanami::view::configuration#add_view()","hanami::action::callbacks::classmethods#after()","hanami::model::adapters::abstract#all()","hanami::model::adapters::filesystemadapter#all()","hanami::model::adapters::implementation#all()","hanami::model::adapters::memory::collection#all()","hanami::model::adapters::memory::query#all()","hanami::model::adapters::sql::query#all()","hanami::repository::instancemethods#all()","hanami::view::rendering::nulllocal#all?()","hanami::entity::classmethods#allowed_attribute_name?()","hanami::model::adapters::memory::query#and()","hanami::model::adapters::sql::query#and()","hanami::validations::errors#any?()","hanami::view::rendering::nulllocal#any?()","hanami::clisubcommands::generate#app()","hanami::server#app=()","hanami::config::logger#app_name()","hanami::utils::callbacks::chain#append()","hanami::action::callbacks::classmethods#append_after()","hanami::action::callbacks::classmethods#append_before()","hanami::clisubcommands::destroy#application()","hanami::logger#application_name()","hanami::welcome#application_name()","hanami::application::applications()","hanami::clisubcommands::db#apply()","hanami::model::migrator::apply()","hanami::utils::inflector::irregularrules#apply()","hanami::environment#apps_path()","hanami::environment#architecture()","hanami::routing::resources::collectionaction#as()","hanami::model::adapters::memory::query#asc()","hanami::model::adapters::sql::query#asc()","hanami::assets::configuration#asset_path()","hanami::assets::helpers#asset_path()","hanami::assets::configuration#asset_url()","hanami::assets::helpers#asset_url()","hanami::configuration#assets()","hanami::model::mapping::collection#attribute()","hanami::validations::attributedefiner::classmethods#attribute()","hanami::validations::attributedefiner::entityattributedefiner#attribute()","hanami::entity#attribute_names()","hanami::entity::classmethods#attributes()","hanami::assets::helpers#audio()","hanami::model::adapters::memory::query#average()","hanami::model::adapters::sql::query#average()","hanami::model::adapters::memory::query#avg()","hanami::model::adapters::sql::query#avg()","hanami::mailer::dsl#bcc()","hanami::action::callbacks::classmethods#before()","hanami::utils::blank::blank?()","hanami::validations::blankvaluechecker#blank_value?()","hanami::configuration#body_parsers()","hanami::config::logger#build()","hanami::model::config::adapter#build()","hanami::environment#bundler_groups()","hanami::assets::compiler::cache()","hanami::action::cache#cache_control()","hanami::action::cache::cachecontrol::classmethods#cache_control()","hanami::action::cache::cachecontrol::classmethods#cache_control_directives()","hanami::action::callable#call()","hanami::action::callbacks::instancemethods#call()","hanami::action::rack::callable#call()","hanami::action::rack::file#call()","hanami::application#call()","hanami::container#call()","hanami::interactor::interface#call()","hanami::logger::formatter#call()","hanami::middleware#call()","hanami::router::notroutableendpointerror#call()","hanami::routing::classendpoint#call()","hanami::routing::default#call()","hanami::routing::default::nullaction#call()","hanami::routing::forcessl#call()","hanami::routing::lazyendpoint#call()","hanami::routing::parsers#call()","hanami::routing::recognizedroute#call()","hanami::static#call()","hanami::utils::callbacks::callback#call()","hanami::utils::callbacks::methodcallback#call()","hanami::welcome#call()","hanami::utils::string#capitalize()","hanami::mailer::dsl#cc()","hanami::assets::configuration#cdn()","hanami::entity::dirtytracking#changed?()","hanami::entity::dirtytracking#changed_attributes()","hanami::action::mime#charset()","hanami::action::mime#charset=()","hanami::utils::basicobject#class()","hanami::view::rendering::layoutscope#class()","hanami::utils::classattribute::classmethods#class_attribute()","hanami::routing::endpointresolver#classify()","hanami::utils::string#classify()","hanami::action::flash#clear()","hanami::model::adapters::abstract#clear()","hanami::model::adapters::filesystemadapter#clear()","hanami::model::adapters::memory::collection#clear()","hanami::model::adapters::memory::command#clear()","hanami::model::adapters::memoryadapter#clear()","hanami::model::adapters::sql::command#clear()","hanami::model::adapters::sqladapter#clear()","hanami::repository::instancemethods#clear()","hanami::validations::errors#clear()","hanami::logger#close()","hanami::environment#code_reloading?()","hanami::validations::coercions::coerce()","hanami::model::mapping::attribute#coercer()","hanami::model::mapper#collection()","hanami::repository::instancemethods#collection()","hanami::model::adapters::abstract#command()","hanami::model::adapters::memoryadapter#command()","hanami::model::adapters::sqladapter#command()","hanami::assets::compiler::compile()","hanami::assets::compiler#compile()","hanami::assets::configuration#compile()","hanami::assets::compressors::abstract#compress()","hanami::assets::compressors::builtinjavascript#compress()","hanami::assets::compressors::builtinstylesheet#compress()","hanami::assets::compressors::nullcompressor#compress()","hanami::assets::compressors::sassstylesheet#compress()","hanami::environment#config()","hanami::application#configuration()","hanami::application::configure()","hanami::assets::configure()","hanami::configuration#configure()","hanami::container::configure()","hanami::controller::configure()","hanami::mailer::configure()","hanami::model::configure()","hanami::view::configure()","hanami::model::adapters::abstract#connection_string()","hanami::model::adapters::sql::consoles::mysql#connection_string()","hanami::model::adapters::sql::consoles::postgresql#connection_string()","hanami::model::adapters::sql::consoles::sqlite#connection_string()","hanami::model::adapters::sqladapter#connection_string()","hanami::cli#console()","hanami::clisubcommands::db#console()","hanami::routing::endpointresolver#constantize()","hanami::environment#container?()","hanami::view::rendering::layoutscope#content()","hanami::config::security#content_security_policy()","hanami::action::mime#content_type()","hanami::action::request#content_type()","hanami::configuration#controller()","hanami::configuration#controller_pattern()","hanami::action::cookies#cookies()","hanami::action::request#cookies()","hanami::configuration#cookies()","hanami::controller::configuration#cookies()","hanami::controller::configuration#copy!()","hanami::mailer::configuration#copy!()","hanami::view::configuration#copy!()","hanami::model::adapters::memory::query#count()","hanami::model::adapters::sql::query#count()","hanami::validations::errors#count()","hanami::clisubcommands::db#create()","hanami::model::adapters::abstract#create()","hanami::model::adapters::filesystemadapter#create()","hanami::model::adapters::memory::collection#create()","hanami::model::adapters::memory::command#create()","hanami::model::adapters::memoryadapter#create()","hanami::model::adapters::sql::command#create()","hanami::model::adapters::sqladapter#create()","hanami::model::migrator::create()","hanami::model::migrator::adapter#create()","hanami::model::migrator::mysqladapter#create()","hanami::model::migrator::postgresadapter#create()","hanami::model::migrator::sqliteadapter#create()","hanami::model::migrator::sqliteadapter::memory#create()","hanami::repository::instancemethods#create()","hanami::assets::configuration#css_compressor()","hanami::utils::string#dasherize()","hanami::model::migrator::connection#database()","hanami::model::migrator::connection#database_type()","hanami::utils::hash#deep_dup()","hanami::routing::endpointresolver#default()","hanami::controller::configuration#default_charset()","hanami::mailer::configuration#default_charset()","hanami::view::configuration#default_encoding()","hanami::configuration#default_format()","hanami::controller::configuration#default_headers()","hanami::configuration#default_request_format()","hanami::controller::configuration#default_request_format()","hanami::configuration#default_response_format()","hanami::controller::configuration#default_response_format()","hanami::router::notroutableendpointerror::define()","hanami::router::notroutableendpointerror#define()","hanami::entity::classmethods#define_attr_accessor()","hanami::validations::attributedefiner::entityattributedefiner#define_attr_accessor()","hanami::clibase#define_commands()","hanami::router::notroutableendpointerror#defined?()","hanami::validations::attributedefiner::classmethods#defined_attributes()","hanami::validations::attributedefiner::entityattributedefiner#defined_attributes()","hanami::model::adapters::abstract#delete()","hanami::model::adapters::filesystemadapter#delete()","hanami::model::adapters::memory::collection#delete()","hanami::model::adapters::memory::command#delete()","hanami::model::adapters::memoryadapter#delete()","hanami::model::adapters::sql::command#delete()","hanami::model::adapters::sqladapter#delete()","hanami::repository::instancemethods#delete()","hanami::router::notroutableendpointerror#delete()","hanami::routing::namespace#delete()","hanami::utils::hash#delete()","hanami::action::request#delete_param()","hanami::mailer#deliver()","hanami::mailer::classmethods#deliver()","hanami::mailer::deliveries()","hanami::mailer::glue#delivery()","hanami::mailer::configuration#delivery_method()","hanami::utils::string#demodulize()","hanami::assets::deploy()","hanami::model::adapters::memory::query#desc()","hanami::model::adapters::sql::query#desc()","hanami::model::mapping::collection#deserialize()","hanami::model::mapping::collection#deserialize_attribute()","hanami::assets::configuration#destination_directory()","hanami::commands::generate::action#destroy()","hanami::assets::configuration#digest()","hanami::model::adapters::abstract#disconnect()","hanami::model::adapters::filesystemadapter#disconnect()","hanami::model::adapters::memoryadapter#disconnect()","hanami::model::adapters::sqladapter#disconnect()","hanami::clisubcommands::db#drop()","hanami::model::migrator::drop()","hanami::model::migrator::adapter#drop()","hanami::model::migrator::mysqladapter#drop()","hanami::model::migrator::postgresadapter#drop()","hanami::model::migrator::sqliteadapter#drop()","hanami::model::migrator::sqliteadapter::memory#drop()","hanami::model::coercer::dump()","hanami::model::migrator::mysqladapter#dump()","hanami::model::migrator::postgresadapter#dump()","hanami::model::migrator::sqliteadapter#dump()","hanami::utils::json::dump()","hanami::model::mapping::attribute#dump_coercer()","hanami::utils::duplicable::dup()","hanami::assets::dupe()","hanami::controller::dupe()","hanami::model::dupe()","hanami::view::dupe()","hanami::assets::duplicate()","hanami::assets::configuration#duplicate()","hanami::controller::duplicate()","hanami::controller::configuration#duplicate()","hanami::mailer::configuration#duplicate()","hanami::model::duplicate()","hanami::model::configuration#duplicate()","hanami::view::duplicate()","hanami::view::configuration#duplicate()","hanami::assets::duplicates()","hanami::action::cache::directives#each()","hanami::utils::loadpaths#each()","hanami::validations#each()","hanami::validations::errors#each()","hanami::validations::validationset#each()","hanami::validations::validationset#each_key()","hanami::action::flash#empty?()","hanami::validations::errors#empty?()","hanami::view::rendering::nulllocal#empty?()","hanami::config::cookies#enabled?()","hanami::config::sessions#enabled?()","hanami::utils::escape::safestring#encode()","hanami::commands::console#engine()","hanami::config::logger#engine()","hanami::mailer::rendering::templatesfinder#engines()","hanami::view::rendering::templatesfinder#engines()","hanami::model::mapping::collection#entity()","hanami::env()","hanami::env?()","hanami::environment#env_config()","hanami::router::notroutableendpointerror#env_for()","hanami::environment()","hanami::environment#environment()","hanami::environment#environment?()","hanami::utils::callbacks::methodcallback#eql?()","hanami::utils::hash#eql?()","hanami::utils::string#eql?()","hanami::validations::errors#eql?()","hanami::interactor::result#error()","hanami::action::params#errors()","hanami::action::session#errors()","hanami::interactor::result#errors()","hanami::validations::errors#errors()","hanami::utils::inflector::exception()","hanami::controller::configuration#exception_handler()","hanami::model::adapters::memory::query#exclude()","hanami::model::adapters::sql::collection#exclude()","hanami::model::adapters::sql::query#exclude()","hanami::model::adapters::abstract#execute()","hanami::model::adapters::sqladapter#execute()","hanami::model::adapters::memory::query#exist?()","hanami::model::adapters::sql::query#exist?()","hanami::hanamirc#exists?()","hanami::action::cache#expires()","hanami::action::cache::expires::classmethods#expires()","hanami::action::cache::expires::classmethods#expires_directives()","hanami::action::exposable::classmethods#expose()","hanami::classmethods#expose()","hanami::action::exposable#exposures()","hanami::action::exposable::classmethods#exposures()","hanami::action::callbacks::classmethods::extended()","hanami::classmethods::extended()","hanami::mailer::dsl::extended()","hanami::validations::attributedefiner::entityattributedefiner::extended()","hanami::view::escape::extended()","hanami::view::rendering::extended()","hanami::utils::callbacks::factory::fabricate()","hanami::validations::nestedattributes::fabricate()","hanami::interactor::result#fail!()","hanami::assets::helpers#favicon()","hanami::model::adapters::abstract#fetch()","hanami::model::adapters::sqladapter#fetch()","hanami::mailer::template#file()","hanami::assets::config::sources#files()","hanami::assets::configuration#files()","hanami::assets::config::sources#find()","hanami::assets::configuration#find()","hanami::mailer::rendering::templatesfinder#find()","hanami::model::adapters::abstract#find()","hanami::model::adapters::filesystemadapter#find()","hanami::model::adapters::implementation#find()","hanami::repository::instancemethods#find()","hanami::routing::endpointresolver#find()","hanami::routing::httprouter#find()","hanami::view::rendering::layoutfinder#find()","hanami::view::rendering::layoutfinder::find()","hanami::view::rendering::partialfinder#find()","hanami::view::rendering::partialtemplatesfinder#find()","hanami::view::rendering::templatefinder#find()","hanami::view::rendering::templatesfinder#find()","hanami::view::rendering::viewfinder#find()","hanami::view::configuration#find_partial()","hanami::action::cache::cachecontrol#finish()","hanami::action::cache::expires#finish()","hanami::action::cookiejar#finish()","hanami::action::exposable#finish()","hanami::action::glue#finish()","hanami::action::head#finish()","hanami::model::adapters::abstract#first()","hanami::model::adapters::filesystemadapter#first()","hanami::model::adapters::implementation#first()","hanami::repository::instancemethods#first()","hanami::assets::compressors::javascript::for()","hanami::assets::compressors::stylesheet::for()","hanami::assets::configuration::for()","hanami::controller::configuration::for()","hanami::model::migrator::adapter::for()","hanami::routing::parsing::parser::for()","hanami::validations::errors#for()","hanami::view::configuration::for()","hanami::http::status::for_code()","hanami::routing::forcessl#force?()","hanami::configuration#force_ssl()","hanami::action::mime#format()","hanami::controller::configuration#format()","hanami::mailer::rendering::templatesfinder#format()","hanami::view::dsl#format()","hanami::view::rendering::layoutregistry#format()","hanami::view::rendering::layoutscope#format()","hanami::view::rendering::scope#format()","hanami::view::rendering::templatefinder#format()","hanami::view::rendering::templatesfinder#format()","hanami::view::template#format()","hanami::controller::configuration#format_for()","hanami::action::mime::classmethods#format_to_mime_type()","hanami::utils::callbacks::chain#freeze()","hanami::utils::loadpaths#freeze()","hanami::action::cache#fresh()","hanami::action::cache::conditionalget#fresh?()","hanami::action::cache::etag#fresh?()","hanami::action::cache::lastmodified#fresh?()","hanami::assets::cache#fresh?()","hanami::mailer::dsl#from()","hanami::model::mapping::collectioncoercer#from_record()","hanami::routing::resource::action::generate()","hanami::routing::resource::action#generate()","hanami::routing::resource::collectionaction#generate()","hanami::routing::route#generate()","hanami::action::baseparams#get()","hanami::router::notroutableendpointerror#get()","hanami::routing::namespace#get()","hanami::utils::attributes#get()","hanami::model::migrator::connection#global_uri()","hanami::model::adapters::memory::query#group()","hanami::model::adapters::sql::collection#group()","hanami::model::adapters::sql::query#group()","hanami::utils::string#gsub()","hanami::action::throwable#halt()","hanami::validations::attributedefiner::hanami_entity?()","hanami::validations::nestedattributes#hanami_nested_attributes?()","hanami::controller::configuration#handle_exception()","hanami::configuration#handle_exceptions()","hanami::controller::configuration#handle_exceptions()","hanami::controller::configuration#handled_exception?()","hanami::utils::callbacks::methodcallback#hash()","hanami::utils::hash#hash()","hanami::utils::string#hash()","hanami::action::cache::etag#header()","hanami::action::cache::lastmodified#header()","hanami::action::cache::cachecontrol::directives#headers()","hanami::action::cache::conditionalget#headers()","hanami::action::cache::expires::directives#headers()","hanami::action::rack#headers()","hanami::assets::configuration#host()","hanami::configuration#host()","hanami::environment#host()","hanami::model::migrator::connection#host()","hanami::utils::escape::html()","hanami::view::escape::html()","hanami::utils::escape::html_attribute()","hanami::model::adapters::sql::collection#identity()","hanami::model::mapping::collection#identity()","hanami::assets::helpers#image()","hanami::action::included()","hanami::action::csrfprotection::included()","hanami::action::cache::included()","hanami::action::cache::cachecontrol::included()","hanami::action::cache::expires::included()","hanami::action::callbacks::included()","hanami::action::configurable::included()","hanami::action::exposable::included()","hanami::action::glue::included()","hanami::action::mime::included()","hanami::action::rack::included()","hanami::action::routinghelpers::included()","hanami::action::session::included()","hanami::action::throwable::included()","hanami::action::validatable::included()","hanami::assets::helpers::included()","hanami::entity::included()","hanami::interactor::included()","hanami::layout::included()","hanami::mailer::included()","hanami::presenter::included()","hanami::repository::included()","hanami::utils::classattribute::included()","hanami::validations::included()","hanami::validations::attributedefiner::included()","hanami::validations::attributedefiner::classmethods#included()","hanami::validations::form::included()","hanami::validations::predicates::included()","hanami::view::included()","hanami::model::adapters::memory::collection::primarykey#increment!()","hanami::utils::inflector::inflections()","hanami::model::adapters::filesystemadapter#info()","hanami::application::inherited()","hanami::entity::classmethods#inherited()","hanami::utils::classattribute::classmethods#inherited()","hanami::validations::attributedefiner::classmethods#inherited()","hanami::view::inheritable#inherited()","hanami::utils::loadpaths#initialize_copy()","hanami::model::adapters::sql::query#inner_join()","hanami::model::adapters::sql::collection#insert()","hanami::entity#inspect()","hanami::routing::endpoint#inspect()","hanami::routing::lazyendpoint#inspect()","hanami::utils::basicobject#inspect()","hanami::utils::hash#inspect()","hanami::view::rendering::layoutscope#inspect()","hanami::view::rendering::scope#inspect()","hanami::routing::routesinspector#inspect_routes()","hanami::router::notroutableendpointerror#inspector()","hanami::rakehelper#install()","hanami::rakehelper::install_tasks()","hanami::model::adapters::memory::query#interval()","hanami::model::adapters::sql::query#interval()","hanami::applicationname::invalid?()","hanami::assets::helpers#javascript()","hanami::assets::configuration#javascript_compressor()","hanami::model::migrator::connection#jdbc?()","hanami::action::cache::directives#join()","hanami::model::adapters::sql::query#join()","hanami::utils::pathprefix#join()","hanami::model::adapters::sql::collection#join_table()","hanami::utils::jruby?()","hanami::assets::configuration#js_compressor()","hanami::utils::hash#keys()","hanami::model::adapters::abstract#last()","hanami::model::adapters::filesystemadapter#last()","hanami::model::adapters::implementation#last()","hanami::repository::instancemethods#last()","hanami::configuration#layout()","hanami::view::configuration#layout()","hanami::view::dsl#layout()","hanami::view::rendering::instancemethods#layout()","hanami::model::adapters::sql::query#left_join()","hanami::model::adapters::sql::query#left_outer_join()","hanami::config::logger#level()","hanami::logger#level=()","hanami::model::adapters::memory::query#limit()","hanami::model::adapters::sql::collection#limit()","hanami::model::adapters::sql::query#limit()","hanami::model::coercer::load()","hanami::model::mapping::coercers::array::load()","hanami::model::mapping::coercers::bigdecimal::load()","hanami::model::mapping::coercers::boolean::load()","hanami::model::mapping::coercers::date::load()","hanami::model::mapping::coercers::datetime::load()","hanami::model::mapping::coercers::float::load()","hanami::model::mapping::coercers::hash::load()","hanami::model::mapping::coercers::integer::load()","hanami::model::mapping::coercers::set::load()","hanami::model::mapping::coercers::string::load()","hanami::model::mapping::coercers::symbol::load()","hanami::model::mapping::coercers::time::load()","hanami::model::migrator::adapter#load()","hanami::model::migrator::mysqladapter#load()","hanami::model::migrator::postgresadapter#load()","hanami::model::migrator::sqliteadapter#load()","hanami::utils::json::load()","hanami::application::load!()","hanami::assets::load!()","hanami::assets::configuration#load!()","hanami::config::loadpaths#load!()","hanami::configuration#load!()","hanami::controller::load!()","hanami::controller::configuration#load!()","hanami::layout::classmethods#load!()","hanami::loader#load!()","hanami::mailer::load!()","hanami::mailer::configuration#load!()","hanami::mailer::dsl#load!()","hanami::middleware#load!()","hanami::model::load!()","hanami::model::configuration#load!()","hanami::model::mapper#load!()","hanami::model::mapping::collection#load!()","hanami::utils::class::load!()","hanami::view::load!()","hanami::view::configuration#load!()","hanami::view::dsl#load!()","hanami::view::inheritable#load!()","hanami::view::rendering#load!()","hanami::model::mapping::attribute#load_coercer()","hanami::middleware#load_default_stack()","hanami::utils::class::load_from_pattern!()","hanami::middleware#load_middleware()","hanami::view::configuration#load_partials!()","hanami::configuration#load_paths()","hanami::view::rendering::instancemethods#local()","hanami::view::rendering::layoutscope#local()","hanami::view::rendering::instancemethods#locals()","hanami::view::rendering::layoutscope#locals()","hanami::configuration#logger()","hanami::clisubcommands::destroy#mailer()","hanami::clisubcommands::generate#mailer()","hanami::assets::configuration#manifest()","hanami::assets::configuration#manifest_path()","hanami::assets::config::sources#map()","hanami::validations::errors#map()","hanami::commands::generate::action#map_templates()","hanami::commands::generate::app#map_templates()","hanami::commands::generate::mailer#map_templates()","hanami::commands::generate::migration#map_templates()","hanami::commands::generate::model#map_templates()","hanami::commands::new::app#map_templates()","hanami::commands::new::container#map_templates()","hanami::model::mapping::attribute#mapped()","hanami::configuration#mapping()","hanami::model::configuration#mapping()","hanami::model::adapters::memory::query#max()","hanami::model::adapters::sql::query#max()","hanami::routing::resource::options#merge()","hanami::http::status::message_for()","hanami::validations::classmethods#messages()","hanami::validations::classmethods#messages_path()","hanami::view::escape#method_added()","hanami::assets::config::nulldigestmanifest#method_missing()","hanami::config::frameworkconfiguration#method_missing()","hanami::interactor::result#method_missing()","hanami::mailer#method_missing()","hanami::model::adapters::disconnectedresource#method_missing()","hanami::model::adapters::memory::query#method_missing()","hanami::model::adapters::nulladapter#method_missing()","hanami::model::adapters::sql::query#method_missing()","hanami::model::nullmapper#method_missing()","hanami::presenter#method_missing()","hanami::routes#method_missing()","hanami::routing::resource::collectionaction#method_missing()","hanami::utils::hash#method_missing()","hanami::utils::string#method_missing()","hanami::view::rendering::instancemethods#method_missing()","hanami::view::rendering::layoutscope#method_missing()","hanami::view::rendering::nulllocal#method_missing()","hanami::view::rendering::scope#method_missing()","hanami::application#middleware()","hanami::config::sessions#middleware()","hanami::configuration#middleware()","hanami::server#middleware()","hanami::clisubcommands::db#migrate()","hanami::model::migrator::migrate()","hanami::clisubcommands::destroy#migration()","hanami::clisubcommands::generate#migration()","hanami::model::migration()","hanami::model::configuration#migrations()","hanami::controller::configuration#mime_type_for()","hanami::routing::parsing::jsonparser#mime_types()","hanami::routing::parsing::parser#mime_types()","hanami::model::adapters::memory::query#min()","hanami::model::adapters::sql::query#min()","jsmin::minify()","hanami::clisubcommands::destroy#model()","hanami::clisubcommands::generate#model()","hanami::configuration#model()","hanami::container::router#mount()","hanami::router::notroutableendpointerror#mount()","hanami::routing::httprouter#mount()","hanami::application#name()","hanami::validations::validationset#names()","hanami::configuration#namespace()","hanami::mailer::configuration#namespace()","hanami::router::notroutableendpointerror#namespace()","hanami::routing::namespace#namespace()","hanami::routing::resource::action#namespace()","hanami::utils::string#namespace()","hanami::validations::classmethods#namespace()","hanami::view::configuration#namespace()","hanami::model::adapters::memory::query#negate!()","hanami::model::adapters::sql::query#negate!()","hanami::routing::route#nested_router()","hanami::action::baseparams::new()","hanami::action::cache::cachecontrol::directives::new()","hanami::action::cache::conditionalget::new()","hanami::action::cache::directives::new()","hanami::action::cache::etag::new()","hanami::action::cache::expires::directives::new()","hanami::action::cache::lastmodified::new()","hanami::action::cache::nonvaluedirective::new()","hanami::action::cache::valuedirective::new()","hanami::action::cookiejar::new()","hanami::action::flash::new()","hanami::action::mime::instancemethods::new()","hanami::action::params::new()","hanami::action::rack::file::new()","hanami::action::rack::instancemethods::new()","hanami::application::new()","hanami::applicationname::new()","hanami::assets::bundler::new()","hanami::assets::cache::new()","hanami::assets::compiler::new()","hanami::assets::compressors::builtinjavascript::new()","hanami::assets::compressors::closurejavascript::new()","hanami::assets::compressors::sassstylesheet::new()","hanami::assets::compressors::uglifierjavascript::new()","hanami::assets::compressors::unknowncompressorerror::new()","hanami::assets::compressors::yuijavascript::new()","hanami::assets::compressors::yuistylesheet::new()","hanami::assets::config::digestmanifest::new()","hanami::assets::config::nulldigestmanifest::new()","hanami::assets::config::sources::new()","hanami::assets::configuration::new()","hanami::assets::missingasset::new()","hanami::assets::missingdigestasseterror::new()","hanami::assets::missingdigestmanifesterror::new()","hanami::assets::precompiler::new()","hanami::assets::unknownassetengine::new()","hanami::cli#new()","hanami::commands::assets::precompile::new()","hanami::commands::console::new()","hanami::commands::db::abstract::new()","hanami::commands::db::console::new()","hanami::commands::db::migrate::new()","hanami::commands::generate::abstract::new()","hanami::commands::generate::action::new()","hanami::commands::generate::app::new()","hanami::commands::generate::mailer::new()","hanami::commands::generate::migration::new()","hanami::commands::generate::model::new()","hanami::commands::new::abstract::new()","hanami::commands::new::app::new()","hanami::commands::routes::new()","hanami::commands::server::new()","hanami::config::cookies::new()","hanami::config::frameworkconfiguration::new()","hanami::config::logger::new()","hanami::config::mapper::new()","hanami::config::sessions::new()","hanami::configuration::new()","hanami::container::new()","hanami::controller::configuration::new()","hanami::controller::unknownformaterror::new()","hanami::entity::new()","hanami::entity::dirtytracking::new()","hanami::environment::new()","hanami::hanamirc::new()","hanami::interactor::interface::new()","hanami::interactor::result::new()","hanami::layout::new()","hanami::loader::new()","hanami::logger::new()","hanami::mailer::new()","hanami::mailer::configuration::new()","hanami::mailer::delivery::new()","hanami::mailer::missingdeliverydataerror::new()","hanami::mailer::rendering::templatename::new()","hanami::mailer::rendering::templatesfinder::new()","hanami::mailer::template::new()","hanami::middleware::new()","hanami::model::adapters::abstract::new()","hanami::model::adapters::disconnectedadaptererror::new()","hanami::model::adapters::filesystemadapter::new()","hanami::model::adapters::memory::collection::new()","hanami::model::adapters::memory::collection::primarykey::new()","hanami::model::adapters::memory::command::new()","hanami::model::adapters::memory::query::new()","hanami::model::adapters::memoryadapter::new()","hanami::model::adapters::missingurierror::new()","hanami::model::adapters::noadaptererror::new()","hanami::model::adapters::sql::collection::new()","hanami::model::adapters::sql::command::new()","hanami::model::adapters::sql::console::new()","hanami::model::adapters::sql::consoles::mysql::new()","hanami::model::adapters::sql::consoles::postgresql::new()","hanami::model::adapters::sql::consoles::sqlite::new()","hanami::model::adapters::sql::query::new()","hanami::model::adapters::sqladapter::new()","hanami::model::checkconstraintviolationerror::new()","hanami::model::config::adapter::new()","hanami::model::config::adapternotfound::new()","hanami::model::config::mapper::new()","hanami::model::configuration::new()","hanami::model::foreignkeyconstraintviolationerror::new()","hanami::model::invalidcommanderror::new()","hanami::model::invalidqueryerror::new()","hanami::model::mapper::new()","hanami::model::mapping::attribute::new()","hanami::model::mapping::collection::new()","hanami::model::mapping::collectioncoercer::new()","hanami::model::mapping::entitynotfound::new()","hanami::model::mapping::repositorynotfound::new()","hanami::model::mapping::unmappedcollectionerror::new()","hanami::model::migrator::adapter::new()","hanami::model::migrator::connection::new()","hanami::model::migrator::sqliteadapter::new()","hanami::model::nomappingerror::new()","hanami::model::notnullconstraintviolationerror::new()","hanami::model::uniqueconstraintviolationerror::new()","hanami::presenter::new()","hanami::renderingpolicy::new()","hanami::router::notroutableendpointerror::new()","hanami::routes::new()","hanami::routing::endpointresolver::new()","hanami::routing::forcessl::new()","hanami::routing::httprouter::new()","hanami::routing::lazyendpoint::new()","hanami::routing::namespace::new()","hanami::routing::parsers::new()","hanami::routing::parsing::unknownparsererror::new()","hanami::routing::recognizedroute::new()","hanami::routing::resource::new()","hanami::routing::resource::action::new()","hanami::routing::resource::nested::new()","hanami::routing::resource::options::new()","hanami::routing::route::new()","hanami::routing::routesinspector::new()","hanami::server::new()","hanami::static::new()","hanami::utils::attributes::new()","hanami::utils::callbacks::callback::new()","hanami::utils::callbacks::chain::new()","hanami::utils::deprecation::new()","hanami::utils::hash::new()","hanami::utils::inflector::irregularrules::new()","hanami::utils::loadpaths::new()","hanami::utils::pathprefix::new()","hanami::utils::string::new()","hanami::validations::new()","hanami::validations::attribute::new()","hanami::validations::attributedefiner::new()","hanami::validations::attributedefiner::entityattributedefiner::instancemethods::new()","hanami::validations::blankvaluechecker::new()","hanami::validations::error::new()","hanami::validations::errors::new()","hanami::validations::inlinepredicate::new()","hanami::validations::namespace::new()","hanami::validations::namespace::new()","hanami::validations::validationset::new()","hanami::validations::validator::new()","hanami::view::configuration::new()","hanami::view::missingtemplateerror::new()","hanami::view::missingtemplatelayouterror::new()","hanami::view::rendering::instancemethods::new()","hanami::view::rendering::layoutfinder::new()","hanami::view::rendering::layoutregistry::new()","hanami::view::rendering::layoutscope::new()","hanami::view::rendering::nulllayout::new()","hanami::view::rendering::nulllocal::new()","hanami::view::rendering::partialfile::new()","hanami::view::rendering::partialtemplatesfinder::new()","hanami::view::rendering::scope::new()","hanami::view::rendering::template::new()","hanami::view::rendering::templatefinder::new()","hanami::view::rendering::templatename::new()","hanami::view::rendering::templatesfinder::new()","hanami::view::rendering::viewfinder::new()","hanami::view::template::new()","hanami::views::defaulttemplatefinder::new()","hanami::views::nullview::new()","hanami::welcome::new()","jsmin::parseerror::new()","hanami::view::rendering::nulllocal#nil?()","hanami::routing::httprouter#no_response()","hanami::model::adapters::memory::query#not()","hanami::model::adapters::sql::query#not()","hanami::utils::kernel::numeric?()","hanami::model::adapters::memory::query#offset()","hanami::model::adapters::sql::collection#offset()","hanami::model::adapters::sql::query#offset()","hanami::hanamirc#options()","hanami::router::notroutableendpointerror#options()","hanami::routing::httprouter#options()","hanami::routing::namespace#options()","hanami::model::adapters::memory::query#or()","hanami::model::adapters::sql::collection#or()","hanami::model::adapters::sql::query#or()","hanami::model::adapters::memory::query#order()","hanami::model::adapters::sql::collection#order()","hanami::model::adapters::sql::query#order()","hanami::model::adapters::sql::collection#order_more()","hanami::action::params::params()","hanami::action::request#params()","hanami::action::validatable::classmethods#params()","hanami::action::rack::classmethods#params_class()","hanami::routing::parsing::jsonparser#parse()","hanami::routing::parsing::parser#parse()","hanami::model::migrator::connection#parsed_uri()","hanami::view::rendering::partialfinder#partial_name()","hanami::view::rendering::partialfinder#partial_template_under_view_path()","hanami::routing::httprouter#pass_on_response()","hanami::model::migrator::connection#password()","hanami::router::notroutableendpointerror#patch()","hanami::routing::namespace#patch()","hanami::router::notroutableendpointerror#path()","hanami::routes#path()","hanami::configuration#path_prefix()","hanami::model::adapters::abstract#persist()","hanami::model::adapters::implementation#persist()","hanami::repository::instancemethods#persist()","hanami::utils::inflector::pluralize()","hanami::utils::string#pluralize()","hanami::assets::configuration#port()","hanami::configuration#port()","hanami::environment#port()","hanami::model::migrator::connection#port()","hanami::router::notroutableendpointerror#post()","hanami::routing::namespace#post()","hanami::commands::generate::action#post_process_templates()","hanami::commands::generate::app#post_process_templates()","hanami::commands::new::app#post_process_templates()","hanami::commands::new::container#post_process_templates()","hanami::clisubcommands::assets#precompile()","hanami::validations::classmethods#predicate()","hanami::validations::classmethods#predicates()","hanami::assets::configuration#prefix()","hanami::view::rendering::partialfinder#prefix()","hanami::application::preload!()","hanami::application::preload_applications!()","hanami::clisubcommands::db#prepare()","hanami::controller::configuration#prepare()","hanami::mailer#prepare()","hanami::mailer::configuration#prepare()","hanami::model::migrator::prepare()","hanami::view::configuration#prepare()","hanami::interactor::result#prepare!()","hanami::view::rendering::layoutregistry#prepare!()","hanami::middleware#prepend()","hanami::utils::callbacks::chain#prepend()","hanami::action::callbacks::classmethods#prepend_after()","hanami::action::callbacks::classmethods#prepend_before()","hanami::public_directory()","hanami::assets::configuration#public_directory()","hanami::assets::config::globalsources#push()","hanami::utils::loadpaths#push()","hanami::router::notroutableendpointerror#put()","hanami::routing::namespace#put()","hanami::model::adapters::abstract#query()","hanami::model::adapters::filesystemadapter#query()","hanami::model::adapters::memoryadapter#query()","hanami::model::adapters::sqladapter#query()","hanami::action::rack::classmethods#rack_builder()","hanami::cli#rackserver()","hanami::environment#rackup()","hanami::server#rackup_config()","jsmin::raise()","hanami::view::rendering::template#raise_missing_template_error()","hanami::model::adapters::memory::query#range()","hanami::model::adapters::sql::query#range()","hanami::action::params#raw()","hanami::routing::httprouter#raw_call()","hanami::routing::httprouter#raw_path()","hanami::routing::httprouter#raw_url()","hanami::assets::compressors::abstract#read()","hanami::config::loadpaths#realpath()","hanami::router::notroutableendpointerror#recognize()","hanami::mailer::rendering::templatesfinder#recursive()","hanami::view::rendering::templatesfinder#recursive()","hanami::router::notroutableendpointerror#redirect()","hanami::routing::namespace#redirect()","hanami::layout::classmethods#registry()","hanami::utils::pathprefix#relative!()","hanami::utils::pathprefix#relative_join()","hanami::view::rendering::partialfinder#relative_partial_path()","hanami::commands::console::methods#reload!()","hanami::layout#render()","hanami::mailer#render()","hanami::mailer::template#render()","hanami::renderingpolicy#render()","hanami::view::rendering#render()","hanami::view::rendering::instancemethods#render()","hanami::view::rendering::layoutscope#render()","hanami::view::rendering::nulllayout#render()","hanami::view::rendering::nulltemplate#render()","hanami::view::rendering::template#render()","hanami::view::template#render()","hanami::views::default::render()","hanami::views::nullview#render()","hanami::action::glue#renderable?()","hanami::view::rendering::instancemethods#rendered()","hanami::view::rendering::layoutscope#renderer()","hanami::model::mapping::collection#repository()","hanami::action::rack#request()","hanami::action::rack#request_id()","hanami::environment#require_application_environment()","hanami::assets::configuration#reset!()","hanami::controller::configuration#reset!()","hanami::mailer::configuration#reset!()","hanami::model::configuration#reset!()","hanami::routing::httprouter#reset!()","hanami::view::configuration#reset!()","hanami::assets::config::digestmanifest#resolve()","hanami::routing::endpointresolver#resolve()","hanami::view::rendering::layoutregistry#resolve()","hanami::view::rendering::registry#resolve()","hanami::router::notroutableendpointerror#resource()","hanami::routing::namespace#resource()","hanami::routing::resource#resource()","hanami::routing::resource::action#resource_name()","hanami::router::notroutableendpointerror#resources()","hanami::routing::namespace#resources()","hanami::routing::resource#resources()","hanami::utils::basicobject#respond_to?()","hanami::view::rendering::layoutscope#respond_to?()","hanami::interactor::result#respond_to_missing?()","hanami::presenter#respond_to_missing?()","hanami::utils::hash#respond_to_missing?()","hanami::utils::string#respond_to_missing?()","hanami::view::rendering::layoutscope#respond_to_missing?()","hanami::view::rendering::scope#respond_to_missing?()","hanami::action::rack#response()","hanami::model::adapters::memory::query#reverse_order()","hanami::model::adapters::sql::query#reverse_order()","hanami::routing::httprouter#rewrite_partial_path_info()","hanami::root()","hanami::assets::configuration#root()","hanami::configuration#root()","hanami::environment#root()","hanami::mailer::configuration#root()","hanami::mailer::rendering::templatesfinder#root()","hanami::model::configuration#root()","hanami::router::notroutableendpointerror#root()","hanami::view::configuration#root()","hanami::view::dsl#root()","hanami::view::rendering::templatesfinder#root()","hanami::routing::recognizedroute#routable?()","hanami::cli#routes()","hanami::configuration#routes()","hanami::router::notroutableendpointerror#routes()","hanami::utils::string#rsub()","hanami::utils::rubinius?()","hanami::assets::bundler#run()","hanami::assets::precompiler#run()","hanami::model::adapters::sql::query#run()","hanami::utils::callbacks::chain#run()","hanami::utils::string#scan()","hanami::model::configuration#schema()","hanami::assets::configuration#scheme()","hanami::configuration#scheme()","hanami::view::rendering::template#scope()","hanami::model::adapters::sql::query#scoped()","hanami::mailer::rendering::templatesfinder#search_path()","hanami::view::rendering::templatesfinder#search_path()","hanami::configuration#security()","hanami::model::adapters::memory::query#select()","hanami::model::adapters::sql::collection#select()","hanami::model::adapters::sql::query#select()","hanami::model::adapters::sql::collection#select_all()","hanami::action::glue#sending_file?()","hanami::mailer::rendering::templatesfinder#separator()","hanami::view::rendering::templatesfinder#separator()","hanami::model::mapping::collection#serialize()","hanami::environment#serve_static_assets?()","hanami::cli#server()","hanami::action::request#session()","hanami::action::session#session()","hanami::configuration#sessions()","hanami::utils::attributes#set()","hanami::utils::io::silence_warnings()","hanami::utils::inflector::singularize()","hanami::utils::string#singularize()","hanami::validations::errors#size()","range#size()","hanami::assets::sources()","hanami::assets::configuration#sources()","hanami::utils::string#split()","hanami::configuration#ssl?()","hanami::commands::assets::precompile#start()","hanami::commands::console#start()","hanami::commands::db::abstract#start()","hanami::commands::db::apply#start()","hanami::commands::db::console#start()","hanami::commands::db::create#start()","hanami::commands::db::drop#start()","hanami::commands::db::migrate#start()","hanami::commands::db::prepare#start()","hanami::commands::db::version#start()","hanami::commands::new::abstract#start()","hanami::commands::routes#start()","hanami::commands::server#start()","hanami::action::throwable#status()","hanami::assets::cache#store()","hanami::config::logger#stream()","hanami::utils::hash#stringify!()","hanami::assets::helpers#stylesheet()","hanami::assets::configuration#stylesheet_compressor()","hanami::view::inheritable#subclasses()","hanami::mailer::dsl#subject()","hanami::interactor::result#success?()","hanami::layout::classmethods#suffix()","hanami::model::adapters::memory::query#sum()","hanami::model::adapters::sql::query#sum()","hanami::utils::hash#symbolize!()","hanami::model::adapters::sql::collection#table_name()","hanami::layout#template()","hanami::layout::classmethods#template()","hanami::mailer::dsl#template()","hanami::view::dsl#template()","hanami::view::rendering::instancemethods#template()","hanami::view::rendering::partial#template()","hanami::view::rendering::template#template()","hanami::mailer::rendering::templatesfinder#template_name()","hanami::view::rendering::partialfinder#template_name()","hanami::view::rendering::templatefinder#template_name()","hanami::view::rendering::templatesfinder#template_name()","hanami::commands::generate::action#template_options()","hanami::commands::generate::app#template_options()","hanami::commands::generate::mailer#template_options()","hanami::commands::generate::model#template_options()","hanami::commands::new::app#template_options()","hanami::commands::new::container#template_options()","hanami::commands::generate::abstract#template_source_path()","hanami::configuration#templates()","hanami::mailer::dsl#templates()","hanami::view::rendering::layoutregistry#templates()","hanami::view::rendering::templatesfinder#templates_path()","hanami::mailer::delivery#test()","hanami::views::default#title()","hanami::utils::string#titleize()","hanami::mailer::dsl#to()","hanami::model::adapters::sql::collection#to_a()","hanami::utils::hash#to_a()","hanami::validations::errors#to_a()","hanami::mailer::delivery#to_config()","hanami::applicationname#to_env_s()","hanami::action::baseparams#to_h()","hanami::action::params#to_h()","hanami::entity#to_h()","hanami::utils::attributes#to_h()","hanami::utils::hash#to_h()","hanami::validations#to_h()","hanami::validations::errors#to_h()","hanami::action::baseparams#to_hash()","hanami::action::params#to_hash()","hanami::utils::hash#to_hash()","hanami::environment#to_options()","hanami::routing::resource::nested#to_path()","hanami::config::mapper#to_proc()","hanami::model::config::mapper#to_proc()","hanami::validations::inlinepredicate#to_proc()","hanami::model::mapping::collectioncoercer#to_record()","hanami::applicationname#to_s()","hanami::entity#to_s()","hanami::mailer::rendering::templatename#to_s()","hanami::routing::routesinspector#to_s()","hanami::utils::escape::safestring#to_s()","hanami::utils::string#to_s()","hanami::validations::namespace#to_s()","hanami::view::rendering::templatename#to_s()","hanami::action::cache::nonvaluedirective#to_str()","hanami::action::cache::valuedirective#to_str()","hanami::applicationname#to_str()","hanami::utils::string#to_str()","hanami::view::rendering::nulllocal#to_str()","hanami::utils::string#tokenize()","hanami::router::notroutableendpointerror#trace()","hanami::routing::namespace#trace()","hanami::model::adapters::abstract#transaction()","hanami::model::adapters::memoryadapter#transaction()","hanami::model::adapters::sqladapter#transaction()","hanami::repository::instancemethods#transaction()","hanami::utils::inflector::uncountable()","hanami::utils::string#underscore()","hanami::mailer::configuration#unload!()","hanami::model::unload!()","hanami::model::configuration#unload!()","hanami::view::configuration#unload!()","hanami::entity#update()","hanami::model::adapters::abstract#update()","hanami::model::adapters::filesystemadapter#update()","hanami::model::adapters::memory::collection#update()","hanami::model::adapters::memory::command#update()","hanami::model::adapters::memoryadapter#update()","hanami::model::adapters::sql::collection#update()","hanami::model::adapters::sql::command#update()","hanami::model::adapters::sqladapter#update()","hanami::repository::instancemethods#update()","hanami::action::request#update_param()","hanami::model::migrator::connection#uri()","hanami::router::notroutableendpointerror#url()","hanami::routes#url()","hanami::utils::escape::url()","hanami::action::rack::classmethods#use()","hanami::middleware#use()","hanami::model::migrator::connection#user()","hanami::action::cache::nonvaluedirective#valid?()","hanami::action::cache::valuedirective#valid?()","hanami::action::params#valid?()","hanami::validations#validate()","hanami::validations::attribute#validate()","hanami::validations::validator#validate()","hanami::validations::attributedefiner::entityattributedefiner#validates()","hanami::validations::classmethods#validations()","hanami::action::cache::directives#values()","hanami::action::request#values_at()","hanami::routing::recognizedroute#verb()","hanami::cli#version()","hanami::clisubcommands::db#version()","hanami::model::migrator::version()","hanami::model::migrator::adapter#version()","hanami::assets::helpers#video()","hanami::configuration#view()","hanami::view::rendering::layoutscope#view()","hanami::configuration#view_pattern()","hanami::view::rendering::partialfinder#view_template_dir()","hanami::view::inheritable#views()","hanami::model::adapters::memory::query#where()","hanami::model::adapters::sql::collection#where()","hanami::model::adapters::sql::query#where()","hanami::routing::resource#wildcard_param()","hanami::routing::resources#wildcard_param()","hanami::config::security#x_frame_options()",""],"info":[["Boolean","","classes/Boolean.html","","<p>Define top level constant Boolean, so it can be easily used by other\nlibraries in coercions DSLs\n<p>@since …\n"],["CarRepository","","classes/CarRepository.html","",""],["Dry","","classes/Dry.html","",""],["Dry::Validation","","classes/Dry/Validation.html","",""],["Dry::Validation::Messages","","classes/Dry/Validation/Messages.html","",""],["Hanami","","classes/Hanami.html","","<p>A complete web framework for Ruby\n<p>@since 0.1.0\n<p>@see hanamirb.org\n"],["Hanami::Action","","classes/Hanami/Action.html","","<p>An HTTP endpoint\n<p>@since 0.1.0\n<p>@example\n"],["Hanami::Action::BaseParams","","classes/Hanami/Action/BaseParams.html","",""],["Hanami::Action::CSRFProtection","","classes/Hanami/Action/CSRFProtection.html","","<p>CSRF Protection\n<p>This security mechanism is enabled automatically if sessions are turned on.\n<p>It stores a …\n"],["Hanami::Action::Cache","","classes/Hanami/Action/Cache.html","","<p>Cache type API\n<p>@since 0.3.0\n<p>@see Hanami::Action::Cache::ClassMethods#cache_control @see\nHanami::Action::Cache::ClassMethods#expires …\n"],["Hanami::Action::Cache::CacheControl","","classes/Hanami/Action/Cache/CacheControl.html","","<p>Module with Cache-Control logic\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::CacheControl::ClassMethods","","classes/Hanami/Action/Cache/CacheControl/ClassMethods.html","",""],["Hanami::Action::Cache::CacheControl::Directives","","classes/Hanami/Action/Cache/CacheControl/Directives.html","","<p>Class which stores CacheControl values\n<p>@since 0.3.0\n<p>@api private\n"],["Hanami::Action::Cache::ConditionalGet","","classes/Hanami/Action/Cache/ConditionalGet.html","","<p>Class responsible to determine if a given request is fresh based on\nIF_NONE_MATCH and IF_MODIFIED_SINCE …\n"],["Hanami::Action::Cache::Directives","","classes/Hanami/Action/Cache/Directives.html","","<p>Collection of value and non value directives\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::ETag","","classes/Hanami/Action/Cache/ETag.html","","<p>ETag value object\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::Expires","","classes/Hanami/Action/Cache/Expires.html","","<p>Module with Expires logic\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::Expires::ClassMethods","","classes/Hanami/Action/Cache/Expires/ClassMethods.html","",""],["Hanami::Action::Cache::Expires::Directives","","classes/Hanami/Action/Cache/Expires/Directives.html","","<p>Class which stores Expires directives\n<p>@since 0.3.0\n<p>@api private\n"],["Hanami::Action::Cache::LastModified","","classes/Hanami/Action/Cache/LastModified.html","","<p>LastModified value object\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::NonValueDirective","","classes/Hanami/Action/Cache/NonValueDirective.html","","<p>Class representing non value directives\n<p>ex: no-cache\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Cache::ValueDirective","","classes/Hanami/Action/Cache/ValueDirective.html","","<p>Class representing value directives\n<p>ex: max-age=600\n<p>@since 0.3.0 @api private\n"],["Hanami::Action::Callable","","classes/Hanami/Action/Callable.html","",""],["Hanami::Action::Callbacks","","classes/Hanami/Action/Callbacks.html","","<p>Before and after callbacks\n<p>@since 0.1.0 @see Hanami::Action::ClassMethods#before @see\nHanami::Action::ClassMethods#after …\n"],["Hanami::Action::Callbacks::ClassMethods","","classes/Hanami/Action/Callbacks/ClassMethods.html","","<p>Callbacks API class methods\n<p>@since 0.1.0 @api private\n"],["Hanami::Action::Callbacks::InstanceMethods","","classes/Hanami/Action/Callbacks/InstanceMethods.html","","<p>Callbacks API instance methods\n<p>@since 0.1.0 @api private\n"],["Hanami::Action::Configurable","","classes/Hanami/Action/Configurable.html","","<p>Configuration API\n<p>@since 0.2.0\n<p>@see Hanami::Controller::Configuration\n"],["Hanami::Action::CookieJar","","classes/Hanami/Action/CookieJar.html","","<p>A set of HTTP Cookies\n<p>It acts as an Hash\n<p>@since 0.1.0\n"],["Hanami::Action::Cookies","","classes/Hanami/Action/Cookies.html","","<p>Cookies API\n<p>This module isn&#39;t included by default.\n<p>@since 0.1.0\n"],["Hanami::Action::Exposable","","classes/Hanami/Action/Exposable.html","","<p>Exposures API\n<p>@since 0.1.0\n<p>@see Hanami::Action::Exposable::ClassMethods#expose\n"],["Hanami::Action::Exposable::ClassMethods","","classes/Hanami/Action/Exposable/ClassMethods.html","","<p>Exposures API class methods\n<p>@since 0.1.0 @api private\n"],["Hanami::Action::Flash","","classes/Hanami/Action/Flash.html","","<p>Container useful to transport data with the HTTP session It has a life span\nof one HTTP request or redirect. …\n"],["Hanami::Action::Glue","","classes/Hanami/Action/Glue.html","","<p>Glue code for full stack Hanami applications\n<p>This includes missing rendering logic that it makes sense …\n"],["Hanami::Action::Head","","classes/Hanami/Action/Head.html","","<p>Ensures to not send body or headers for HEAD requests and/or for status\ncodes that doesn&#39;t allow …\n"],["Hanami::Action::InvalidCSRFTokenError","","classes/Hanami/Action/InvalidCSRFTokenError.html","","<p>Invalid CSRF Token\n<p>@since 0.4.0\n"],["Hanami::Action::Mime","","classes/Hanami/Action/Mime.html","","<p>Mime type API\n<p>@since 0.1.0\n<p>@see Hanami::Action::Mime::ClassMethods#accept\n"],["Hanami::Action::Mime::ClassMethods","","classes/Hanami/Action/Mime/ClassMethods.html","",""],["Hanami::Action::Mime::InstanceMethods","","classes/Hanami/Action/Mime/InstanceMethods.html","","<p>@since x.x.x @api private\n"],["Hanami::Action::Params","","classes/Hanami/Action/Params.html","","<p>A set of params requested by the client\n<p>It&#39;s able to extract the relevant params from a Rack env of …\n"],["Hanami::Action::Rack","","classes/Hanami/Action/Rack.html","","<p>Rack integration API\n<p>@since 0.1.0\n"],["Hanami::Action::Rack::Callable","","classes/Hanami/Action/Rack/Callable.html","",""],["Hanami::Action::Rack::ClassMethods","","classes/Hanami/Action/Rack/ClassMethods.html","",""],["Hanami::Action::Rack::File","","classes/Hanami/Action/Rack/File.html","","<p>File to be sent\n<p>@since 0.4.3 @api private\n<p>@see Hanami::Action::Rack#send_file\n"],["Hanami::Action::Rack::InstanceMethods","","classes/Hanami/Action/Rack/InstanceMethods.html","","<p>@since x.x.x @api private\n"],["Hanami::Action::Redirect","","classes/Hanami/Action/Redirect.html","","<p>HTTP redirect API\n<p>@since 0.1.0\n"],["Hanami::Action::Request","","classes/Hanami/Action/Request.html","","<p>An HTTP request based on top of Rack::Request. This guarantees backwards\ncompatibility with with Rack …\n"],["Hanami::Action::RoutingHelpers","","classes/Hanami/Action/RoutingHelpers.html","","<p>Routing helper for full stack Hanami web applications.\n<p>For a given application called <code>Web::Application</code> …\n"],["Hanami::Action::Session","","classes/Hanami/Action/Session.html","","<p>Session API\n<p>This module isn&#39;t included by default.\n<p>@since 0.1.0\n"],["Hanami::Action::Throwable","","classes/Hanami/Action/Throwable.html","","<p>Throw API\n<p>@since 0.1.0\n<p>@see Hanami::Action::Throwable::ClassMethods#handle_exception @see\nHanami::Action::Throwable#halt …\n"],["Hanami::Action::Throwable::ClassMethods","","classes/Hanami/Action/Throwable/ClassMethods.html","","<p>Throw API class methods\n<p>@since 0.1.0 @api private\n"],["Hanami::Action::Validatable","","classes/Hanami/Action/Validatable.html","",""],["Hanami::Action::Validatable::ClassMethods","","classes/Hanami/Action/Validatable/ClassMethods.html","","<p>Validatable API class methods\n<p>@since 0.1.0 @api private\n"],["Hanami::Application","","classes/Hanami/Application.html","","<p>A full stack Hanami application\n<p>@since 0.1.0\n<p>@example\n"],["Hanami::ApplicationName","","classes/Hanami/ApplicationName.html","","<p>An application name.\n<p>@since 0.2.1\n"],["Hanami::Assets","","classes/Hanami/Assets.html","","<p>Assets management for Ruby web applications\n<p>@since 0.1.0\n"],["Hanami::Assets::Bundler","","classes/Hanami/Assets/Bundler.html","","<p>Bundle assets from a single application.\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Cache","","classes/Hanami/Assets/Cache.html","","<p>Store assets references when compile mode is on.\n<p>This is especially useful in development mode, where …\n"],["Hanami::Assets::Compiler","","classes/Hanami/Assets/Compiler.html","","<p>Assets compiler\n<p>It compiles assets that needs to be preprocessed (eg. Sass or ES6) into the\ndestination …\n"],["Hanami::Assets::Compressors","","classes/Hanami/Assets/Compressors.html","",""],["Hanami::Assets::Compressors::Abstract","","classes/Hanami/Assets/Compressors/Abstract.html","","<p>Abstract base class for compressors.\n<p>Don&#39;t use this class directly, but please use subclasses instead. …\n"],["Hanami::Assets::Compressors::BuiltinJavascript","","classes/Hanami/Assets/Compressors/BuiltinJavascript.html","","<p>Builtin compressor for stylesheet\n<p>This is a port of jsmin Copyright © 2002 Douglas Crockford \n(www.crockford.com …\n"],["Hanami::Assets::Compressors::BuiltinStylesheet","","classes/Hanami/Assets/Compressors/BuiltinStylesheet.html","","<p>Builtin compressor for stylesheet\n<p>This is a basic algorithm based on Scott Becker (@sbecker) work on  …\n"],["Hanami::Assets::Compressors::ClosureJavascript","","classes/Hanami/Assets/Compressors/ClosureJavascript.html","","<p>Google Closure Compiler for JavaScript\n<p>Depends on <code>closure-compiler</code> gem\n<p>@see developers.google.com/closure/compiler …\n"],["Hanami::Assets::Compressors::Javascript","","classes/Hanami/Assets/Compressors/Javascript.html","","<p>Base class for JavaScript compressors\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::NullCompressor","","classes/Hanami/Assets/Compressors/NullCompressor.html","","<p>No-op, it returns the asset contents without to compress them.\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::SassStylesheet","","classes/Hanami/Assets/Compressors/SassStylesheet.html","","<p>Sass compressor for stylesheet\n<p>It depends on <code>sass</code> gem.\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::Stylesheet","","classes/Hanami/Assets/Compressors/Stylesheet.html","","<p>Base class for stylesheet compressors\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::UglifierJavascript","","classes/Hanami/Assets/Compressors/UglifierJavascript.html","","<p>Uglifier compressor for JavaScript\n<p>It depends on <code>uglifier</code> gem\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::UnknownCompressorError","","classes/Hanami/Assets/Compressors/UnknownCompressorError.html","","<p>Unknown compressor error\n<p>It&#39;s raised when trying to load an unknown compressor.\n<p>@since 0.1.0 @api private …\n"],["Hanami::Assets::Compressors::YuiJavascript","","classes/Hanami/Assets/Compressors/YuiJavascript.html","","<p>YUI Compressor for JavaScript\n<p>It depends on <code>yui-compressor</code> gem\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Compressors::YuiStylesheet","","classes/Hanami/Assets/Compressors/YuiStylesheet.html","","<p>YUI Compressor for stylesheet\n<p>It depends on <code>yui-compressor</code> gem\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Config","","classes/Hanami/Assets/Config.html","","<p>Configuration settings\n<p>@since 0.1.0 @api private\n<p>Configuration settings\n"],["Hanami::Assets::Config::DigestManifest","","classes/Hanami/Assets/Config/DigestManifest.html","","<p>Digest manifest\n<p>@since 0.1.0 @api private\n"],["Hanami::Assets::Config::GlobalSources","","classes/Hanami/Assets/Config/GlobalSources.html","","<p>Global asset sources across all the duplicated <code>Hanami::Assets</code>\ninstances.\n<p>@since 0.1.0 @api private\n<p>@see …\n"],["Hanami::Assets::Config::NullDigestManifest","","classes/Hanami/Assets/Config/NullDigestManifest.html","","<p>Default value for configuration&#39;s digest manifest.\n<p>It indicates that the digest manifest wasn&#39;t …\n"],["Hanami::Assets::Config::Sources","","classes/Hanami/Assets/Config/Sources.html","","<p>Source directories for a specific application\n<p>@since 0.1.0 @api private\n<p>@see Hanami::Assets.duplicate @see …\n"],["Hanami::Assets::Configuration","","classes/Hanami/Assets/Configuration.html","","<p>Framework configuration\n<p>@since 0.1.0\n"],["Hanami::Assets::Error","","classes/Hanami/Assets/Error.html","","<p>Base error for Hanami::Assets\n<p>All the errors defined in this framework MUST inherit from it.\n<p>@since 0.1.0 …\n"],["Hanami::Assets::Helpers","","classes/Hanami/Assets/Helpers.html","","<p>HTML assets helpers\n<p>Include this helper in a view\n<p>@since 0.1.0\n"],["Hanami::Assets::MissingAsset","","classes/Hanami/Assets/MissingAsset.html","",""],["Hanami::Assets::MissingDigestAssetError","","classes/Hanami/Assets/MissingDigestAssetError.html","","<p>This error is raised when an asset is referenced from the DOM, but it&#39;s\nnot present in the digest …\n"],["Hanami::Assets::MissingDigestManifestError","","classes/Hanami/Assets/MissingDigestManifestError.html","","<p>This error is raised when the application starts but can&#39;t be load the\ndigest manifest.\n<p>@since 0.1.0 …\n"],["Hanami::Assets::Precompiler","","classes/Hanami/Assets/Precompiler.html","","<p>Precompile all the assets, coming from all the applications and third party\ngems into the public directory …\n"],["Hanami::Assets::UnknownAssetEngine","","classes/Hanami/Assets/UnknownAssetEngine.html","",""],["Hanami::ClassMethods","","classes/Hanami/ClassMethods.html","","<p>@since 0.5.0 @api private\n"],["Hanami::Cli","","classes/Hanami/Cli.html","",""],["Hanami::CliBase","","classes/Hanami/CliBase.html","",""],["Hanami::CliSubCommands","","classes/Hanami/CliSubCommands.html","",""],["Hanami::CliSubCommands::Assets","","classes/Hanami/CliSubCommands/Assets.html","","<p>A set of subcommands related to assets\n<p>It is run with:\n\n<pre><code>`bundle exec hanami assets`\n</code></pre>\n"],["Hanami::CliSubCommands::DB","","classes/Hanami/CliSubCommands/DB.html","","<p>A set of subcommands related to DB\n<p>It is run with:\n\n<pre><code>`bundle exec hanami db`\n</code></pre>\n"],["Hanami::CliSubCommands::Destroy","","classes/Hanami/CliSubCommands/Destroy.html","",""],["Hanami::CliSubCommands::Generate","","classes/Hanami/CliSubCommands/Generate.html","","<p>A set of generator subcommands\n<p>It is run with:\n\n<pre><code>`bundle exec hanami generate`\n</code></pre>\n"],["Hanami::Commands","","classes/Hanami/Commands.html","",""],["Hanami::Commands::Assets","","classes/Hanami/Commands/Assets.html","",""],["Hanami::Commands::Assets::Precompile","","classes/Hanami/Commands/Assets/Precompile.html","",""],["Hanami::Commands::Console","","classes/Hanami/Commands/Console.html","","<p>REPL that supports different engines.\n<p>It is run with:\n\n<pre><code>`bundle exec hanami console`\n</code></pre>\n"],["Hanami::Commands::Console::Methods","","classes/Hanami/Commands/Console/Methods.html","",""],["Hanami::Commands::DB","","classes/Hanami/Commands/DB.html","",""],["Hanami::Commands::DB::Abstract","","classes/Hanami/Commands/DB/Abstract.html","",""],["Hanami::Commands::DB::Apply","","classes/Hanami/Commands/DB/Apply.html","",""],["Hanami::Commands::DB::Console","","classes/Hanami/Commands/DB/Console.html","",""],["Hanami::Commands::DB::Create","","classes/Hanami/Commands/DB/Create.html","",""],["Hanami::Commands::DB::Drop","","classes/Hanami/Commands/DB/Drop.html","",""],["Hanami::Commands::DB::Migrate","","classes/Hanami/Commands/DB/Migrate.html","",""],["Hanami::Commands::DB::Prepare","","classes/Hanami/Commands/DB/Prepare.html","",""],["Hanami::Commands::DB::Version","","classes/Hanami/Commands/DB/Version.html","",""],["Hanami::Commands::Generate","","classes/Hanami/Commands/Generate.html","",""],["Hanami::Commands::Generate::Abstract","","classes/Hanami/Commands/Generate/Abstract.html","",""],["Hanami::Commands::Generate::Action","","classes/Hanami/Commands/Generate/Action.html","",""],["Hanami::Commands::Generate::App","","classes/Hanami/Commands/Generate/App.html","",""],["Hanami::Commands::Generate::Mailer","","classes/Hanami/Commands/Generate/Mailer.html","","<p>@since 0.5.0 @api private\n"],["Hanami::Commands::Generate::Migration","","classes/Hanami/Commands/Generate/Migration.html","",""],["Hanami::Commands::Generate::Model","","classes/Hanami/Commands/Generate/Model.html","",""],["Hanami::Commands::New","","classes/Hanami/Commands/New.html","",""],["Hanami::Commands::New::Abstract","","classes/Hanami/Commands/New/Abstract.html","",""],["Hanami::Commands::New::App","","classes/Hanami/Commands/New/App.html","",""],["Hanami::Commands::New::Container","","classes/Hanami/Commands/New/Container.html","",""],["Hanami::Commands::Routes","","classes/Hanami/Commands/Routes.html","","<p>Display application/container routes.\n<p>It is run with:\n\n<pre><code>`bundle exec hanami routes`\n</code></pre>\n"],["Hanami::Commands::Server","","classes/Hanami/Commands/Server.html","",""],["Hanami::Config","","classes/Hanami/Config.html","",""],["Hanami::Config::Configure","","classes/Hanami/Config/Configure.html","","<p>Define configuration of application of a specific environment\n<p>@since 0.2.0 @api private\n"],["Hanami::Config::Cookies","","classes/Hanami/Config/Cookies.html","","<p>Cookies configuration\n<p>@since 0.3.0 @api private\n"],["Hanami::Config::FrameworkConfiguration","","classes/Hanami/Config/FrameworkConfiguration.html","","<p>Collects all the settings for a given framework configuration and then\nforwards them when the application …\n"],["Hanami::Config::LoadPaths","","classes/Hanami/Config/LoadPaths.html","","<p>Define the load paths where the application should load\n<p>@since 0.1.0 @api private\n"],["Hanami::Config::Logger","","classes/Hanami/Config/Logger.html","","<p>Logger configuration\n<p>@since x.x.x\n"],["Hanami::Config::Mapper","","classes/Hanami/Config/Mapper.html","","<p>Define a mapping for Hanami::Model\n<p>@since 0.1.0 @api private\n"],["Hanami::Config::Mapping","","classes/Hanami/Config/Mapping.html","",""],["Hanami::Config::Routes","","classes/Hanami/Config/Routes.html","","<p>Defines a route set\n<p>@since 0.1.0 @api private\n"],["Hanami::Config::Security","","classes/Hanami/Config/Security.html","","<p>Security policies are stored here.\n<p>@since 0.3.0\n"],["Hanami::Config::Sessions","","classes/Hanami/Config/Sessions.html","","<p>Sessions configuration\n<p>@since 0.2.0 @api private\n"],["Hanami::Configuration","","classes/Hanami/Configuration.html","","<p>Configuration for a Hanami application\n<p>@since 0.1.0\n"],["Hanami::Container","","classes/Hanami/Container.html","",""],["Hanami::Container::Router","","classes/Hanami/Container/Router.html","",""],["Hanami::Controller","","classes/Hanami/Controller.html","","<p>A set of logically grouped actions\n<p>@since 0.1.0\n<p>@see Hanami::Action\n"],["Hanami::Controller::Configuration","","classes/Hanami/Controller/Configuration.html","","<p>Configuration for the framework, controllers and actions.\n<p>Hanami::Controller has its own global configuration …\n"],["Hanami::Controller::Error","","classes/Hanami/Controller/Error.html","","<p>@since 0.5.0\n"],["Hanami::Controller::UnknownFormatError","","classes/Hanami/Controller/UnknownFormatError.html","","<p>Unknown format error\n<p>This error is raised when a action sets a format that it isn&#39;t\nrecognized both …\n"],["Hanami::Entity","","classes/Hanami/Entity.html","","<p>An object that is defined by its identity. See “Domain Driven Design” by\nEric Evans.\n<p>An entity …\n"],["Hanami::Entity::ClassMethods","","classes/Hanami/Entity/ClassMethods.html","",""],["Hanami::Entity::DirtyTracking","","classes/Hanami/Entity/DirtyTracking.html","","<p>Dirty tracking for entities\n<p>@since 0.3.1\n<p>@example Dirty tracking\n"],["Hanami::Environment","","classes/Hanami/Environment.html","","<p>Define and expose information about the Hanami environment.\n<p>@since 0.1.0 @api private\n"],["Hanami::Generators","","classes/Hanami/Generators.html","",""],["Hanami::Generators::DatabaseConfig","","classes/Hanami/Generators/DatabaseConfig.html","",""],["Hanami::Generators::TemplateEngine","","classes/Hanami/Generators/TemplateEngine.html","",""],["Hanami::Hanamirc","","classes/Hanami/Hanamirc.html","","<p>Read the .hanamirc file in the root of the application\n<p>@since 0.3.0 @api private\n"],["Hanami::Http","","classes/Hanami/Http.html","",""],["Hanami::Http::Status","","classes/Hanami/Http/Status.html","","<p>An HTTP status\n<p>@since 0.1.0 @api private\n"],["Hanami::Interactor","","classes/Hanami/Interactor.html","","<p>Hanami Interactor\n<p>@since 0.3.5\n"],["Hanami::Interactor::Interface","","classes/Hanami/Interactor/Interface.html","","<p>Interactor interface\n<p>@since 0.3.5\n"],["Hanami::Interactor::Result","","classes/Hanami/Interactor/Result.html","","<p>Result of an operation\n<p>@since 0.3.5\n"],["Hanami::Layout","","classes/Hanami/Layout.html","","<p>Layout\n<p>@since 0.1.0\n<p>@see Hanami::Layout::ClassMethods\n"],["Hanami::Layout::ClassMethods","","classes/Hanami/Layout/ClassMethods.html","","<p>Class level API\n<p>@since 0.1.0\n"],["Hanami::Loader","","classes/Hanami/Loader.html","","<p>Load an application\n<p>@since 0.1.0 @api private\n"],["Hanami::Logger","","classes/Hanami/Logger.html","","<p>Hanami logger\n<p>Implement with the same interface of Ruby std lib `Logger`. It uses\n`STDOUT`, `STDERR`, …\n"],["Hanami::Logger::Formatter","","classes/Hanami/Logger/Formatter.html","","<p>Hanami::Logger default formatter. This formatter returns string in\nkey=value format.\n<p>@since 0.5.0 @api …\n"],["Hanami::Logger::JSONFormatter","","classes/Hanami/Logger/JSONFormatter.html","","<p>Hanami::Logger JSON formatter. This formatter returns string in JSON\nformat.\n<p>@since 0.5.0 @api private …\n"],["Hanami::Mailer","","classes/Hanami/Mailer.html","","<p>Hanami::Mailer\n<p>@since 0.1.0\n"],["Hanami::Mailer::ClassMethods","","classes/Hanami/Mailer/ClassMethods.html","","<p>@since 0.1.0\n"],["Hanami::Mailer::Configuration","","classes/Hanami/Mailer/Configuration.html","","<p>Framework configuration\n<p>@since 0.1.0\n"],["Hanami::Mailer::Delivery","","classes/Hanami/Mailer/Delivery.html","","<p>@since 0.5.0 @api private\n"],["Hanami::Mailer::Dsl","","classes/Hanami/Mailer/Dsl.html","","<p>Class level DSL\n<p>@since 0.1.0\n"],["Hanami::Mailer::Error","","classes/Hanami/Mailer/Error.html","","<p>Base error for Hanami::Mailer\n<p>@since 0.1.0\n"],["Hanami::Mailer::Glue","","classes/Hanami/Mailer/Glue.html","","<p>@since 0.5.0 @api private\n"],["Hanami::Mailer::MissingDeliveryDataError","","classes/Hanami/Mailer/MissingDeliveryDataError.html","","<p>Missing delivery data error\n<p>It&#39;s raised when a mailer doesn&#39;t specify <code>from</code> or\n<code>to</code>.\n<p>@since 0.1.0 …\n"],["Hanami::Mailer::Rendering","","classes/Hanami/Mailer/Rendering.html","",""],["Hanami::Mailer::Rendering::TemplateName","","classes/Hanami/Mailer/Rendering/TemplateName.html","","<p>@since 0.1.0 @api private\n<p>TODO this is identical to Hanami::View, consider to move into Hanami::Utils\n…\n"],["Hanami::Mailer::Rendering::TemplatesFinder","","classes/Hanami/Mailer/Rendering/TemplatesFinder.html","","<p>Find templates for a mailer\n<p>@api private @since 0.1.0\n<p>@see Mailer::Template\n"],["Hanami::Mailer::Template","","classes/Hanami/Mailer/Template.html","","<p>A logic-less template.\n<p>@api private @since 0.1.0\n<p>TODO this is identical to Hanami::View, consider to move …\n"],["Hanami::Middleware","","classes/Hanami/Middleware.html","","<p>Rack middleware stack for an application\n<p>@since 0.1.0 @api private\n"],["Hanami::Model","","classes/Hanami/Model.html","","<p>Model\n<p>@since 0.1.0\n"],["Hanami::Model::Adapters","","classes/Hanami/Model/Adapters.html","",""],["Hanami::Model::Adapters::Abstract","","classes/Hanami/Model/Adapters/Abstract.html","","<p>Abstract adapter.\n<p>An adapter is a concrete implementation that allows a repository to\ncommunicate with …\n"],["Hanami::Model::Adapters::DatabaseAdapterNotFound","","classes/Hanami/Model/Adapters/DatabaseAdapterNotFound.html","","<p>It&#39;s raised when an adapter can&#39;t find the underlying database\nadapter.\n<p>Example: When we try to …\n"],["Hanami::Model::Adapters::DisconnectedAdapterError","","classes/Hanami/Model/Adapters/DisconnectedAdapterError.html","","<p>It&#39;s raised when an operation is requested to an adapter after it was\ndisconnected.\n<p>@since 0.5.0\n"],["Hanami::Model::Adapters::DisconnectedResource","","classes/Hanami/Model/Adapters/DisconnectedResource.html","","<p>Represents a disconnected resource.\n<p>When we use <code>#disconnect</code> for <code>MemoryAdapter</code> and\n&lt;/tt&gt;FileSystemAdapter&lt;/tt&gt;, …\n"],["Hanami::Model::Adapters::FileSystemAdapter","","classes/Hanami/Model/Adapters/FileSystemAdapter.html","","<p>In memory adapter with file system persistence. It behaves like the SQL\nadapter, but it doesn&#39;t support …\n"],["Hanami::Model::Adapters::Implementation","","classes/Hanami/Model/Adapters/Implementation.html","","<p>Shared implementation for SqlAdapter and MemoryAdapter\n<p>@api private @since 0.1.0\n"],["Hanami::Model::Adapters::Memory","","classes/Hanami/Model/Adapters/Memory.html","",""],["Hanami::Model::Adapters::Memory::Collection","","classes/Hanami/Model/Adapters/Memory/Collection.html","","<p>Acts like a SQL database table.\n<p>@api private @since 0.1.0\n"],["Hanami::Model::Adapters::Memory::Collection::PrimaryKey","","classes/Hanami/Model/Adapters/Memory/Collection/PrimaryKey.html","","<p>A counter that simulates autoincrement primary key of a SQL table.\n<p>@api private @since 0.1.0\n"],["Hanami::Model::Adapters::Memory::Command","","classes/Hanami/Model/Adapters/Memory/Command.html","","<p>Execute a command for the given collection.\n<p>@see Hanami::Model::Adapters::Memory::Collection @see\nHanami::Model::Mapping::Collection …\n"],["Hanami::Model::Adapters::Memory::Query","","classes/Hanami/Model/Adapters/Memory/Query.html","","<p>Query the in-memory database with a powerful API.\n<p>All the methods are chainable, it allows advanced composition …\n"],["Hanami::Model::Adapters::MemoryAdapter","","classes/Hanami/Model/Adapters/MemoryAdapter.html","","<p>In memory adapter that behaves like a SQL database. Not all the features of\nthe SQL adapter are supported. …\n"],["Hanami::Model::Adapters::MissingURIError","","classes/Hanami/Model/Adapters/MissingURIError.html","","<p>It&#39;s raised when a URI is nil or empty\n<p>@since x.x.x\n"],["Hanami::Model::Adapters::NoAdapterError","","classes/Hanami/Model/Adapters/NoAdapterError.html","","<p>@since 0.2.0\n"],["Hanami::Model::Adapters::NotSupportedError","","classes/Hanami/Model/Adapters/NotSupportedError.html","","<p>It&#39;s raised when an adapter does not support a feature.\n<p>Example: When we try to get a connection string …\n"],["Hanami::Model::Adapters::NullAdapter","","classes/Hanami/Model/Adapters/NullAdapter.html","","<p>@since 0.2.0 @api private\n"],["Hanami::Model::Adapters::Sql","","classes/Hanami/Model/Adapters/Sql.html","",""],["Hanami::Model::Adapters::Sql::Collection","","classes/Hanami/Model/Adapters/Sql/Collection.html","","<p>Maps a SQL database table and perfoms manipulations on it.\n<p>@api private @since 0.1.0\n<p>@see sequel.jeremyevans.net/rdoc/files/doc/dataset_basics_rdoc.html …\n"],["Hanami::Model::Adapters::Sql::Command","","classes/Hanami/Model/Adapters/Sql/Command.html","","<p>Execute a command for the given query.\n<p>@see Hanami::Model::Adapters::Sql::Query\n<p>@api private @since 0.1.0 …\n"],["Hanami::Model::Adapters::Sql::Console","","classes/Hanami/Model/Adapters/Sql/Console.html","",""],["Hanami::Model::Adapters::Sql::Consoles","","classes/Hanami/Model/Adapters/Sql/Consoles.html","",""],["Hanami::Model::Adapters::Sql::Consoles::Mysql","","classes/Hanami/Model/Adapters/Sql/Consoles/Mysql.html","",""],["Hanami::Model::Adapters::Sql::Consoles::Postgresql","","classes/Hanami/Model/Adapters/Sql/Consoles/Postgresql.html","",""],["Hanami::Model::Adapters::Sql::Consoles::Sqlite","","classes/Hanami/Model/Adapters/Sql/Consoles/Sqlite.html","",""],["Hanami::Model::Adapters::Sql::Query","","classes/Hanami/Model/Adapters/Sql/Query.html","","<p>Query the database with a powerful API.\n<p>All the methods are chainable, it allows advanced composition …\n"],["Hanami::Model::Adapters::SqlAdapter","","classes/Hanami/Model/Adapters/SqlAdapter.html","","<p>Adapter for SQL databases\n<p>In order to use it with a specific database, you must require the Ruby gem\nbefore …\n"],["Hanami::Model::CheckConstraintViolationError","","classes/Hanami/Model/CheckConstraintViolationError.html","","<p>Error for Check Constraint Violation raised by Sequel\n<p>@since 0.6.1\n"],["Hanami::Model::Coercer","","classes/Hanami/Model/Coercer.html","","<p>Abstract coercer\n<p>It can be used as super class for custom mapping coercers.\n<p>@since 0.5.0\n"],["Hanami::Model::Config","","classes/Hanami/Model/Config.html","",""],["Hanami::Model::Config::Adapter","","classes/Hanami/Model/Config/Adapter.html","","<p>Configuration for the adapter\n<p>Hanami::Model has its own global configuration that can be manipulated via\n…\n"],["Hanami::Model::Config::AdapterNotFound","","classes/Hanami/Model/Config/AdapterNotFound.html","","<p>Raised when an adapter class does not exist\n<p>@since 0.2.0\n"],["Hanami::Model::Config::Mapper","","classes/Hanami/Model/Config/Mapper.html","","<p>Read mapping file for mapping DSL\n<p>@since 0.2.0 @api private\n"],["Hanami::Model::Configuration","","classes/Hanami/Model/Configuration.html","","<p>Configuration for the framework, models and adapters.\n<p>Hanami::Model has its own global configuration that …\n"],["Hanami::Model::ForeignKeyConstraintViolationError","","classes/Hanami/Model/ForeignKeyConstraintViolationError.html","","<p>Error for Foreign Key Constraint Violation\n<p>@since 0.6.1\n"],["Hanami::Model::InvalidCommandError","","classes/Hanami/Model/InvalidCommandError.html","","<p>Error for invalid raw command syntax\n<p>@since 0.5.0\n"],["Hanami::Model::InvalidQueryError","","classes/Hanami/Model/InvalidQueryError.html","","<p>Error for invalid raw query syntax\n<p>@since 0.3.1\n"],["Hanami::Model::Mapper","","classes/Hanami/Model/Mapper.html","","<p>A persistence mapper that keeps entities independent from database details.\n<p>This is database independent. …\n"],["Hanami::Model::Mapping","","classes/Hanami/Model/Mapping.html","","<p>Mapping internal utilities\n<p>@since 0.1.0\n"],["Hanami::Model::Mapping::Attribute","","classes/Hanami/Model/Mapping/Attribute.html","","<p>Mapping attribute\n<p>@api private @since 0.5.0\n"],["Hanami::Model::Mapping::Coercers","","classes/Hanami/Model/Mapping/Coercers.html","","<p>Default coercers\n<p>@since 0.5.0 @api private\n"],["Hanami::Model::Mapping::Coercers::Array","","classes/Hanami/Model/Mapping/Coercers/Array.html","","<p>Array coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::BigDecimal","","classes/Hanami/Model/Mapping/Coercers/BigDecimal.html","","<p>BigDecimal coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Boolean","","classes/Hanami/Model/Mapping/Coercers/Boolean.html","","<p>Boolean coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Date","","classes/Hanami/Model/Mapping/Coercers/Date.html","","<p>Date coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::DateTime","","classes/Hanami/Model/Mapping/Coercers/DateTime.html","","<p>DateTime coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Float","","classes/Hanami/Model/Mapping/Coercers/Float.html","","<p>Float coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Hash","","classes/Hanami/Model/Mapping/Coercers/Hash.html","","<p>Hash coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Integer","","classes/Hanami/Model/Mapping/Coercers/Integer.html","","<p>Integer coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Set","","classes/Hanami/Model/Mapping/Coercers/Set.html","","<p>Set coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::String","","classes/Hanami/Model/Mapping/Coercers/String.html","","<p>String coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Symbol","","classes/Hanami/Model/Mapping/Coercers/Symbol.html","","<p>Symbol coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Coercers::Time","","classes/Hanami/Model/Mapping/Coercers/Time.html","","<p>Time coercer\n<p>@since 0.5.0 @api private\n<p>@see Hanami::Model::Coercer\n"],["Hanami::Model::Mapping::Collection","","classes/Hanami/Model/Mapping/Collection.html","","<p>Maps a collection and its attributes.\n<p>A collection is a set of homogeneous records. Think of a table of …\n"],["Hanami::Model::Mapping::CollectionCoercer","","classes/Hanami/Model/Mapping/CollectionCoercer.html","","<p>Translates values from/to the database with the corresponding Ruby type.\n<p>@api private @since 0.1.0\n"],["Hanami::Model::Mapping::EntityNotFound","","classes/Hanami/Model/Mapping/EntityNotFound.html","","<p>Invalid entity error.\n<p>It gets raised when the application tries to access to a existing entity.\n<p>@since …\n"],["Hanami::Model::Mapping::RepositoryNotFound","","classes/Hanami/Model/Mapping/RepositoryNotFound.html","","<p>Invalid repository error.\n<p>It gets raised when the application tries to access to a existing\nrepository. …\n"],["Hanami::Model::Mapping::UnmappedCollectionError","","classes/Hanami/Model/Mapping/UnmappedCollectionError.html","","<p>Unmapped collection error.\n<p>It gets raised when the application tries to access to a non-mapped\ncollection. …\n"],["Hanami::Model::MigrationError","","classes/Hanami/Model/MigrationError.html","","<p>Migration error\n<p>@since 0.4.0\n"],["Hanami::Model::Migrator","","classes/Hanami/Model/Migrator.html","","<p>Database schema migrator\n<p>@since 0.4.0\n"],["Hanami::Model::Migrator::Adapter","","classes/Hanami/Model/Migrator/Adapter.html","","<p>Migrator base adapter\n<p>@since 0.4.0 @api private\n"],["Hanami::Model::Migrator::Connection","","classes/Hanami/Model/Migrator/Connection.html","","<p>Sequel connection wrapper\n<p>Normalize external adapters interfaces\n<p>@since 0.5.0 @api private\n"],["Hanami::Model::Migrator::MySQLAdapter","","classes/Hanami/Model/Migrator/MySQLAdapter.html","","<p>MySQL adapter\n<p>@since 0.4.0 @api private\n"],["Hanami::Model::Migrator::PostgresAdapter","","classes/Hanami/Model/Migrator/PostgresAdapter.html","","<p>PostgreSQL adapter\n<p>@since 0.4.0 @api private\n"],["Hanami::Model::Migrator::SQLiteAdapter","","classes/Hanami/Model/Migrator/SQLiteAdapter.html","","<p>SQLite3 Migrator\n<p>@since 0.4.0 @api private\n"],["Hanami::Model::Migrator::SQLiteAdapter::Memory","","classes/Hanami/Model/Migrator/SQLiteAdapter/Memory.html","","<p>No-op for in-memory databases\n<p>@since 0.4.0 @api private\n"],["Hanami::Model::NoMappingError","","classes/Hanami/Model/NoMappingError.html","","<p>Error for missing mapper It&#39;s raised when loading model without mapper\n<p>@since 0.2.0\n<p>@see Hanami::Model::Configuration#mapping …\n"],["Hanami::Model::NotNullConstraintViolationError","","classes/Hanami/Model/NotNullConstraintViolationError.html","","<p>Error for Not Null Constraint Violation\n<p>@since 0.6.1\n"],["Hanami::Model::NullMapper","","classes/Hanami/Model/NullMapper.html","","<p>@since 0.2.0 @api private\n"],["Hanami::Model::UniqueConstraintViolationError","","classes/Hanami/Model/UniqueConstraintViolationError.html","","<p>Error for Unique Constraint Violation\n<p>@since 0.6.1\n"],["Hanami::Presenter","","classes/Hanami/Presenter.html","","<p>Presenter pattern implementation\n<p>It delegates to the wrapped object the missing method invocations.\n<p>The …\n"],["Hanami::RakeHelper","","classes/Hanami/RakeHelper.html","","<p>Install Rake tasks in projects\n<p>@since 0.6.0 @api private\n"],["Hanami::RenderingPolicy","","classes/Hanami/RenderingPolicy.html","","<p>Rendering policy\n<p>@since 0.1.0 @api private\n"],["Hanami::Repository","","classes/Hanami/Repository.html","","<p>Mediates between the entities and the persistence layer, by offering an API\nto query and execute commands …\n"],["Hanami::Repository::ClassMethods","","classes/Hanami/Repository/ClassMethods.html","",""],["Hanami::Repository::InstanceMethods","","classes/Hanami/Repository/InstanceMethods.html","",""],["Hanami::Router","","classes/Hanami/Router.html","","<p>Rack compatible, lightweight and fast HTTP Router.\n<p>@since 0.1.0\n<p>@example It offers an intuitive DSL, that …\n"],["Hanami::Router::NotRoutableEndpointError","","classes/Hanami/Router/NotRoutableEndpointError.html","","<p>This error is raised when <code>#call</code> is invoked on a non-routable\nrecognized route.\n<p>@since 0.5.0\n<p>@see Hanami::Router#recognize …\n"],["Hanami::Routes","","classes/Hanami/Routes.html","","<p>Routes factory\n<p>A Hanami application has this factory instantiated by default and\nassociated to the `Routes` …\n"],["Hanami::Routing","","classes/Hanami/Routing.html","",""],["Hanami::Routing::ClassEndpoint","","classes/Hanami/Routing/ClassEndpoint.html","","<p>Routing endpoint This is the object that responds to an HTTP request made\nagainst a certain path.\n<p>The …\n"],["Hanami::Routing::Default","","classes/Hanami/Routing/Default.html","","<p>The default Rack application that responds when a resource cannot be found.\n<p>@since 0.1.0 @api private …\n"],["Hanami::Routing::Default::NullAction","","classes/Hanami/Routing/Default/NullAction.html","",""],["Hanami::Routing::Endpoint","","classes/Hanami/Routing/Endpoint.html","","<p>Routing endpoint This is the object that responds to an HTTP request made\nagainst a certain path.\n<p>The …\n"],["Hanami::Routing::EndpointNotFound","","classes/Hanami/Routing/EndpointNotFound.html","","<p>Endpoint not found This is raised when the router fails to load an endpoint\nat the runtime.\n<p>@since 0.1.0 …\n"],["Hanami::Routing::EndpointResolver","","classes/Hanami/Routing/EndpointResolver.html","","<p>Resolve duck-typed endpoints\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Error","","classes/Hanami/Routing/Error.html","","<p>@since 0.5.0\n"],["Hanami::Routing::ForceSsl","","classes/Hanami/Routing/ForceSsl.html","","<p>Force ssl\n<p>Redirect response to the secure equivalent resource (https)\n<p>@since 0.4.1 @api private\n"],["Hanami::Routing::HttpRouter","","classes/Hanami/Routing/HttpRouter.html","","<p>HTTP router\n<p>This implementation is based on ::HttpRouter (http_router gem).\n<p>Hanami::Router wraps an instance …\n"],["Hanami::Routing::InvalidRouteException","","classes/Hanami/Routing/InvalidRouteException.html","","<p>Invalid route This is raised when the router fails to recognize a route,\nbecause of the given arguments. …\n"],["Hanami::Routing::LazyEndpoint","","classes/Hanami/Routing/LazyEndpoint.html","","<p>Routing endpoint This is the object that responds to an HTTP request made\nagainst a certain path.\n<p>The …\n"],["Hanami::Routing::Namespace","","classes/Hanami/Routing/Namespace.html","","<p>Namespace for routes. Implementation of Hanami::Router#namespace\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Parsers","","classes/Hanami/Routing/Parsers.html","",""],["Hanami::Routing::Parsing","","classes/Hanami/Routing/Parsing.html","",""],["Hanami::Routing::Parsing::BodyParsingError","","classes/Hanami/Routing/Parsing/BodyParsingError.html","","<p>Body parsing error This is raised when parser fails to parse the body\n<p>@since 0.5.0\n"],["Hanami::Routing::Parsing::JsonParser","","classes/Hanami/Routing/Parsing/JsonParser.html","",""],["Hanami::Routing::Parsing::Parser","","classes/Hanami/Routing/Parsing/Parser.html","","<p>@since 0.2.0\n"],["Hanami::Routing::Parsing::UnknownParserError","","classes/Hanami/Routing/Parsing/UnknownParserError.html","","<p>@since 0.2.0\n"],["Hanami::Routing::RecognizedRoute","","classes/Hanami/Routing/RecognizedRoute.html","","<p>Represents a result of router path recognition.\n<p>@since 0.5.0\n<p>@see Hanami::Router#recognize\n"],["Hanami::Routing::Resource","","classes/Hanami/Routing/Resource.html","","<p>Set of RESTful resource routes Implementation of Hanami::Router#resource\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Resource::Action","","classes/Hanami/Routing/Resource/Action.html","","<p>Action for RESTful resource\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Resource::CollectionAction","","classes/Hanami/Routing/Resource/CollectionAction.html","","<p>Collection action It implements #collection within a #resource block.\n<p>@api private @since 0.1.0 @see  …\n"],["Hanami::Routing::Resource::Create","","classes/Hanami/Routing/Resource/Create.html","","<p>Create action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resource::DefaultMemberAction","","classes/Hanami/Routing/Resource/DefaultMemberAction.html","","<p>Implementation of common methods for concrete member actions\n<p>@api private @since 0.1.0\n"],["Hanami::Routing::Resource::Destroy","","classes/Hanami/Routing/Resource/Destroy.html","","<p>Destroy action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resource::Edit","","classes/Hanami/Routing/Resource/Edit.html","","<p>Edit action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resource::MemberAction","","classes/Hanami/Routing/Resource/MemberAction.html","","<p>Collection action It implements #member within a #resource block.\n<p>@api private @since 0.1.0 @see Hanami::Router#resource …\n"],["Hanami::Routing::Resource::Nested","","classes/Hanami/Routing/Resource/Nested.html","","<p>Helper class to calculate nested path\n<p>@api private @since 0.4.0\n"],["Hanami::Routing::Resource::New","","classes/Hanami/Routing/Resource/New.html","","<p>New action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resource::Options","","classes/Hanami/Routing/Resource/Options.html","","<p>Options for RESTFul resource(s)\n<p>@api private @since 0.1.0\n<p>@see Hanami::Router#resource @see Hanami::Router#resources …\n"],["Hanami::Routing::Resource::Show","","classes/Hanami/Routing/Resource/Show.html","","<p>Show action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resource::Update","","classes/Hanami/Routing/Resource/Update.html","","<p>Update action\n<p>@api private @since 0.1.0 @see Hanami::Router#resource\n"],["Hanami::Routing::Resources","","classes/Hanami/Routing/Resources.html","","<p>Set of RESTful resources routes Implementation of Hanami::Router#resources\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Resources::Action","","classes/Hanami/Routing/Resources/Action.html","","<p>Action for RESTful resources\n<p>@since 0.1.0\n<p>@api private\n"],["Hanami::Routing::Resources::CollectionAction","","classes/Hanami/Routing/Resources/CollectionAction.html","","<p>Collection action It implements #collection within a #resources block.\n<p>@api private @since 0.1.0 @see …\n"],["Hanami::Routing::Resources::Create","","classes/Hanami/Routing/Resources/Create.html","","<p>Create action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::DefaultMemberAction","","classes/Hanami/Routing/Resources/DefaultMemberAction.html","","<p>Implementation of common methods for concrete member actions\n<p>@api private @since 0.1.0\n"],["Hanami::Routing::Resources::Destroy","","classes/Hanami/Routing/Resources/Destroy.html","","<p>Destroy action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::Edit","","classes/Hanami/Routing/Resources/Edit.html","","<p>Edit action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::Index","","classes/Hanami/Routing/Resources/Index.html","","<p>Index action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::MemberAction","","classes/Hanami/Routing/Resources/MemberAction.html","","<p>Member action It implements #member within a #resources block.\n<p>@api private @since 0.1.0 @see Hanami::Router#resources …\n"],["Hanami::Routing::Resources::New","","classes/Hanami/Routing/Resources/New.html","","<p>New action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::PluralizedAction","","classes/Hanami/Routing/Resources/PluralizedAction.html","","<p>Pluralize concrete actions\n<p>@api private @since 0.4.0\n"],["Hanami::Routing::Resources::Show","","classes/Hanami/Routing/Resources/Show.html","","<p>Show action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Resources::Update","","classes/Hanami/Routing/Resources/Update.html","","<p>Update action\n<p>@api private @since 0.1.0 @see Hanami::Router#resources\n"],["Hanami::Routing::Route","","classes/Hanami/Routing/Route.html","","<p>Entry of the routing system\n<p>@api private\n<p>@since 0.1.0\n"],["Hanami::Routing::RoutesInspector","","classes/Hanami/Routing/RoutesInspector.html","","<p>Routes inspector\n<p>@since 0.2.0\n"],["Hanami::Server","","classes/Hanami/Server.html","","<p>Rack compatible server.\n<p>It is run with:\n\n<pre><code>`bundle exec hanami server`\n</code></pre>\n"],["Hanami::Static","","classes/Hanami/Static.html","",""],["Hanami::Utils","","classes/Hanami/Utils.html","","<p>Ruby core extentions and Hanami utilities\n<p>@since 0.1.0\n"],["Hanami::Utils::Attributes","","classes/Hanami/Utils/Attributes.html","","<p>A set of attributes.\n<p>It internally stores the data as a Hash.\n<p>All the operations convert keys to strings. …\n"],["Hanami::Utils::BasicObject","","classes/Hanami/Utils/BasicObject.html","","<p>BasicObject\n<p>@since 0.3.5\n"],["Hanami::Utils::Blank","","classes/Hanami/Utils/Blank.html","","<p>Checks for blank @since x.x.x\n"],["Hanami::Utils::Callbacks","","classes/Hanami/Utils/Callbacks.html","","<p>Before and After callbacks\n<p>@since 0.1.0 @private\n"],["Hanami::Utils::Callbacks::Callback","","classes/Hanami/Utils/Callbacks/Callback.html","","<p>Proc callback It wraps an object that responds to #call\n<p>@since 0.1.0 @private\n"],["Hanami::Utils::Callbacks::Chain","","classes/Hanami/Utils/Callbacks/Chain.html","","<p>Series of callbacks to be executed\n<p>@since 0.1.0 @private\n"],["Hanami::Utils::Callbacks::Factory","","classes/Hanami/Utils/Callbacks/Factory.html","","<p>Callback factory\n<p>@since 0.1.0 @private\n"],["Hanami::Utils::Callbacks::MethodCallback","","classes/Hanami/Utils/Callbacks/MethodCallback.html","","<p>Method callback It wraps a symbol or a string representing a method name\nthat is implemented by the context …\n"],["Hanami::Utils::Class","","classes/Hanami/Utils/Class.html","","<p>Class utilities @since 0.1.0\n"],["Hanami::Utils::ClassAttribute","","classes/Hanami/Utils/ClassAttribute.html","","<p>Inheritable class level variable accessors. @since 0.1.0\n<p>@see Hanami::Utils::ClassAttribute::ClassMethods …\n"],["Hanami::Utils::ClassAttribute::ClassMethods","","classes/Hanami/Utils/ClassAttribute/ClassMethods.html","",""],["Hanami::Utils::Deprecation","","classes/Hanami/Utils/Deprecation.html","","<p>Prints a deprecation warning when initialized\n<p>@since 0.3.1\n"],["Hanami::Utils::Duplicable","","classes/Hanami/Utils/Duplicable.html","","<p>Safe dup logic\n<p>@since 0.6.0\n"],["Hanami::Utils::Escape","","classes/Hanami/Utils/Escape.html","","<p>HTML escape utilities\n<p>Based on OWASP research and OWASP ESAPI code\n<p>@since 0.4.0\n"],["Hanami::Utils::Escape::SafeString","","classes/Hanami/Utils/Escape/SafeString.html","","<p>The output of an escape.\n<p>It&#39;s marked with this special class for two reasons:\n\n<pre><code>* Don&#39;t double escape ...</code></pre>\n"],["Hanami::Utils::Hash","","classes/Hanami/Utils/Hash.html","","<p>Hash on steroids @since 0.1.0\n"],["Hanami::Utils::IO","","classes/Hanami/Utils/IO.html","","<p>IO utils\n<p>@since 0.1.0\n"],["Hanami::Utils::Inflector","","classes/Hanami/Utils/Inflector.html","","<p>String inflector\n<p>@since 0.4.1\n"],["Hanami::Utils::Inflector::IrregularRules","","classes/Hanami/Utils/Inflector/IrregularRules.html","","<p>Rules for irregular plurals\n<p>@since 0.6.0 @api private\n"],["Hanami::Utils::Json","","classes/Hanami/Utils/Json.html","","<p>JSON wrapper\n<p>If you use MultiJson gem this wrapper will use it. Otherwise - JSON std\nlib.\n<p>@since x.x.x …\n"],["Hanami::Utils::Kernel","","classes/Hanami/Utils/Kernel.html","","<p>Kernel utilities @since 0.1.1\n"],["Hanami::Utils::LoadPaths","","classes/Hanami/Utils/LoadPaths.html","","<p>A collection of loading paths.\n<p>@since 0.2.0\n"],["Hanami::Utils::PathPrefix","","classes/Hanami/Utils/PathPrefix.html","","<p>Prefixed string\n<p>@since 0.1.0\n"],["Hanami::Utils::String","","classes/Hanami/Utils/String.html","","<p>String on steroids\n<p>@since 0.1.0\n"],["Hanami::Validations","","classes/Hanami/Validations.html","","<p>Hanami::Validations is a set of lightweight validations for Ruby objects.\n<p>@since 0.1.0\n"],["Hanami::Validations::Attribute","","classes/Hanami/Validations/Attribute.html","","<p>A validable attribute\n<p>@since 0.1.0 @api private\n"],["Hanami::Validations::AttributeDefiner","","classes/Hanami/Validations/AttributeDefiner.html","","<p>Define attributes and their validations together\n<p>@since 0.2.2 @api private\n"],["Hanami::Validations::AttributeDefiner::ClassMethods","","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html","","<p>@since 0.2.2 @api private\n"],["Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html","","<p>Support for `Hanami::Entity`\n<p>@since 0.2.3 @api private\n<p>@example\n"],["Hanami::Validations::AttributeDefiner::EntityAttributeDefiner::InstanceMethods","","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner/InstanceMethods.html","","<p>@since 0.2.3 @api private\n"],["Hanami::Validations::BlankValueChecker","","classes/Hanami/Validations/BlankValueChecker.html","","<p>@since 0.2.2 @api private\n"],["Hanami::Validations::ClassMethods","","classes/Hanami/Validations/ClassMethods.html","","<p>Validations DSL\n<p>@since 0.1.0\n"],["Hanami::Validations::Coercions","","classes/Hanami/Validations/Coercions.html","","<p>Coercions for attribute&#39;s values.\n<p>@since 0.1.0 @api private\n"],["Hanami::Validations::Error","","classes/Hanami/Validations/Error.html","","<p>A single validation error for an attribute\n<p>@since 0.1.0\n"],["Hanami::Validations::Errors","","classes/Hanami/Validations/Errors.html","","<p>A set of errors for a validator\n<p>This is the result of calling `#valid?` on a validator.\n<p>@see Hanami::Validations::Error …\n"],["Hanami::Validations::Form","","classes/Hanami/Validations/Form.html","",""],["Hanami::Validations::Form::ClassMethods","","classes/Hanami/Validations/Form/ClassMethods.html","",""],["Hanami::Validations::InlinePredicate","","classes/Hanami/Validations/InlinePredicate.html","",""],["Hanami::Validations::Namespace","","classes/Hanami/Validations/Namespace.html","",""],["Hanami::Validations::NestedAttributes","","classes/Hanami/Validations/NestedAttributes.html","","<p>@since 0.3.1 @api private\n"],["Hanami::Validations::Predicates","","classes/Hanami/Validations/Predicates.html","",""],["Hanami::Validations::ValidationSet","","classes/Hanami/Validations/ValidationSet.html","","<p>A set of validations defined on an object\n<p>@since 0.2.2 @api private\n"],["Hanami::Validations::Validator","","classes/Hanami/Validations/Validator.html","","<p>Validate given validations and return a set of errors\n<p>@since 0.2.2 @api private\n"],["Hanami::View","","classes/Hanami/View.html","","<p>View\n<p>@since 0.1.0\n"],["Hanami::View::Configuration","","classes/Hanami/View/Configuration.html","","<p>Configuration for the framework, controllers and actions.\n<p>Hanami::Controller has its own global configuration …\n"],["Hanami::View::Dsl","","classes/Hanami/View/Dsl.html","","<p>Class level DSL\n<p>@since 0.1.0\n"],["Hanami::View::Error","","classes/Hanami/View/Error.html","","<p>@since 0.5.0\n"],["Hanami::View::Escape","","classes/Hanami/View/Escape.html","","<p>Auto escape logic for views and presenters.\n<p>@since 0.4.0\n"],["Hanami::View::Escape::InstanceMethods","","classes/Hanami/View/Escape/InstanceMethods.html","",""],["Hanami::View::Escape::Presenter","","classes/Hanami/View/Escape/Presenter.html","","<p>Auto escape presenter\n<p>@since 0.4.0 @api private\n<p>@see Hanami::View::Escape::InstanceMethods#_escape\n"],["Hanami::View::Inheritable","","classes/Hanami/View/Inheritable.html","","<p>Inheriting mechanisms\n<p>@since 0.1.0\n"],["Hanami::View::MissingFormatError","","classes/Hanami/View/MissingFormatError.html","","<p>Missing format error\n<p>This is raised at the runtime when rendering context lacks of the :format\nkey.\n<p>@since …\n"],["Hanami::View::MissingTemplateError","","classes/Hanami/View/MissingTemplateError.html","","<p>Missing template error\n<p>This is raised at the runtime when Hanami::View cannot find a template for\nthe …\n"],["Hanami::View::MissingTemplateLayoutError","","classes/Hanami/View/MissingTemplateLayoutError.html","","<p>Missing template layout error\n<p>This is raised at the runtime when Hanami::Layout cannot find it&#39;s\ntemplate. …\n"],["Hanami::View::Rendering","","classes/Hanami/View/Rendering.html","","<p>Rendering methods\n<p>@since 0.1.0\n<p>@see Hanami::View::Rendering::InstanceMethods\n"],["Hanami::View::Rendering::InstanceMethods","","classes/Hanami/View/Rendering/InstanceMethods.html","",""],["Hanami::View::Rendering::LayoutFinder","","classes/Hanami/View/Rendering/LayoutFinder.html","","<p>Defines the logic to find a layout\n<p>@api private @since 0.1.0\n<p>@see Hanami::Layout\n"],["Hanami::View::Rendering::LayoutRegistry","","classes/Hanami/View/Rendering/LayoutRegistry.html","","<p>Holds the references of all the registered layouts. As now the registry is\nunique at the level of the …\n"],["Hanami::View::Rendering::LayoutScope","","classes/Hanami/View/Rendering/LayoutScope.html","","<p>Scope for layout rendering\n<p>@since 0.1.0\n"],["Hanami::View::Rendering::NullLayout","","classes/Hanami/View/Rendering/NullLayout.html","","<p>Null Object pattern for Layout. It&#39;s used when a view doesn&#39;t\nrequire a layout.\n<p>@api private @since …\n"],["Hanami::View::Rendering::NullLocal","","classes/Hanami/View/Rendering/NullLocal.html","","<p>Null local\n<p>@since x.x.x\n<p>@see Hanami::View::Rendering#local\n"],["Hanami::View::Rendering::NullTemplate","","classes/Hanami/View/Rendering/NullTemplate.html","","<p>Null Object pattern for layout template\n<p>It&#39;s used when a layout doesn&#39;t have an associated template. …\n"],["Hanami::View::Rendering::Partial","","classes/Hanami/View/Rendering/Partial.html","","<p>Rendering partial\n<p>It&#39;s used when a template wants to render a partial.\n<p>@api private @since 0.1.0\n"],["Hanami::View::Rendering::PartialFile","","classes/Hanami/View/Rendering/PartialFile.html","","<p>@since x.x.x @api private\n"],["Hanami::View::Rendering::PartialFinder","","classes/Hanami/View/Rendering/PartialFinder.html","","<p>Find a partial for the current view context. It&#39;s used when a template\nwants to render a partial. …\n"],["Hanami::View::Rendering::PartialTemplatesFinder","","classes/Hanami/View/Rendering/PartialTemplatesFinder.html","","<p>Find partial templates in the file system\n<p>@api private @since x.x.x\n<p>@see View::Template\n"],["Hanami::View::Rendering::Registry","","classes/Hanami/View/Rendering/Registry.html","","<p>Holds all the references of all the registered subclasses of a view. We\nhave one registry for each superclass …\n"],["Hanami::View::Rendering::Scope","","classes/Hanami/View/Rendering/Scope.html","","<p>Rendering scope\n<p>@since 0.1.0\n<p>@see Hanami::View::Rendering::LayoutScope\n"],["Hanami::View::Rendering::Template","","classes/Hanami/View/Rendering/Template.html","","<p>Rendering template\n<p>It&#39;s used when a template wants to render another template.\n<p>@api private @since …\n"],["Hanami::View::Rendering::TemplateFinder","","classes/Hanami/View/Rendering/TemplateFinder.html","","<p>Find a template for the current view context. It&#39;s used when a template\nwants to render another template. …\n"],["Hanami::View::Rendering::TemplateName","","classes/Hanami/View/Rendering/TemplateName.html","","<p>@since 0.2.0\n"],["Hanami::View::Rendering::TemplatesFinder","","classes/Hanami/View/Rendering/TemplatesFinder.html","","<p>Find templates for a view\n<p>@api private @since 0.1.0\n<p>@see View::Template\n"],["Hanami::View::Rendering::ViewFinder","","classes/Hanami/View/Rendering/ViewFinder.html","","<p>Find a view\n<p>@api private @since 0.1.0\n<p>@see Hanami::View::Rendering::Registry\n"],["Hanami::View::Template","","classes/Hanami/View/Template.html","","<p>A logic-less template.\n<p>@since 0.1.0\n"],["Hanami::Views","","classes/Hanami/Views.html","",""],["Hanami::Views::Default","","classes/Hanami/Views/Default.html","","<p>The default view that is rendered for non successful responses (200 and\n201)\n<p>@since 0.1.0 @api private …\n"],["Hanami::Views::DefaultTemplateFinder","","classes/Hanami/Views/DefaultTemplateFinder.html","",""],["Hanami::Views::NullView","","classes/Hanami/Views/NullView.html","","<p>Null Object pattern for views\n<p>@since 0.1.0 @api private\n"],["Hanami::Welcome","","classes/Hanami/Welcome.html","",""],["HttpRouter","","classes/HttpRouter.html","",""],["HttpRouter::Route","","classes/HttpRouter/Route.html","",""],["JSMin","","classes/JSMin.html","","<p>JSMin\n<p>Ruby implementation of Douglas Crockford&#39;s JavaScript minifier, JSMin.\n<p><strong>Author</strong> &mdash; Ryan Grove (ryan@wonko.com …\n"],["JSMin::ParseError","","classes/JSMin/ParseError.html","",""],["Mailers","","classes/Mailers.html","","<p>@since 0.5.0 @api private\n"],["NameRepository","","classes/NameRepository.html","",""],["Object","","classes/Object.html","",""],["Range","","classes/Range.html","","<p>Quick fix for non MRI VMs that don&#39;t implement Range#size\n<p>@since 0.1.0\n"],["<<","Hanami::Action::Cache::Directives","classes/Hanami/Action/Cache/Directives.html#method-i-3C-3C","(directive)",""],["<<","Hanami::Assets::Config::GlobalSources","classes/Hanami/Assets/Config/GlobalSources.html#method-i-3C-3C","(*paths)","<p>@since 0.1.0 @api private\n"],["<<","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-3C-3C","(*paths)",""],["==","Hanami::Entity","classes/Hanami/Entity.html#method-i-3D-3D","(other)","<p>Overrides the equality Ruby operator\n<p>Two entities are considered equal if they are instances of the same …\n"],["==","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-i-3D-3D","(other)","<p>@api private @since 0.5.0\n"],["==","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-3D-3D","(other)","<p>Equality\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.0\n"],["==","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-3D-3D","(other)","<p>@since 0.6.0 @api private\n"],["==","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-3D-3D","(other)","<p>Equality\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.0\n"],["==","Hanami::Validations::Error","classes/Hanami/Validations/Error.html#method-i-3D-3D","(other)","<p>Check if self equals to `other`\n<p>@since 0.1.0\n"],["==","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-3D-3D","(other)","<p>Check if the current set of errors equals to the one who belongs to\n`other`.\n<p>@param other [Object] the …\n"],["==","Hanami::Validations::InlinePredicate","classes/Hanami/Validations/InlinePredicate.html#method-i-3D-3D","(other)",""],["===","Hanami::Utils::Inflector::IrregularRules","classes/Hanami/Utils/Inflector/IrregularRules.html#method-i-3D-3D-3D","(other)","<p>@since 0.6.0 @api private\n"],["Array","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Array","(arg)","<p>Coerces the argument to be an Array.\n<p>It&#39;s similar to Ruby&#39;s Kernel.Array, but it applies further …\n"],["BigDecimal","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-BigDecimal","(arg)","<p>Coerces the argument to be a BigDecimal.\n<p>@param arg [Object] the argument @param precision [Keyword] precision …\n"],["Boolean","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Boolean","(arg)","<p>Coerces the argument to be a Boolean.\n<p>@param arg [Object] the argument\n<p>@return [true,false] the result …\n"],["Date","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Date","(arg)","<p>Coerces the argument to be a Date.\n<p>@param arg [Object] the argument\n<p>@return [Date] the result of the coercion …\n"],["DateTime","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-DateTime","(arg)","<p>Coerces the argument to be a DateTime.\n<p>@param arg [Object] the argument\n<p>@return [DateTime] the result of …\n"],["Float","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Float","(arg)","<p>Coerces the argument to be a Float.\n<p>It&#39;s similar to Ruby&#39;s Kernel.Float, but it doesn&#39;t stop …\n"],["Hash","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Hash","(arg)","<p>Coerces the argument to be a Hash.\n<p>@param arg [Object] the input\n<p>@return [Hash] the result of the coercion …\n"],["Integer","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Integer","(arg)","<p>Coerces the argument to be an Integer.\n<p>It&#39;s similar to Ruby&#39;s Kernel.Integer, but it doesn&#39;t …\n"],["Pathname","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Pathname","(arg)","<p>Coerces the argument to be a Pathname.\n<p>@param arg [#to_pathname,#to_str] the argument\n<p>@return [Pathname] …\n"],["Set","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Set","(arg)","<p>Coerces the argument to be a Set.\n<p>@param arg [Object] the input\n<p>@return [Set] the result of the coercion …\n"],["String","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-String","(arg)","<p>Coerces the argument to be a String.\n<p>Identical behavior of Ruby&#39;s Kernel.Array, still here because …\n"],["Symbol","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Symbol","(arg)","<p>Coerces the argument to be a Symbol.\n<p>@param arg [#to_sym] the argument\n<p>@return [Symbol] the result of the …\n"],["Time","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-Time","(arg)","<p>Coerces the argument to be a Time.\n<p>@param arg [Object] the argument\n<p>@return [Time] the result of the coercion …\n"],["[]","Hanami::Action::BaseParams","classes/Hanami/Action/BaseParams.html#method-i-5B-5D","(key)","<p>Returns the object associated with the given key\n<p>@param key [Symbol] the key\n<p>@return [Object,nil] return …\n"],["[]","Hanami::Action::CookieJar","classes/Hanami/Action/CookieJar.html#method-i-5B-5D","(key)","<p>Returns the object associated with the given key\n<p>@param key [Symbol] the key\n<p>@return [Object,nil] return …\n"],["[]","Hanami::Action::Flash","classes/Hanami/Action/Flash.html#method-i-5B-5D","(key)","<p>Get the value associated to the given key, if any\n<p>@return [Object,NilClass] the value\n<p>@since 0.3.0 @api …\n"],["[]","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-5B-5D","(*)","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["[]","Hanami::Routing::Resource::Options","classes/Hanami/Routing/Resource/Options.html#method-i-5B-5D","(key)","<p>Return the option for the given key\n<p>@param key [Symbol] the key that should be searched\n<p>@return [Object,nil] …\n"],["[]","Hanami::Utils::Attributes","classes/Hanami/Utils/Attributes.html#method-i-5B-5D","(attribute)","<p>@since 0.3.4\n"],["[]","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-5B-5D","(key)","<p>Retrieves the value object corresponding to the key object.\n<p>@param key [Object] the key\n<p>@return [Object,nil] …\n"],["[]=","Hanami::Action::CookieJar","classes/Hanami/Action/CookieJar.html#method-i-5B-5D-3D","(key, value)","<p>Associate the given value with the given key and store them\n<p>@param key [Symbol] the key @param value [#to_s,Hash] …\n"],["[]=","Hanami::Action::Flash","classes/Hanami/Action/Flash.html#method-i-5B-5D-3D","(key, value)","<p>Set the given value for the given key\n<p>@param key [#to_s] the key @param value [Object] the value\n<p>@since …\n"],["[]=","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-5B-5D-3D","(*)","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["[]=","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-5B-5D-3D","(key, value)","<p>Associates the value given by value with the key given by key.\n<p>@param key [Object] the key to assign @param …\n"],["__add","Hanami::Config::FrameworkConfiguration","classes/Hanami/Config/FrameworkConfiguration.html#method-i-__add","(&blk)","<p>@since 0.6.0 @api private\n"],["__apply","Hanami::Config::FrameworkConfiguration","classes/Hanami/Config/FrameworkConfiguration.html#method-i-__apply","(configuration)","<p>@since 0.2.0 @api private\n"],["__inspect","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-__inspect","()","<p>@since 0.3.5 @api private\n"],["_attribute","Hanami::Validations::AttributeDefiner::ClassMethods","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html#method-i-_attribute","(name, options = {}, &block)","<p>Define an attribute\n<p>@see Hanami::Validations::AttributeDefiner#attribute\n<p>@since 0.3.1 @api private\n"],["_base_rules","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-c-_base_rules","()","<p>This is a Hanami::Validations extension point\n<p>@since x.x.x @api private\n"],["_find","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-_find","(lookup = search_path)","<p>@api private @since 0.1.0\n"],["_find","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-_find","(lookup = search_path)","<p>@api private @since 0.4.3\n<p>Searches first for files at\n`../templates/articles/index.<strong>.</strong>` If none are found, …\n"],["_load_assets_middleware","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-_load_assets_middleware","()","<p>Use static assets middleware\n<p>@api private @since 0.6.0\n"],["_load_default_welcome_page_for","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-_load_default_welcome_page_for","(application)","<p>Default welcome page\n<p>@api private @since 0.2.0\n"],["_load_method_override_middleware","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-_load_method_override_middleware","()","<p>Use MethodOverride middleware\n<p>@api private @since x.x.x\n"],["_load_session_middleware","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-_load_session_middleware","()","<p>Add session middleware\n<p>@api private @since 0.2.0\n"],["_payload","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-_payload","(payload)","<p>@since 0.3.5 @api private\n"],["_requires_no_body?","Hanami::Action::Head","classes/Hanami/Action/Head.html#method-i-_requires_no_body-3F","()","<p>@since 0.3.2 @api private\n"],["_sort_handled_exceptions!","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-_sort_handled_exceptions-21","()","<p>@since 0.5.0 @api private\n"],["absolute!","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-i-absolute-21","()","<p>Modifies the path prefix to have a prepended separator.\n<p>@return [self]\n<p>@since 0.3.1 @api private\n"],["absolute?","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-i-absolute-3F","()","<p>Returns whether the path prefix starts with its separator.\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.1 …\n"],["action","Hanami::Routing::RecognizedRoute","classes/Hanami/Routing/RecognizedRoute.html#method-i-action","()","<p>Action name\n<p>@return [String]\n<p>@since 0.5.0 @api public\n"],["action_module","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-action_module","(value = nil)","<p>Specify which is the default action module to be included when we use the\n`Hanami::Controller.action` …\n"],["action_separator","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-action_separator","()","<p>Separator between controller and action name.\n<p>@see Hanami::Routing::EndpointResolver::ACTION_SEPARATOR …\n"],["actions","Hanami::CliSubCommands::Destroy","classes/Hanami/CliSubCommands/Destroy.html#method-i-actions","(application_name, controller_and_action_name)",""],["actions","Hanami::CliSubCommands::Generate","classes/Hanami/CliSubCommands/Generate.html#method-i-actions","(application_name = nil, controller_and_action_name)",""],["adapter","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-adapter","(options = {})","<p>Adapter configuration. The application will instantiate adapter instance\nbased on this configuration. …\n"],["adapter","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-adapter","(options = nil)","<p>Register adapter\n<p>There could only 1 adapter can be registered per application\n<p>@overload adapter\n"],["adapter","Hanami::Repository::ClassMethods","classes/Hanami/Repository/ClassMethods.html#method-i-adapter","()",""],["adapter","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-adapter","()","<p>Get the currently configured adapter\n"],["adapter=","Hanami::Repository::ClassMethods","classes/Hanami/Repository/ClassMethods.html#method-i-adapter-3D","(adapter)","<p>Assigns an adapter.\n<p>Hanami::Model is shipped with two adapters:\n\n<pre><code>* SqlAdapter\n* MemoryAdapter</code></pre>\n"],["adapter_name","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-adapter_name","()","<p>Adapter name\n<p>@return [String] adapter name\n<p>@since x.x.x\n"],["add","Hanami::Utils::Inflector::IrregularRules","classes/Hanami/Utils/Inflector/IrregularRules.html#method-i-add","(key, value)","<p>@since 0.6.0 @api private\n"],["add","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-add","(attribute, *errors)","<p>Add an error to the set\n<p>@param attribute [Symbol] the name of the attribute @param errors [Array] a\ncollection …\n"],["add","Hanami::Validations::ValidationSet","classes/Hanami/Validations/ValidationSet.html#method-i-add","(name, options)","<p>@since 0.2.2 @api private\n"],["add_error","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-add_error","(*errors)","<p>@since 0.5.0 @api private\n"],["add_layout","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-add_layout","(layout)","<p>Add a layout to the registry\n<p>@since 0.2.0 @api private\n"],["add_mailer","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-add_mailer","(mailer)","<p>Add a mailer to the registry\n<p>@since 0.1.0 @api private\n"],["add_partial","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-add_partial","(partial)","<p>Add a partial to the registry\n<p>@since x.x.x @api private\n"],["add_view","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-add_view","(view)","<p>Add a view to the registry\n<p>@since 0.2.0 @api private\n"],["after","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-after","(*callbacks, &blk)","<p>@since 0.1.0\n"],["all","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-all","(collection)","<p>Returns all the records for the given collection\n<p>@param collection [Symbol] the target collection (it …\n"],["all","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-all","(collection)","<p>Returns all the records for the given collection\n<p>@param collection [Symbol] the target collection (it …\n"],["all","Hanami::Model::Adapters::Implementation","classes/Hanami/Model/Adapters/Implementation.html#method-i-all","(collection)","<p>Returns all the records for the given collection\n<p>@param collection [Symbol] the target collection (it …\n"],["all","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-i-all","()","<p>Returns all the raw records\n<p>@return [Array&lt;Hash&gt;]\n<p>@api private @since 0.1.0\n"],["all","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-all","()","<p>Resolves the query by fetching records from the database and translating\nthem into entities.\n<p>@return [Array] …\n"],["all","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-all","()","<p>Resolves the query by fetching records from the database and translating\nthem into entities.\n<p>@return [Array] …\n"],["all","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-all","()","<p>Returns all the persisted entities.\n<p>@return [Array&lt;Object&gt;] the result of the query\n<p>@since 0.1.0 …\n"],["all?","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-all-3F","()","<p>@since x.x.x\n"],["allowed_attribute_name?","Hanami::Entity::ClassMethods","classes/Hanami/Entity/ClassMethods.html#method-i-allowed_attribute_name-3F","(name)","<p>Check if attr_reader define the given attribute\n<p>@since 0.5.1 @api private\n"],["and","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-and","(condition = nil, &blk)",""],["and","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-and","(condition = nil, &blk)",""],["any?","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-any-3F","()","<p>Check if the set has any entry\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since 0.2.0\n"],["any?","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-any-3F","()","<p>@since x.x.x\n"],["app","Hanami::CliSubCommands::Generate","classes/Hanami/CliSubCommands/Generate.html#method-i-app","(application_name)",""],["app=","Hanami::Server","classes/Hanami/Server.html#method-i-app-3D","(shotgun_loader)","<p>Adds Shotgun Loader\n<p>@since 0.8.0 @api private\n"],["app_name","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-i-app_name","(value = nil)","<p>Application name value.\n<p>@overload app_name(value)\n\n<pre><code>Sets the given value\n@param value [String] for app name ...</code></pre>\n"],["append","Hanami::Utils::Callbacks::Chain","classes/Hanami/Utils/Callbacks/Chain.html#method-i-append","(*callbacks, &block)","<p>Appends the given callbacks to the end of the chain.\n<p>@param callbacks [Array] one or multiple callbacks …\n"],["append_after","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-append_after","(*callbacks, &blk)","<p>Define a callback for an Action. The callback will be executed\n*<strong>after</strong>* the action is called, in the order …\n"],["append_before","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-append_before","(*callbacks, &blk)","<p>Define a callback for an Action. The callback will be executed\n*<strong>before</strong>* the action is called, in the …\n"],["application","Hanami::CliSubCommands::Destroy","classes/Hanami/CliSubCommands/Destroy.html#method-i-application","(name)",""],["application_name","Hanami::Logger","classes/Hanami/Logger.html#method-i-application_name","()","<p>Returns the current application name, this is used for tagging purposes\n<p>@return [String] the application …\n"],["application_name","Hanami::Welcome","classes/Hanami/Welcome.html#method-i-application_name","()",""],["applications","Hanami::Application","classes/Hanami/Application.html#method-c-applications","()","<p>Registry of Hanami applications in the current Ruby process\n<p>@return [Set] a set of all the registered …\n"],["apply","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-apply","()",""],["apply","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-apply","()","<p>Migrate, dump schema, delete migrations.\n<p>This is an experimental feature. It may change or be removed …\n"],["apply","Hanami::Utils::Inflector::IrregularRules","classes/Hanami/Utils/Inflector/IrregularRules.html#method-i-apply","(string)","<p>@since 0.6.0 @api private\n"],["apps_path","Hanami::Environment","classes/Hanami/Environment.html#method-i-apps_path","()","<p>@since 0.4.0 @api private\n"],["architecture","Hanami::Environment","classes/Hanami/Environment.html#method-i-architecture","()","<p>@since 0.4.0 @api private\n"],["as","Hanami::Routing::Resources::CollectionAction","classes/Hanami/Routing/Resources/CollectionAction.html#method-i-as","(action_name)",""],["asc","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-asc","(*columns)","<p>Alias for order\n<p>@since 0.1.0\n<p>@see Hanami::Model::Adapters::Memory::Query#order\n"],["asc","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-asc","(*columns)","<p>Alias for order\n<p>@since 0.1.0\n<p>@see Hanami::Model::Adapters::Sql::Query#order\n"],["asset_path","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-asset_path","(source)","<p>Relative URL\n<p>@since 0.1.0 @api private\n"],["asset_path","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-asset_path","(source)","<p>It generates the relative URL for the given source.\n<p>It can be the name of the asset, coming from the sources …\n"],["asset_url","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-asset_url","(source)","<p>Absolute URL\n<p>@since 0.1.0 @api private\n"],["asset_url","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-asset_url","(source)","<p>It generates the absolute URL for the given source.\n<p>It can be the name of the asset, coming from the sources …\n"],["assets","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-assets","(&blk)","<p>The application will serve the static assets under these directories.\n<p>By default it&#39;s equal to the …\n"],["attribute","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-attribute","(name, coercer, options = {})","<p>Map an attribute.\n<p>An attribute defines a property of an object. This is storage independent.\nFor instance, …\n"],["attribute","Hanami::Validations::AttributeDefiner::ClassMethods","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html#method-i-attribute","(name, options = {}, &block)","<p>Define an attribute\n<p>@param name [#to_sym] the name of the attribute @param options [Hash]\noptional set …\n"],["attribute","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html#method-i-attribute","(name, options = {})","<p>@since 0.2.3 @api private\n<p>@see Hanami::Validations::AttributeDefiner#attribute\n"],["attribute_names","Hanami::Entity","classes/Hanami/Entity.html#method-i-attribute_names","()","<p>Return the set of attribute names\n<p>@since 0.5.1\n<p>@example\n"],["attributes","Hanami::Entity::ClassMethods","classes/Hanami/Entity/ClassMethods.html#method-i-attributes","(*attrs)","<p>(Re)defines getters, setters and initialization for the given attributes.\n<p>These attributes can match the …\n"],["audio","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-audio","(source = nil, options = {}, &blk)","<p>Generate <code>audio</code> tag for given source\n<p>It accepts one string representing the name of the asset, if it comes …\n"],["average","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-average","(column)","<p>Returns the average of the values for the given column.\n<p>@param column [Symbol] the column name\n<p>@return …\n"],["average","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-average","(column)","<p>Returns the average of the values for the given column.\n<p>@param column [Symbol] the column name\n<p>@return …\n"],["avg","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-avg","(column)",""],["avg","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-avg","(column)",""],["bcc","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-bcc","(value = nil)","<p>Sets the bcc (blind carbon copy) for mail messages\n<p>It accepts a hardcoded value as a string or array of …\n"],["before","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-before","(*callbacks, &blk)","<p>@since 0.1.0\n"],["blank?","Hanami::Utils::Blank","classes/Hanami/Utils/Blank.html#method-c-blank-3F","(object)","<p>Checks object is blank\n<p>@example Basic Usage\n\n<pre><code>require &#39;hanami/utils/blank&#39;\n\nHanami::Utils::Blank.blank?(Hanami::Utils::String.new(&#39;&#39;)) ...</code></pre>\n"],["blank_value?","Hanami::Validations::BlankValueChecker","classes/Hanami/Validations/BlankValueChecker.html#method-i-blank_value-3F","()","<p>Checks if the value is “blank”.\n<p>@since 0.2.2 @api private\n"],["body_parsers","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-body_parsers","(*parsers)","<p>Body parsing configuration.\n<p>Specify a set of parsers for specific mime types that your application will\n…\n"],["build","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-i-build","()","<p>Returns new Hanami::Logger instance with all options\n<p>@return [Hanami::Logger,Object] a logger\n<p>@since x.x.x …\n"],["build","Hanami::Model::Config::Adapter","classes/Hanami/Model/Config/Adapter.html#method-i-build","(mapper)","<p>Initialize the adapter\n<p>@param mapper [Hanami::Model::Mapper] the mapper instance\n<p>@return [Hanami::Model::Adapters::SqlAdapter, …\n"],["bundler_groups","Hanami::Environment","classes/Hanami/Environment.html#method-i-bundler_groups","()","<p>A set of Bundler groups\n<p>@return [Array] A set of groups\n<p>@since 0.2.0 @api private\n"],["cache","Hanami::Assets::Compiler","classes/Hanami/Assets/Compiler.html#method-c-cache","()","<p>Assets cache\n<p>@since 0.1.0 @api private\n<p>@see Hanami::Assets::Cache\n"],["cache_control","Hanami::Action::Cache","classes/Hanami/Action/Cache.html#method-i-cache_control","(*values)","<p>Specify response freshness policy for HTTP caches (Cache-Control header).\nAny number of non-value directives …\n"],["cache_control","Hanami::Action::Cache::CacheControl::ClassMethods","classes/Hanami/Action/Cache/CacheControl/ClassMethods.html#method-i-cache_control","(*values)",""],["cache_control_directives","Hanami::Action::Cache::CacheControl::ClassMethods","classes/Hanami/Action/Cache/CacheControl/ClassMethods.html#method-i-cache_control_directives","()",""],["call","Hanami::Action::Callable","classes/Hanami/Action/Callable.html#method-i-call","(env)","<p>Execute application logic. It implements the Rack protocol.\n<p>The request params are passed as an argument …\n"],["call","Hanami::Action::Callbacks::InstanceMethods","classes/Hanami/Action/Callbacks/InstanceMethods.html#method-i-call","(params)","<p>Implements the Rack/Hanami::Action protocol\n<p>@since 0.1.0 @api private\n"],["call","Hanami::Action::Rack::Callable","classes/Hanami/Action/Rack/Callable.html#method-i-call","(env)","<p>Callable module for actions. With this module, actions with middlewares\nwill be able to work with rack …\n"],["call","Hanami::Action::Rack::File","classes/Hanami/Action/Rack/File.html#method-i-call","(env)","<p>@since 0.4.3 @api private\n"],["call","Hanami::Application","classes/Hanami/Application.html#method-i-call","(env)","<p>Process a request. This method makes Hanami applications compatible with\nthe Rack protocol.\n<p>@param env …\n"],["call","Hanami::Container","classes/Hanami/Container.html#method-i-call","(env)",""],["call","Hanami::Interactor::Interface","classes/Hanami/Interactor/Interface.html#method-i-call","()","<p>Triggers the operation and return a result.\n<p>All the instance variables will be available in the result. …\n"],["call","Hanami::Logger::Formatter","classes/Hanami/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","<p>@since 0.5.0 @api private\n<p>@see\nwww.ruby-doc.org/stdlib/libdoc/logger/rdoc/Logger/Formatter.html#method-i-call\n…\n"],["call","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-call","(env)","<p>Process a request. This method makes the middleware stack compatible with\nthe Rack protocol.\n<p>@param env …\n"],["call","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-call","(env)","<p>Resolve the given Rack env to a registered endpoint and invoke it.\n<p>@param env [Hash] a Rack env instance …\n"],["call","Hanami::Routing::ClassEndpoint","classes/Hanami/Routing/ClassEndpoint.html#method-i-call","(env)","<p>Rack interface\n<p>@since 0.1.0\n"],["call","Hanami::Routing::Default","classes/Hanami/Routing/Default.html#method-i-call","(env)",""],["call","Hanami::Routing::Default::NullAction","classes/Hanami/Routing/Default/NullAction.html#method-i-call","(env)",""],["call","Hanami::Routing::ForceSsl","classes/Hanami/Routing/ForceSsl.html#method-i-call","(env)","<p>Set 301 status and Location header if this feature is activated.\n<p>@param env [Hash] a Rack env instance …\n"],["call","Hanami::Routing::LazyEndpoint","classes/Hanami/Routing/LazyEndpoint.html#method-i-call","(env)","<p>Rack interface\n<p>@raise [EndpointNotFound] when the endpoint can&#39;t be found.\n<p>@since 0.1.0\n"],["call","Hanami::Routing::Parsers","classes/Hanami/Routing/Parsers.html#method-i-call","(env)",""],["call","Hanami::Routing::RecognizedRoute","classes/Hanami/Routing/RecognizedRoute.html#method-i-call","(env)","<p>Rack protocol compatibility\n<p>@param env [Hash] Rack env\n<p>@return [Array] serialized Rack response\n"],["call","Hanami::Static","classes/Hanami/Static.html#method-i-call","(env)",""],["call","Hanami::Utils::Callbacks::Callback","classes/Hanami/Utils/Callbacks/Callback.html#method-i-call","(context, *args)","<p>Executes the callback within the given context and passing the given\narguments.\n<p>@param context [Object] …\n"],["call","Hanami::Utils::Callbacks::MethodCallback","classes/Hanami/Utils/Callbacks/MethodCallback.html#method-i-call","(context, *args)","<p>Executes the callback within the given context and eventually passing the\ngiven arguments. Those arguments …\n"],["call","Hanami::Welcome","classes/Hanami/Welcome.html#method-i-call","(env)",""],["capitalize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-capitalize","()","<p>Return a capitalized version of the string\n<p>@return [Hanami::Utils::String] the transformed string\n<p>@since …\n"],["cc","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-cc","(value = nil)","<p>Sets the cc (carbon copy) for mail messages\n<p>It accepts a hardcoded value as a string or array of strings. …\n"],["cdn","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-cdn","(value = nil)","<p>CDN mode\n<p>Determine if the helpers should always generate absolute URL. This is\nuseful in production mode. …\n"],["changed?","Hanami::Entity::DirtyTracking","classes/Hanami/Entity/DirtyTracking.html#method-i-changed-3F","()","<p>Checks if the attributes were changed\n<p>@return [TrueClass, FalseClass] the result of the check\n<p>@since 0.3.1 …\n"],["changed_attributes","Hanami::Entity::DirtyTracking","classes/Hanami/Entity/DirtyTracking.html#method-i-changed_attributes","()","<p>Getter for hash of changed attributes. Return empty hash, if there is no\nchanges Getter for hash of changed …\n"],["charset","Hanami::Action::Mime","classes/Hanami/Action/Mime.html#method-i-charset","()","<p>The charset that will be automatically set in the response.\n<p>It prefers, in order:\n\n<pre><code>* Explicit set value ...</code></pre>\n"],["charset=","Hanami::Action::Mime","classes/Hanami/Action/Mime.html#method-i-charset-3D","(value)","<p>Action charset setter, receives new charset value\n<p>@return [String] the charset of the request.\n<p>@since  …\n"],["class","Hanami::Utils::BasicObject","classes/Hanami/Utils/BasicObject.html#method-i-class","()","<p>Return the class for debugging purposes.\n<p>@since 0.3.5\n<p>@see ruby-doc.org/core/Object.html#method-i-class …\n"],["class","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-class","()","<p>Returns the classname as string\n<p>@return classname\n<p>@since 0.3.0\n"],["class_attribute","Hanami::Utils::ClassAttribute::ClassMethods","classes/Hanami/Utils/ClassAttribute/ClassMethods.html#method-i-class_attribute","(*attributes)","<p>Defines a class level accessor for the given attribute(s).\n<p>A value set for a superclass is automatically …\n"],["classify","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-i-classify","(string)",""],["classify","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-classify","()","<p>Return a CamelCase version of the string\n<p>@return [String] the transformed string\n<p>@since 0.1.0\n"],["clear","Hanami::Action::Flash","classes/Hanami/Action/Flash.html#method-i-clear","()","<p>Removes entirely the flash from the session if it has stale contents or if\nempty.\n<p>@return [void]\n<p>@since …\n"],["clear","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-clear","(collection)","<p>Empties the given collection.\n<p>@param collection [Symbol] the target collection (it must be mapped).\n<p>@since …\n"],["clear","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-clear","(collection)","<p>Deletes all the records from the given collection and resets the identity\ncounter.\n<p>@param collection [Symbol] …\n"],["clear","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-i-clear","()","<p>Deletes all the records and resets the identity counter.\n<p>@api private @since 0.1.0\n"],["clear","Hanami::Model::Adapters::Memory::Command","classes/Hanami/Model/Adapters/Memory/Command.html#method-i-clear","()","<p>Deletes all the records from the table.\n<p>@see Hanami::Model::Adapters::Memory::Collection#clear\n<p>@api private …\n"],["clear","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-clear","(collection)","<p>Deletes all the records from the given collection and resets the identity\ncounter.\n<p>@param collection [Symbol] …\n"],["clear","Hanami::Model::Adapters::Sql::Command","classes/Hanami/Model/Adapters/Sql/Command.html#method-i-clear","()",""],["clear","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-clear","(collection)","<p>Deletes all the records from the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["clear","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-clear","()","<p>Deletes all the records from the current collection.\n<p>If used with a SQL database it executes a `DELETE …\n"],["clear","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-clear","()","<p>Clears the internal state of the errors\n<p>@since 0.1.0 @api private\n"],["close","Hanami::Logger","classes/Hanami/Logger.html#method-i-close","()","<p>Close the logging stream if this stream isn&#39;t an STDOUT\n<p>@since x.x.x\n"],["code_reloading?","Hanami::Environment","classes/Hanami/Environment.html#method-i-code_reloading-3F","()","<p>Determine if activate code reloading for the current environment while\nrunning the server.\n<p>In order to …\n"],["coerce","Hanami::Validations::Coercions","classes/Hanami/Validations/Coercions.html#method-c-coerce","(coercer, value, &blk)","\n<pre><code>Coerces the given values with the given type\n</code></pre>\n<p> @param coercer [Class] the type\n\n<pre><code>@param value [Array] of objects ...</code></pre>\n"],["coercer","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-i-coercer","()","<p>@api private @since 0.5.0\n"],["collection","Hanami::Model::Mapper","classes/Hanami/Model/Mapper.html#method-i-collection","(name, &blk)","<p>Maps a collection.\n<p>A collection is a set of homogeneous records. Think of a table of a SQL\ndatabase or …\n"],["collection","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-collection","()","<p>Get the currently configured collection name\n"],["command","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-command","(query)","<p>Executes a command for the given query.\n<p>@param query [Object] the query object to act on.\n<p>@since 0.1.0 …\n"],["command","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-command","(collection)","<p>Fabricates a command for the given query.\n<p>@param collection [Symbol] the collection name (it must be mapped) …\n"],["command","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-command","(query)","<p>Fabricates a command for the given query.\n<p>@param query [Hanami::Model::Adapters::Sql::Query] the query …\n"],["compile","Hanami::Assets::Compiler","classes/Hanami/Assets/Compiler.html#method-c-compile","(configuration, name)","<p>Compile the given asset\n<p>@param configuration [Hanami::Assets::Configuration] the application\n\n<pre><code>configuration ...</code></pre>\n"],["compile","Hanami::Assets::Compiler","classes/Hanami/Assets/Compiler.html#method-i-compile","()","<p>Compile the asset\n<p>@raise [Hanami::Assets::MissingAsset] if the asset can&#39;t be found in\n\n<pre><code>sources\n</code></pre>\n"],["compile","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-compile","(value = nil)","<p>Compile mode\n<p>Determine if compile assets from sources to destination. Usually this is\nturned off in production …\n"],["compress","Hanami::Assets::Compressors::Abstract","classes/Hanami/Assets/Compressors/Abstract.html#method-i-compress","(filename)","<p>Compress the given asset\n<p>@param filename [String, Pathname] the absolute path to the asset\n<p>@return [String] …\n"],["compress","Hanami::Assets::Compressors::BuiltinJavascript","classes/Hanami/Assets/Compressors/BuiltinJavascript.html#method-i-compress","(filename)","<p>@since 0.1.0 @api private\n"],["compress","Hanami::Assets::Compressors::BuiltinStylesheet","classes/Hanami/Assets/Compressors/BuiltinStylesheet.html#method-i-compress","(filename)","<p>@since 0.1.0 @api private\n"],["compress","Hanami::Assets::Compressors::NullCompressor","classes/Hanami/Assets/Compressors/NullCompressor.html#method-i-compress","(filename)","<p>@since 0.1.0 @api private\n"],["compress","Hanami::Assets::Compressors::SassStylesheet","classes/Hanami/Assets/Compressors/SassStylesheet.html#method-i-compress","(filename)","<p>@since 0.1.0 @api private\n"],["config","Hanami::Environment","classes/Hanami/Environment.html#method-i-config","()","<p>Application&#39;s config directory\n<p>It&#39;s the application where all the configurations are stored.\n<p>In …\n"],["configuration","Hanami::Application","classes/Hanami/Application.html#method-i-configuration","()","<p>Return the configuration for this application\n<p>@since 0.1.0 @api private\n<p>@see Hanami::Application.configuration …\n"],["configure","Hanami::Application","classes/Hanami/Application.html#method-c-configure","(environment = nil, &blk)","<p>Configure the application. It yields the given block in the context of the\nconfiguration\n<p>@param environment …\n"],["configure","Hanami::Assets","classes/Hanami/Assets.html#method-c-configure","(&blk)","<p>Configure framework\n<p>@param blk [Proc] configuration code block\n<p>@return self\n"],["configure","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-configure","(environment = nil, path = nil, &blk)","<p>Set a block yield when the configuration will be loaded or set a path for\nthe specific environment.\n<p>@param …\n"],["configure","Hanami::Container","classes/Hanami/Container.html#method-c-configure","(options = {}, &blk)",""],["configure","Hanami::Controller","classes/Hanami/Controller.html#method-c-configure","(&blk)","<p>Configure the framework. It yields the given block in the context of the\nconfiguration\n<p>@param blk [Proc] …\n"],["configure","Hanami::Mailer","classes/Hanami/Mailer.html#method-c-configure","(&blk)","<p>Configure the framework. It yields the given block in the context of the\nconfiguration\n<p>@param blk [Proc] …\n"],["configure","Hanami::Model","classes/Hanami/Model.html#method-c-configure","(&blk)","<p>Configure the framework. It yields the given block in the context of the\nconfiguration\n<p>@param blk [Proc] …\n"],["configure","Hanami::View","classes/Hanami/View.html#method-c-configure","(&blk)","<p>Configure the framework. It yields the given block in the context of the\nconfiguration\n<p>@param blk [Proc] …\n"],["connection_string","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-connection_string","()","<p>Returns a string which can be executed to start a console suitable for the\nconfigured database.\n<p>@return …\n"],["connection_string","Hanami::Model::Adapters::Sql::Consoles::Mysql","classes/Hanami/Model/Adapters/Sql/Consoles/Mysql.html#method-i-connection_string","()",""],["connection_string","Hanami::Model::Adapters::Sql::Consoles::Postgresql","classes/Hanami/Model/Adapters/Sql/Consoles/Postgresql.html#method-i-connection_string","()",""],["connection_string","Hanami::Model::Adapters::Sql::Consoles::Sqlite","classes/Hanami/Model/Adapters/Sql/Consoles/Sqlite.html#method-i-connection_string","()",""],["connection_string","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-connection_string","()","<p>Returns a string which can be executed to start a console suitable for the\nconfigured database, adding …\n"],["console","Hanami::Cli","classes/Hanami/Cli.html#method-i-console","()",""],["console","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-console","(name = nil)",""],["constantize","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-i-constantize","(string)",""],["container?","Hanami::Environment","classes/Hanami/Environment.html#method-i-container-3F","()","<p>@since 0.4.0 @api private\n"],["content","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-content","(key)","<p>Returns a content for the given key, by trying to invoke on the current\nscope, a method with the same …\n"],["content_security_policy","Hanami::Config::Security","classes/Hanami/Config/Security.html#method-i-content_security_policy","(value = nil)","<p>Content-Policy-Security headers&#39; value\n<p>@overload content_security_policy(value)\n\n<pre><code>Sets the given value ...</code></pre>\n"],["content_type","Hanami::Action::Mime","classes/Hanami/Action/Mime.html#method-i-content_type","()","<p>The content type that will be automatically set in the response.\n<p>It prefers, in order:\n\n<pre><code>* Explicit set value ...</code></pre>\n"],["content_type","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-content_type","()","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["controller","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-controller","()","<p>It lazily collects all the low level settings for Hanami::Controller&#39;s\nconfiguration and applies …\n"],["controller_pattern","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-controller_pattern","(value = nil)","<p>Defines a relative pattern to find controllers.\n<p>Hanami supports multiple architectures (aka application …\n"],["cookies","Hanami::Action::Cookies","classes/Hanami/Action/Cookies.html#method-i-cookies","()","<p>Gets the cookies from the request and expose them as an Hash\n<p>It automatically sets options from global …\n"],["cookies","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-cookies","()","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["cookies","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-cookies","(options = nil)","<p>Configure cookies Enable cookies (disabled by default).\n<p>This is part of a DSL, for this reason when this …\n"],["cookies","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-cookies","(options = nil)","<p>Set default cookies options for all responses\n<p>By default this value is an empty hash.\n<p>@since 0.4.0\n"],["copy!","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-copy-21","(base)","<p>Copy the configuration for the given action\n<p>@param base [Class] the target action\n<p>@return void\n"],["copy!","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-copy-21","(base)","<p>Copy the configuration for the given mailer\n<p>@param base [Class] the target mailer\n<p>@return void\n"],["copy!","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-copy-21","(base)","<p>Copy the configuration for the given action\n<p>@param base [Class] the target action\n<p>@return void\n"],["count","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-count","()","<p>Returns a count of the records for the current conditions.\n<p>@return [Fixnum]\n<p>@since 0.1.0\n"],["count","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-count","()","<p>Returns a count of the records for the current conditions.\n<p>@return [Fixnum]\n<p>@since 0.1.0\n"],["count","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-count","()","<p>Returns how many validations have failed\n<p>@return [Fixnum] the count\n<p>@since 0.1.0\n"],["create","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-create","()",""],["create","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-create","(collection, entity)","<p>Creates a record in the database for the given entity. It should assign an\nid (identity) to the entity …\n"],["create","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-create","(collection, entity)","<p>Creates a record in the database for the given entity. It assigns the `id`\nattribute, in case of success. …\n"],["create","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-i-create","(entity)","<p>Creates a record for the given entity and assigns an id.\n<p>@param entity [Object] the entity to persist …\n"],["create","Hanami::Model::Adapters::Memory::Command","classes/Hanami/Model/Adapters/Memory/Command.html#method-i-create","(entity)","<p>Creates a record for the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see Hanami::Model::Adapters::Memory::Collection#insert …\n"],["create","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-create","(collection, entity)","<p>Creates a record in the database for the given entity. It assigns the `id`\nattribute, in case of success. …\n"],["create","Hanami::Model::Adapters::Sql::Command","classes/Hanami/Model/Adapters/Sql/Command.html#method-i-create","(entity)","<p>Creates a record for the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see Hanami::Model::Adapters::Sql::Collection#insert …\n"],["create","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-create","(collection, entity)","<p>Creates a record in the database for the given entity. It assigns the `id`\nattribute, in case of success. …\n"],["create","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-create","()","<p>Create database defined by current configuration.\n<p>It&#39;s only implemented for the following databases: …\n"],["create","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-i-create","()","<p>Create database. It must be implemented by subclasses.\n<p>@since 0.4.0 @api private\n<p>@see Hanami::Model::Migrator.create …\n"],["create","Hanami::Model::Migrator::MySQLAdapter","classes/Hanami/Model/Migrator/MySQLAdapter.html#method-i-create","()","<p>@since 0.4.0 @api private\n"],["create","Hanami::Model::Migrator::PostgresAdapter","classes/Hanami/Model/Migrator/PostgresAdapter.html#method-i-create","()","<p>@since 0.4.0 @api private\n"],["create","Hanami::Model::Migrator::SQLiteAdapter","classes/Hanami/Model/Migrator/SQLiteAdapter.html#method-i-create","()","<p>@since 0.4.0 @api private\n"],["create","Hanami::Model::Migrator::SQLiteAdapter::Memory","classes/Hanami/Model/Migrator/SQLiteAdapter/Memory.html#method-i-create","()","<p>@since 0.4.0 @api private\n"],["create","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-create","(entity)","<p>Creates a record in the database for the given entity. It returns a copy of\nthe entity with `id` assigned. …\n"],["css_compressor","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-css_compressor","()","<p>Load Stylesheet compressor\n<p>@return [Hanami::Assets::Compressors::Stylesheet] a compressor\n<p>@raise [Hanami::Assets::Compressors::UnknownCompressorError] …\n"],["dasherize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-dasherize","()","<p>Return a downcased and dash separated version of the string\n<p>@return [Hanami::Utils::String] the transformed …\n"],["database","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-database","()","<p>Returns DB name from conenction\n<p>Even when adapter doesn&#39;t provide it explicitly it tries to parse …\n"],["database_type","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-database_type","()","<p>Returns DB type\n<p>@example\n\n<pre><code>connection.database_type\n# =&gt; &#39;postgres&#39;\n</code></pre>\n"],["deep_dup","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-deep_dup","()","<p>Return a deep copy of the current Hanami::Utils::Hash\n<p>@return [Hash] a deep duplicated self\n<p>@since 0.3.1 …\n"],["default","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-i-default","()",""],["default_charset","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-default_charset","(charset = nil)","<p>Set a charset as default fallback for all the requests without a strict\nrequirement for the charset. …\n"],["default_charset","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-default_charset","(value = nil)","<p>@since 0.1.0\n"],["default_encoding","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-default_encoding","(value = nil)","<p>Default encoding for templates\n<p>This is part of a DSL, for this reason when this method is called with …\n"],["default_format","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-default_format","(format = nil)","<p>Set a format as default fallback for all the requests without a strict\nrequirement for the mime type. …\n"],["default_headers","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-default_headers","(headers = nil)","<p>Set default headers for all responses\n<p>By default this value is an empty hash.\n<p>@since 0.4.0\n"],["default_request_format","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-default_request_format","(format = nil)","<p>Set a format as default fallback for all the requests without a strict\nrequirement for the mime type. …\n"],["default_request_format","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-default_request_format","(format = nil)","<p>Set a format as default fallback for all the requests without a strict\nrequirement for the mime type. …\n"],["default_response_format","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-default_response_format","(format = nil)","<p>Set a format to be used for all responses regardless of the request type.\n<p>The given format must be coercible …\n"],["default_response_format","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-default_response_format","(format = nil)","<p>Set a format to be used for all responses regardless of the request type.\n<p>The given format must be coercible …\n"],["define","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-c-define","(&blk)","<p>Returns the given block as it is.\n<p>When Hanami::Router is used as a standalone gem and the routes are defined\n…\n"],["define","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-define","(&blk)","<p>To support defining routes in the `define` wrapper.\n<p>@param blk [Proc] the block to define the routes\n<p>@return …\n"],["define_attr_accessor","Hanami::Entity::ClassMethods","classes/Hanami/Entity/ClassMethods.html#method-i-define_attr_accessor","(attr)","<p>Define setter/getter methods for attributes.\n<p>@param attr [Symbol] an attribute name\n<p>@since 0.3.1 @api private …\n"],["define_attr_accessor","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html#method-i-define_attr_accessor","(attr)","<p>Override attribute accessors function.\n<p>@since 0.3.1\n<p>@api private @see Hanami::Model::Entity#define_attr_accessor …\n"],["define_commands","Hanami::CliBase","classes/Hanami/CliBase.html#method-i-define_commands","(&blk)","<p>Add new custom CLI command to special CLI class. Please be careful. This is\na private method that can …\n"],["defined?","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-defined-3F","()","<p>Check if there are defined routes\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since 0.2.0 @api …\n"],["defined_attributes","Hanami::Validations::AttributeDefiner::ClassMethods","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html#method-i-defined_attributes","()","<p>Set of user defined attributes\n<p>@return [Array&lt;String&gt;]\n<p>@since 0.2.2 @api private\n"],["defined_attributes","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html#method-i-defined_attributes","()","<p>@return [Array&lt;String&gt;]\n<p>@since 0.3.1 @api private\n"],["delete","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-delete","(collection, entity)","<p>Deletes a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["delete","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-delete","(collection, entity)","<p>Deletes a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["delete","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-i-delete","(entity)","<p>Deletes the record corresponding to the given entity.\n<p>@param entity [Object] the entity to delete\n<p>@see …\n"],["delete","Hanami::Model::Adapters::Memory::Command","classes/Hanami/Model/Adapters/Memory/Command.html#method-i-delete","(entity)","<p>Deletes the corresponding record for the given entity.\n<p>@param entity [Object] the entity to delete\n<p>@see …\n"],["delete","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-delete","(collection, entity)","<p>Deletes a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["delete","Hanami::Model::Adapters::Sql::Command","classes/Hanami/Model/Adapters/Sql/Command.html#method-i-delete","()","<p>Deletes all the records for the current query.\n<p>It&#39;s used to delete a single record or an entire database …\n"],["delete","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-delete","(collection, entity)","<p>Deletes a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["delete","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-delete","(entity)","<p>Deletes a record in the database corresponding to the given entity.\n<p>If not already persisted (`id` present) …\n"],["delete","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-delete","(path, options = {}, &blk)","<p>Defines a route that accepts a DELETE request for the given path.\n<p>@param path [String] the relative URL …\n"],["delete","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-delete","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["delete","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-delete","(key)","<p>Deletes the key-value pair and returns the value from hsh whose key is\nequal to key.\n<p>@param key [Object] …\n"],["delete_param","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-delete_param","(*)","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["deliver","Hanami::Mailer","classes/Hanami/Mailer.html#method-i-deliver","()","<p>Delivers a multipart email, by looking at all the associated templates and\nrender them.\n<p>@since 0.1.0 @api …\n"],["deliver","Hanami::Mailer::ClassMethods","classes/Hanami/Mailer/ClassMethods.html#method-i-deliver","(locals = {})","<p>Delivers a multipart email message.\n<p>When a mailer defines a <code>html</code> and <code>txt</code> template,\nthey are both delivered. …\n"],["deliveries","Hanami::Mailer","classes/Hanami/Mailer.html#method-c-deliveries","()","<p>Test deliveries\n<p>This is a collection of delivered messages, used when\n<code>delivery_method</code> is set on <code>:test</code> …\n"],["delivery","Hanami::Mailer::Glue","classes/Hanami/Mailer/Glue.html#method-i-delivery","(&blk)","<p>@since 0.5.0 @api private\n"],["delivery_method","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-delivery_method","(method = nil, options = {})","<p>Specify a global delivery method for the mail gateway.\n<p>It supports the following delivery methods:\n\n<pre><code>* Exim ...</code></pre>\n"],["demodulize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-demodulize","()","<p>Return the string without the Ruby namespace of the class\n<p>@return [String] the transformed string\n<p>@since …\n"],["deploy","Hanami::Assets","classes/Hanami/Assets.html#method-c-deploy","()","<p>Prepare assets for deploys\n<p>@since 0.1.0\n"],["desc","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-desc","(*columns)","<p>Alias for reverse_order\n<p>@since 0.1.0\n<p>@see Hanami::Model::Adapters::Memory::Query#reverse_order\n"],["desc","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-desc","(*columns)","<p>Alias for reverse_order\n<p>@since 0.1.0\n<p>@see Hanami::Model::Adapters::Sql::Query#reverse_order\n"],["deserialize","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-deserialize","(records)","<p>Deserialize a set of records fetched from the database.\n<p>@param records [Array] a set of raw records\n<p>@api …\n"],["deserialize_attribute","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-deserialize_attribute","(attribute, value)","<p>Deserialize only one attribute from a raw value.\n<p>@param attribute [Symbol] the attribute name @param value …\n"],["destination_directory","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-destination_directory","()","<p>Destination directory\n<p>It&#39;s the combination of <code>public_directory</code> and\n<code>prefix</code>.\n<p>@since 0.1.0 @api private …\n"],["destroy","Hanami::Commands::Generate::Action","classes/Hanami/Commands/Generate/Action.html#method-i-destroy","()",""],["digest","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-digest","(value = nil)","<p>Digest mode\n<p>Determine if the helpers should generate the digest path for an asset.\nUsually this is turned …\n"],["disconnect","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-disconnect","()","<p>Disconnects the connection by freeing low level resources\n<p>@since 0.5.0\n"],["disconnect","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-disconnect","()","<p>@api private @since 0.5.0\n<p>@see Hanami::Model::Adapters::Abstract#disconnect\n"],["disconnect","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-disconnect","()","<p>@api private @since 0.5.0\n<p>@see Hanami::Model::Adapters::Abstract#disconnect\n"],["disconnect","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-disconnect","()","<p>@api private @since 0.5.0\n<p>@see Hanami::Model::Adapters::Abstract#disconnect\n"],["drop","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-drop","()",""],["drop","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-drop","()","<p>Drop database defined by current configuration.\n<p>It&#39;s only implemented for the following databases: …\n"],["drop","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-i-drop","()","<p>Drop database. It must be implemented by subclasses.\n<p>@since 0.4.0 @api private\n<p>@see Hanami::Model::Migrator.drop …\n"],["drop","Hanami::Model::Migrator::MySQLAdapter","classes/Hanami/Model/Migrator/MySQLAdapter.html#method-i-drop","()","<p>@since 0.4.0 @api private\n"],["drop","Hanami::Model::Migrator::PostgresAdapter","classes/Hanami/Model/Migrator/PostgresAdapter.html#method-i-drop","()","<p>@since 0.4.0 @api private\n"],["drop","Hanami::Model::Migrator::SQLiteAdapter","classes/Hanami/Model/Migrator/SQLiteAdapter.html#method-i-drop","()","<p>@since 0.4.0 @api private\n"],["drop","Hanami::Model::Migrator::SQLiteAdapter::Memory","classes/Hanami/Model/Migrator/SQLiteAdapter/Memory.html#method-i-drop","()","<p>@since 0.4.0 @api private\n"],["dump","Hanami::Model::Coercer","classes/Hanami/Model/Coercer.html#method-c-dump","(value)","<p>Serialize (dump) a Ruby object into a value that can be store by the\ndatabase.\n<p>@abstract\n<p>@raise [TypeError] …\n"],["dump","Hanami::Model::Migrator::MySQLAdapter","classes/Hanami/Model/Migrator/MySQLAdapter.html#method-i-dump","()","<p>@since 0.4.0 @api private\n"],["dump","Hanami::Model::Migrator::PostgresAdapter","classes/Hanami/Model/Migrator/PostgresAdapter.html#method-i-dump","()","<p>@since 0.4.0 @api private\n"],["dump","Hanami::Model::Migrator::SQLiteAdapter","classes/Hanami/Model/Migrator/SQLiteAdapter.html#method-i-dump","()","<p>@since 0.4.0 @api private\n"],["dump","Hanami::Utils::Json","classes/Hanami/Utils/Json.html#method-c-dump","(object)","<p>Dump the given object into a JSON payload\n<p>@param object [Object] any object\n<p>@return [String] the result …\n"],["dump_coercer","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-i-dump_coercer","()","<p>@api private @since 0.5.0\n"],["dup","Hanami::Utils::Duplicable","classes/Hanami/Utils/Duplicable.html#method-c-dup","(value, &blk)","<p>Duplicates the given value.\n<p>It accepts a block to customize the logic.\n<p>The following types aren&#39;t duped: …\n"],["dupe","Hanami::Assets","classes/Hanami/Assets.html#method-c-dupe","()","<p>Duplicate Hanami::Assets in order to create a new separated instance of the\nframework.\n<p>The new instance …\n"],["dupe","Hanami::Controller","classes/Hanami/Controller.html#method-c-dupe","()","<p>Duplicate Hanami::Controller in order to create a new separated instance of\nthe framework.\n<p>The new instance …\n"],["dupe","Hanami::Model","classes/Hanami/Model.html#method-c-dupe","()","\n<pre><code>Duplicate Hanami::Model in order to create a new separated instance\nof the framework.\n\nThe new instance ...</code></pre>\n"],["dupe","Hanami::View","classes/Hanami/View.html#method-c-dupe","()","<p>Duplicate Hanami::View in order to create a new separated instance of the\nframework.\n<p>The new instance …\n"],["duplicate","Hanami::Assets","classes/Hanami/Assets.html#method-c-duplicate","(mod, &blk)","\n<pre><code>Duplicate the framework and generate modules for the target application\n\n@param mod [Module] the Ruby ...</code></pre>\n"],["duplicate","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-duplicate","()","<p>@since 0.1.0 @api private\n"],["duplicate","Hanami::Controller","classes/Hanami/Controller.html#method-c-duplicate","(mod, controllers = 'Controllers', &blk)","\n<pre><code>Duplicate the framework and generate modules for the target application\n\n@param mod [Module] the Ruby ...</code></pre>\n"],["duplicate","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-duplicate","()","<p>Duplicate by copying the settings in a new instance.\n<p>@return [Hanami::Controller::Configuration] a copy …\n"],["duplicate","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-duplicate","()","<p>Duplicate by copying the settings in a new instance.\n<p>@return [Hanami::Mailer::Configuration] a copy of …\n"],["duplicate","Hanami::Model","classes/Hanami/Model.html#method-c-duplicate","(mod, &blk)","\n<pre><code>Duplicate the framework and generate modules for the target application\n\n@param mod [Module] the Ruby ...</code></pre>\n"],["duplicate","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-duplicate","()","<p>Duplicate by copying the settings in a new instance.\n<p>@return [Hanami::Model::Configuration] a copy of …\n"],["duplicate","Hanami::View","classes/Hanami/View.html#method-c-duplicate","(mod, views = 'Views', &blk)","\n<pre><code>Duplicate the framework and generate modules for the target application\n\n@param mod [Module] the Ruby ...</code></pre>\n"],["duplicate","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-duplicate","()","<p>Duplicate by copying the settings in a new instance.\n<p>@return [Hanami::View::Configuration] a copy of the …\n"],["duplicates","Hanami::Assets","classes/Hanami/Assets.html#method-c-duplicates","()","<p>Keep track of duplicated frameworks\n<p>@return [Array] a collection of duplicated frameworks\n<p>@since 0.1.0 …\n"],["each","Hanami::Action::Cache::Directives","classes/Hanami/Action/Cache/Directives.html#method-i-each","()",""],["each","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-each","()","<p>Iterates thru the collection and yields the given block. It skips\nduplications and raises an error in …\n"],["each","Hanami::Validations","classes/Hanami/Validations.html#method-i-each","(&blk)","<p>Iterates thru the defined attributes and their values\n<p>@param blk [Proc] a block @yield param attribute …\n"],["each","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-each","(&blk)","<p>Iterate thru the errors and yields the given block\n<p>@param blk [Proc] the given block @yield [error] a …\n"],["each","Hanami::Validations::ValidationSet","classes/Hanami/Validations/ValidationSet.html#method-i-each","(&blk)","<p>@since 0.2.2 @api private\n"],["each_key","Hanami::Validations::ValidationSet","classes/Hanami/Validations/ValidationSet.html#method-i-each_key","(&blk)","<p>@since 0.2.2 @api private\n"],["empty?","Hanami::Action::Flash","classes/Hanami/Action/Flash.html#method-i-empty-3F","()","<p>Check if there are contents stored in the flash from the current or the\nprevious request.\n<p>@return [TrueClass,FalseClass] …\n"],["empty?","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-empty-3F","()","<p>Check if the set is empty\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since 0.1.0\n"],["empty?","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-empty-3F","()","<p>@since x.x.x\n"],["enabled?","Hanami::Config::Cookies","classes/Hanami/Config/Cookies.html#method-i-enabled-3F","()","<p>Return if cookies are enabled\n<p>@return [TrueClass, FalseClass] enabled cookies\n<p>@since 0.3.0 @api private …\n"],["enabled?","Hanami::Config::Sessions","classes/Hanami/Config/Sessions.html#method-i-enabled-3F","()","<p>Check if the sessions are enabled\n<p>@return [FalseClass,TrueClass] the result of the check\n<p>@since 0.2.0 @api …\n"],["encode","Hanami::Utils::Escape::SafeString","classes/Hanami/Utils/Escape/SafeString.html#method-i-encode","(*args)","<p>Encode the string the given encoding\n<p>@return [SafeString] an encoded SafeString\n<p>@since 0.4.0 @api private …\n"],["engine","Hanami::Commands::Console","classes/Hanami/Commands/Console.html#method-i-engine","()","<p>@since 0.1.0 @api private\n"],["engine","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-i-engine","(value = nil)","<p>Custom logger engine.\n<p>This isn&#39;t used by default, but allows developers to use their own\nlogger.\n<p>@overload …\n"],["engines","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-engines","()","<p>@api private @since 0.1.0\n"],["engines","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-engines","()","<p>@api private @since 0.1.0\n"],["entity","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-entity","(klass = nil)","<p>Defines the entity that is persisted with this collection.\n<p>The entity can be any kind of object as long …\n"],["env","Hanami","classes/Hanami.html#method-c-env","()","<p>Return the current environment\n<p>@return [String] the current environment\n<p>@since 0.3.1\n"],["env?","Hanami","classes/Hanami.html#method-c-env-3F","(*names)","<p>Check to see if specified environment(s) matches the current environment.\n<p>If multiple names are given, …\n"],["env_config","Hanami::Environment","classes/Hanami/Environment.html#method-i-env_config","()","<p>Path to environment configuration file.\n<p>In order to decide the value, it looks up the following sources: …\n"],["env_for","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-env_for","(env, options = {}, params = nil)","<p>Fabricate Rack env for the given Rack env, path or named route\n<p>@param env [Hash, String, Symbol] Rack …\n"],["environment","Hanami","classes/Hanami.html#method-c-environment","()","<p>Return environment\n<p>@return [Hanami::Environment] environment\n<p>@api private @since 0.3.2\n"],["environment","Hanami::Environment","classes/Hanami/Environment.html#method-i-environment","()","<p>The current environment\n<p>In order to decide the value, it looks up to the following `ENV` vars:\n\n<pre><code>* HANAMI_ENV ...</code></pre>\n"],["environment?","Hanami::Environment","classes/Hanami/Environment.html#method-i-environment-3F","(*names)","<p>@since 0.3.1\n<p>@see Hanami.env?(name)\n"],["eql?","Hanami::Utils::Callbacks::MethodCallback","classes/Hanami/Utils/Callbacks/MethodCallback.html#method-i-eql-3F","(other)",""],["eql?","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-eql-3F","(other)",""],["eql?","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-eql-3F","(other)",""],["eql?","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-eql-3F","(other)",""],["error","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-error","()","<p>Returns the first errors collected during an operation\n<p>@return [nil,String] the error, if present\n<p>@since …\n"],["errors","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-i-errors","()",""],["errors","Hanami::Action::Session","classes/Hanami/Action/Session.html#method-i-errors","()","<p>Read errors from flash or delegate to the superclass\n<p>@return [Hanami::Validations::Errors] A collection …\n"],["errors","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-errors","()","<p>Returns all the errors collected during an operation\n<p>@return [Array] the errors\n<p>@since 0.3.5\n"],["errors","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-errors","()","<p>A flatten set of errors for all the attributes\n<p>@since 0.1.0 @api private\n"],["exception","Hanami::Utils::Inflector","classes/Hanami/Utils/Inflector.html#method-c-exception","(singular, plural)","<p>Add a custom inflection exception\n<p>@param [String] singular form @param [String] plural form\n<p>@since 0.6.0 …\n"],["exception_handler","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-exception_handler","(exception)","<p>Return a callable handler for the given exception\n<p>@param exception [Exception] an exception\n<p>@since 0.3.0 …\n"],["exclude","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-exclude","(condition = nil, &blk)","<p>Logical negation of a #where condition.\n<p>It accepts a `Hash` with only one pair. The key must be the name …\n"],["exclude","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-exclude","(*args)","<p>Filters the current scope with an `exclude` directive.\n<p>@param args [Array] the array of arguments\n<p>@see …\n"],["exclude","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-exclude","(condition = nil, &blk)","<p>Logical negation of a WHERE condition.\n<p>It accepts a `Hash` with only one pair. The key must be the name …\n"],["execute","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-execute","(raw)","<p>Executes a raw command\n<p>@param raw [String] the raw statement to execute on the connection\n<p>@return [NilClass] …\n"],["execute","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-execute","(raw)","<p>Executes a raw SQL command\n<p>@param raw [String] the raw SQL statement to execute on the connection\n<p>@raise …\n"],["exist?","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-exist-3F","()","<p>Checks if at least one record exists for the current conditions.\n<p>@return [TrueClass,FalseClass]\n<p>@since …\n"],["exist?","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-exist-3F","()","<p>Checks if at least one record exists for the current conditions.\n<p>@return [TrueClass,FalseClass]\n<p>@since …\n"],["exists?","Hanami::Hanamirc","classes/Hanami/Hanamirc.html#method-i-exists-3F","()","<p>Check if hanamirc file exists\n<p>@since 0.3.0 @api private\n<p>@return [Boolean] hanamirc file&#39;s path existing …\n"],["expires","Hanami::Action::Cache","classes/Hanami/Action/Cache.html#method-i-expires","(amount, *values)","<p>Set the Expires header and Cache-Control/max-age directive. Amount can be\nan integer number of seconds …\n"],["expires","Hanami::Action::Cache::Expires::ClassMethods","classes/Hanami/Action/Cache/Expires/ClassMethods.html#method-i-expires","(amount, *values)",""],["expires_directives","Hanami::Action::Cache::Expires::ClassMethods","classes/Hanami/Action/Cache/Expires/ClassMethods.html#method-i-expires_directives","()",""],["expose","Hanami::Action::Exposable::ClassMethods","classes/Hanami/Action/Exposable/ClassMethods.html#method-i-expose","(*names)","<p>Expose the given attributes on the outside of the object with a getter and\na special method called #exposures …\n"],["expose","Hanami::ClassMethods","classes/Hanami/ClassMethods.html#method-i-expose","(*instance_variable_names)","<p>Expose local instance variables into the returning value of\n<code>#call</code>\n<p>@param instance_variable_names [Symbol,Array&lt;Symbol&gt;] …\n"],["exposures","Hanami::Action::Exposable","classes/Hanami/Action/Exposable.html#method-i-exposures","()","<p>Set of exposures\n<p>@return [Hash] the exposures\n<p>@since 0.1.0\n"],["exposures","Hanami::Action::Exposable::ClassMethods","classes/Hanami/Action/Exposable/ClassMethods.html#method-i-exposures","()","<p>Set of exposures attribute names\n<p>@return [Array] the exposures attribute names\n<p>@since 0.1.0 @api private …\n"],["extended","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-c-extended","(base)","<p>Override Ruby&#39;s hook for modules. It includes callbacks logic\n<p>@param base [Class] the target action …\n"],["extended","Hanami::ClassMethods","classes/Hanami/ClassMethods.html#method-c-extended","(interactor)","<p>@since 0.5.0 @api private\n"],["extended","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-c-extended","(base)","<p>@since x.x.x @api private\n"],["extended","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html#method-c-extended","(base)","<p>Override for Module#extend\n<p>@since 0.2.3 @api private\n<p>@see ruby-doc.org/Module.html#method-i-extended\n"],["extended","Hanami::View::Escape","classes/Hanami/View/Escape.html#method-c-extended","(base)","<p>Module extended override\n<p>@since 0.4.0 @api private\n"],["extended","Hanami::View::Rendering","classes/Hanami/View/Rendering.html#method-c-extended","(base)",""],["fabricate","Hanami::Utils::Callbacks::Factory","classes/Hanami/Utils/Callbacks/Factory.html#method-c-fabricate","(callback)","<p>Instantiates a `Callback` according to if it responds to #call.\n<p>@param callback [Object] the object that …\n"],["fabricate","Hanami::Validations::NestedAttributes","classes/Hanami/Validations/NestedAttributes.html#method-c-fabricate","(&blk)","<p>@since 0.3.1 @api private\n"],["fail!","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-fail-21","()","<p>Force the status to be a failure\n<p>@since 0.3.5\n"],["favicon","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-favicon","(source = DEFAULT_FAVICON, options = {})","<p>Generate <code>link</code> tag application favicon.\n<p>If no argument is given, it assumes <code>favico.ico</code> from the\napplication. …\n"],["fetch","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-fetch","(raw, &blk)","<p>Fetches raw records from\n<p>@param raw [String] the raw query @param blk [Proc] an optional block that\nis …\n"],["fetch","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-fetch","(raw, &blk)","<p>Fetches raw result sets for the given SQL query\n<p>@param raw [String] the raw SQL query @param blk [Proc] …\n"],["file","Hanami::Mailer::Template","classes/Hanami/Mailer/Template.html#method-i-file","()","<p>Get the path to the template\n<p>@return [String] the pathname\n<p>@api private @since 0.1.0\n"],["files","Hanami::Assets::Config::Sources","classes/Hanami/Assets/Config/Sources.html#method-i-files","(name = nil)","<p>@since 0.1.0 @api private\n"],["files","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-files","()","<p>Application&#39;s assets\n<p>@since 0.1.0 @api private\n"],["find","Hanami::Assets::Config::Sources","classes/Hanami/Assets/Config/Sources.html#method-i-find","(filename)","<p>@since 0.1.0 @api private\n"],["find","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-find","(file)","<p>Find a file from sources\n<p>@since 0.1.0 @api private\n"],["find","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-find","()","<p>Find all the associated templates to the mailer. It recursively looks for\ntemplates under the root path …\n"],["find","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-find","(collection, id)","<p>Returns a unique record from the given collection, with the given identity.\n<p>@param collection [Symbol] …\n"],["find","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-find","(collection, id)","<p>Returns a unique record from the given collection, with the given id.\n<p>@param collection [Symbol] the target …\n"],["find","Hanami::Model::Adapters::Implementation","classes/Hanami/Model/Adapters/Implementation.html#method-i-find","(collection, id)","<p>Returns a unique record from the given collection, with the given id.\n<p>@param collection [Symbol] the target …\n"],["find","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-find","(id)","<p>Finds an entity by its identity.\n<p>If used with a SQL database, it corresponds to the primary key.\n<p>@param …\n"],["find","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-i-find","(options)","<p>Finds a path from the given options.\n<p>@param options [Hash] the path description @option options\n[String,Proc,Class,Object#call] …\n"],["find","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-find","(options)","<p>Finds a path from the given options.\n<p>@see Hanami::Routing::EndpointResolver#find\n<p>@since 0.1.0 @api private …\n"],["find","Hanami::View::Rendering::LayoutFinder","classes/Hanami/View/Rendering/LayoutFinder.html#method-i-find","()","<p>Find the layout for the view\n<p>@return [Hanami::Layout] the layout associated to the view\n<p>@see Hanami::View::Rendering::LayoutFinder.find …\n"],["find","Hanami::View::Rendering::LayoutFinder","classes/Hanami/View/Rendering/LayoutFinder.html#method-c-find","(layout, namespace = Object)","<p>Find a layout from the given name.\n<p>@param layout [Symbol,String,NilClass] layout name or nil if you want …\n"],["find","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-find","()","<p>Find a template for a partial. Initially it will look for the partial\ntemplate in the framework configuration …\n"],["find","Hanami::View::Rendering::PartialTemplatesFinder","classes/Hanami/View/Rendering/PartialTemplatesFinder.html#method-i-find","()","<p>Find partials under the given path\n<p>@return [Array] array of PartialFinder objects\n<p>@since x.x.x\n"],["find","Hanami::View::Rendering::TemplateFinder","classes/Hanami/View/Rendering/TemplateFinder.html#method-i-find","()","<p>Find a template for the current view context\n<p>@return [Hanami::View::Template] the requested template\n<p>@api …\n"],["find","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-find","()","<p>Find all the associated templates to the view. It recursively looks for\ntemplates under the root path …\n"],["find","Hanami::View::Rendering::ViewFinder","classes/Hanami/View/Rendering/ViewFinder.html#method-i-find","(template)","<p>Find a view for the given template. It looks up for the current view and\nits subclasses.\n<p>@param template …\n"],["find_partial","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-find_partial","(relative_partial_path, template_name, format)","<p>Load partials for each partial template file found under the given load\npaths\n<p>@since x.x.x @api private …\n"],["finish","Hanami::Action::Cache::CacheControl","classes/Hanami/Action/Cache/CacheControl.html#method-i-finish","()","<p>Finalize the response including default cache headers into the response\n<p>@since 0.3.0 @api private\n<p>@see …\n"],["finish","Hanami::Action::Cache::Expires","classes/Hanami/Action/Cache/Expires.html#method-i-finish","()","<p>Finalize the response including default cache headers into the response\n<p>@since 0.3.0 @api private\n<p>@see …\n"],["finish","Hanami::Action::CookieJar","classes/Hanami/Action/CookieJar.html#method-i-finish","()","<p>Finalize itself, by setting the proper headers to add and remove cookies,\nbefore the response is returned …\n"],["finish","Hanami::Action::Exposable","classes/Hanami/Action/Exposable.html#method-i-finish","()","<p>Finalize the response\n<p>@since 0.3.0 @api private\n<p>@see Hanami::Action#finish\n"],["finish","Hanami::Action::Glue","classes/Hanami/Action/Glue.html#method-i-finish","()","<p>Put the current instance into the Rack environment\n<p>@api private @since 0.3.0\n<p>@see Hanami::Action#finish …\n"],["finish","Hanami::Action::Head","classes/Hanami/Action/Head.html#method-i-finish","()","<p>Ensures to not send body or headers for HEAD requests and/or for status\ncodes that doesn&#39;t allow …\n"],["first","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-first","(collection)","<p>Returns the first record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["first","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-first","(collection)","<p>Returns the first record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["first","Hanami::Model::Adapters::Implementation","classes/Hanami/Model/Adapters/Implementation.html#method-i-first","(collection)","<p>Returns the first record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["first","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-first","()","<p>Returns the first entity in the database.\n<p>@return [Object,nil] the result of the query\n<p>@since 0.1.0\n"],["for","Hanami::Assets::Compressors::Javascript","classes/Hanami/Assets/Compressors/Javascript.html#method-c-for","(engine_name)","<p>Factory for Javascript compressors.\n<p>It loads a compressor for the given name.\n<p>@param engine_name [Symbol,String,NilClass,#compress] …\n"],["for","Hanami::Assets::Compressors::Stylesheet","classes/Hanami/Assets/Compressors/Stylesheet.html#method-c-for","(engine_name)","<p>Factory for Stylesheet compressors.\n<p>It loads a compressor for the given name.\n<p>@param engine_name [Symbol,String,NilClass,#compress] …\n"],["for","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-c-for","(base)","<p>Return a copy of the configuration of the framework instance associated\nwith the given class.\n<p>When multiple …\n"],["for","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-c-for","(base)","<p>Return a copy of the configuration of the framework instance associated\nwith the given class.\n<p>When multiple …\n"],["for","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-c-for","(connection)","<p>Loads and returns a specific adapter for the given connection.\n<p>@since 0.4.0 @api private\n"],["for","Hanami::Routing::Parsing::Parser","classes/Hanami/Routing/Parsing/Parser.html#method-c-for","(parser)","<p>@since 0.2.0\n"],["for","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-for","(attribute)","<p>Return the errors for the given attribute\n<p>@param attribute [Symbol] the name of the attribute\n<p>@since 0.1.0 …\n"],["for","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-c-for","(base)","<p>Return the original configuration of the framework instance associated with\nthe given class.\n<p>When multiple …\n"],["for_code","Hanami::Http::Status","classes/Hanami/Http/Status.html#method-c-for_code","(code)","<p>Return a status for the given code\n<p>@param code [Fixnum] a valid HTTP code\n<p>@return [Array] a pair of code …\n"],["force?","Hanami::Routing::ForceSsl","classes/Hanami/Routing/ForceSsl.html#method-i-force-3F","(env)","<p>Check if router has to force the response with ssl\n<p>@return [Boolean]\n<p>@since 0.4.1 @api private\n"],["force_ssl","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-force_ssl","(value = nil)","<p>Force ssl redirection if http scheme is set\n<p>@return [Boolean]\n<p>@since 0.4.0\n"],["format","Hanami::Action::Mime","classes/Hanami/Action/Mime.html#method-i-format","()","<p>Returns a symbol representation of the content type.\n<p>The framework automatically detects the request mime …\n"],["format","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-format","(hash)","<p>Register a format\n<p>@param hash [Hash] the symbol format must be the key and the mime type\n\n<pre><code>string must be ...</code></pre>\n"],["format","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-format","()","<p>@api private @since 0.1.0\n"],["format","Hanami::View::Dsl","classes/Hanami/View/Dsl.html#method-i-format","(value = nil)","<p>When a value is given, specify the handled format. Otherwise, it returns\nthe previously specified format. …\n"],["format","Hanami::View::Rendering::LayoutRegistry","classes/Hanami/View/Rendering/LayoutRegistry.html#method-i-format","(context)",""],["format","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-format","()","<p>Returns the requested format.\n<p>@return [Symbol] the requested format (eg. :html, :json, :xml, etc..)\n<p>@since …\n"],["format","Hanami::View::Rendering::Scope","classes/Hanami/View/Rendering/Scope.html#method-i-format","()","<p>Returns the requested format.\n<p>@return [Symbol] the requested format (eg. :html, :json, :xml, etc..)\n<p>@since …\n"],["format","Hanami::View::Rendering::TemplateFinder","classes/Hanami/View/Rendering/TemplateFinder.html#method-i-format","()",""],["format","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-format","()","<p>@api private @since 0.1.0\n"],["format","Hanami::View::Template","classes/Hanami/View/Template.html#method-i-format","()","<p>Returns the format that the template handles.\n<p>@return [Symbol] the format name\n<p>@since 0.1.0\n"],["format_for","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-format_for","(mime_type)","<p>Returns a format for the given mime type\n<p>@param mime_type [#to_s,#to_str] A mime type\n<p>@return [Symbol,nil] …\n"],["format_to_mime_type","Hanami::Action::Mime::ClassMethods","classes/Hanami/Action/Mime/ClassMethods.html#method-i-format_to_mime_type","(format)","<p>@since 0.2.0 @api private\n"],["freeze","Hanami::Utils::Callbacks::Chain","classes/Hanami/Utils/Callbacks/Chain.html#method-i-freeze","()","<p>It freezes the object by preventing further modifications.\n<p>@since 0.2.0\n<p>@see ruby-doc.org/core/Object.html#method-i-freeze …\n"],["freeze","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-freeze","()","<p>It freezes the object by preventing further modifications.\n<p>@since 0.2.0\n<p>@see ruby-doc.org/core/Object.html#method-i-freeze …\n"],["fresh","Hanami::Action::Cache","classes/Hanami/Action/Cache.html#method-i-fresh","(options)","<p>Set the etag, last_modified, or both headers on the response and halts a\n304 Not Modified if the request …\n"],["fresh?","Hanami::Action::Cache::ConditionalGet","classes/Hanami/Action/Cache/ConditionalGet.html#method-i-fresh-3F","()",""],["fresh?","Hanami::Action::Cache::ETag","classes/Hanami/Action/Cache/ETag.html#method-i-fresh-3F","()",""],["fresh?","Hanami::Action::Cache::LastModified","classes/Hanami/Action/Cache/LastModified.html#method-i-fresh-3F","()",""],["fresh?","Hanami::Assets::Cache","classes/Hanami/Assets/Cache.html#method-i-fresh-3F","(file)","<p>Check if the given file is fresh or changed from last check.\n<p>@param file [String,Pathname] the file path …\n"],["from","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-from","(value = nil)","<p>Sets the sender for mail messages\n<p>It accepts a hardcoded value as a string, or a symbol that represents …\n"],["from_record","Hanami::Model::Mapping::CollectionCoercer","classes/Hanami/Model/Mapping/CollectionCoercer.html#method-i-from_record","(record)","<p>Translates the given record into a Ruby object.\n<p>@param record [Hash]\n<p>@return [Object]\n"],["generate","Hanami::Routing::Resource::Action","classes/Hanami/Routing/Resource/Action.html#method-c-generate","(router, action, options = {}, resource = nil)","<p>Generate an action for the given router\n<p>@param router [Hanami::Router] @param action\n[Hanami::Routing::Resource::Action] …\n"],["generate","Hanami::Routing::Resource::Action","classes/Hanami/Routing/Resource/Action.html#method-i-generate","(&blk)","<p>Generate an action for the given router\n<p>@param blk [Proc]\n<p>@api private\n"],["generate","Hanami::Routing::Resource::CollectionAction","classes/Hanami/Routing/Resource/CollectionAction.html#method-i-generate","(&blk)",""],["generate","Hanami::Routing::Route","classes/Hanami/Routing/Route.html#method-i-generate","(resolver, options = {}, &endpoint)","<p>Asks the given resolver to return an endpoint that will be associated\n\n<pre><code>with the other options.</code></pre>\n<p>@param resolver …\n"],["get","Hanami::Action::BaseParams","classes/Hanami/Action/BaseParams.html#method-i-get","(key)","<p>Get an attribute value associated with the given key. Nested attributes are\nreached with a dot notation. …\n"],["get","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-get","(path, options = {}, &blk)","<p>Defines a route that accepts a GET request for the given path.\n<p>@param path [String] the relative URL to …\n"],["get","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-get","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["get","Hanami::Utils::Attributes","classes/Hanami/Utils/Attributes.html#method-i-get","(attribute)","<p>Get the value associated with the given attribute\n<p>@param attribute [#to_s] a String or any object that …\n"],["global_uri","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-global_uri","()","<p>Returns DB connection wihout specifying database name\n<p>@since 0.5.0 @api private\n"],["group","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-group","()","<p>This method is defined in order to make the interface of `Memory::Query`\nidentical to `Sql::Query`, but …\n"],["group","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-group","(*args)","<p>Filters the current scope with a `group` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#group …\n"],["group","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-group","(*columns)","<p>Group by the specified columns.\n<p>@param columns [Array&lt;Symbol&gt;]\n<p>@return self\n"],["gsub","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-gsub","(pattern, replacement = nil, &blk)","<p>Replace the given pattern with the given replacement\n<p>@return [String,nil]\n<p>@see www.ruby-doc.org/core/String.html#method-i-gsub …\n"],["halt","Hanami::Action::Throwable","classes/Hanami/Action/Throwable.html#method-i-halt","(code, message = nil)","<p>Halt the action execution with the given HTTP status code and message.\n<p>When used, the execution of a callback …\n"],["hanami_entity?","Hanami::Validations::AttributeDefiner","classes/Hanami/Validations/AttributeDefiner.html#method-c-hanami_entity-3F","(base)","<p>Decide if enable the support for `Hanami::Entity`.\n<p>@param base [Class]\n<p>@since 0.2.3 @api private\n"],["hanami_nested_attributes?","Hanami::Validations::NestedAttributes","classes/Hanami/Validations/NestedAttributes.html#method-i-hanami_nested_attributes-3F","()","<p>@since 0.3.1 @api private\n"],["handle_exception","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-handle_exception","(exception)","<p>Specify how to handle an exception with an HTTP status\n<p>Raised exceptions will return the configured HTTP …\n"],["handle_exceptions","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-handle_exceptions","(value = nil)","<p>Decide if handle exceptions with an HTTP status or let them uncaught\n<p>If this value is set to `true`, the …\n"],["handle_exceptions","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-handle_exceptions","(value = nil)","<p>Handle exceptions with an HTTP status or let them uncaught\n<p>If this value is set to `true`, the configured …\n"],["handled_exception?","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-handled_exception-3F","(exception)","<p>Check if the given exception is handled.\n<p>@param exception [Exception] an exception\n<p>@since 0.3.2 @api private …\n"],["hash","Hanami::Utils::Callbacks::MethodCallback","classes/Hanami/Utils/Callbacks/MethodCallback.html#method-i-hash","()",""],["hash","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-hash","()","<p>Returns the hash of the internal @hash\n<p>@return [Fixnum]\n<p>@since 0.3.0\n"],["hash","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-hash","()","<p>Returns the hash of the internal string\n<p>@return [Fixnum]\n<p>@since 0.3.0\n"],["header","Hanami::Action::Cache::ETag","classes/Hanami/Action/Cache/ETag.html#method-i-header","()",""],["header","Hanami::Action::Cache::LastModified","classes/Hanami/Action/Cache/LastModified.html#method-i-header","()",""],["headers","Hanami::Action::Cache::CacheControl::Directives","classes/Hanami/Action/Cache/CacheControl/Directives.html#method-i-headers","()",""],["headers","Hanami::Action::Cache::ConditionalGet","classes/Hanami/Action/Cache/ConditionalGet.html#method-i-headers","()",""],["headers","Hanami::Action::Cache::Expires::Directives","classes/Hanami/Action/Cache/Expires/Directives.html#method-i-headers","()",""],["headers","Hanami::Action::Rack","classes/Hanami/Action/Rack.html#method-i-headers","()","<p>Gets the headers from the response\n<p>@return [Hash] the HTTP headers from the response\n<p>@since 0.1.0\n"],["host","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-host","(value = nil)","<p>URL host for the application\n<p>This is used to generate absolute URL from helpers.\n<p>@since 0.1.0\n"],["host","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-host","(value = nil)","<p>The URI host for this application. This is used by the router helpers to\ngenerate absolute URLs.\n<p>By default …\n"],["host","Hanami::Environment","classes/Hanami/Environment.html#method-i-host","()","<p>The HTTP host name\n<p>In order to decide the value, it looks up the following sources:\n\n<pre><code>* CLI option `host` ...</code></pre>\n"],["host","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-host","()","<p>Returns DB connection host\n<p>Even when adapter doesn&#39;t provide it explicitly it tries to parse\n<p>@since …\n"],["html","Hanami::Utils::Escape","classes/Hanami/Utils/Escape.html#method-c-html","(input)","<p>Escape HTML contents\n<p>This MUST be used only for tag contents. Please use `html_attribute` for\nescaping …\n"],["html","Hanami::View::Escape","classes/Hanami/View/Escape.html#method-c-html","(input)","<p>Escape the given input if it&#39;s a string, otherwise return the oject as\nit is.\n<p>@param input [Object] …\n"],["html_attribute","Hanami::Utils::Escape","classes/Hanami/Utils/Escape.html#method-c-html_attribute","(input)","<p>Escape HTML attributes\n<p>This can be used both for HTML attributes and contents. Please note that\nthis is …\n"],["identity","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-identity","()","<p>Name of the identity column in database\n<p>@return [Symbol] the identity name\n<p>@api private @since 0.5.0\n"],["identity","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-identity","(name = nil)","<p>Defines the identity for a collection.\n<p>An identity is a unique value that identifies a record. If used …\n"],["image","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-image","(source, options = {})","<p>Generate <code>img</code> tag for given source\n<p>It accepts one string representing the name of the asset, if it comes …\n"],["included","Hanami::Action","classes/Hanami/Action.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes basic Hanami::Action\nmodules to the given class.\n<p>@param …\n"],["included","Hanami::Action::CSRFProtection","classes/Hanami/Action/CSRFProtection.html#method-c-included","(action)","<p>@since 0.4.0 @api private\n"],["included","Hanami::Action::Cache","classes/Hanami/Action/Cache.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes exposures logic\n<p>@param base [Class] the target action …\n"],["included","Hanami::Action::Cache::CacheControl","classes/Hanami/Action/Cache/CacheControl.html#method-c-included","(base)",""],["included","Hanami::Action::Cache::Expires","classes/Hanami/Action/Cache/Expires.html#method-c-included","(base)",""],["included","Hanami::Action::Callbacks","classes/Hanami/Action/Callbacks.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes callbacks logic\n<p>@param base [Class] the target action …\n"],["included","Hanami::Action::Configurable","classes/Hanami/Action/Configurable.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes configuration logic\n<p>@param base [Class] the target action …\n"],["included","Hanami::Action::Exposable","classes/Hanami/Action/Exposable.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes exposures logic\n<p>@param base [Class] the target action …\n"],["included","Hanami::Action::Glue","classes/Hanami/Action/Glue.html#method-c-included","(base)","<p>Override Ruby&#39;s Module#included\n<p>@api private @since 0.3.0\n"],["included","Hanami::Action::Mime","classes/Hanami/Action/Mime.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes Mime types logic\n<p>@param base [Class] the target action …\n"],["included","Hanami::Action::Rack","classes/Hanami/Action/Rack.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes basic Hanami::Action\nmodules to the given class.\n<p>@param …\n"],["included","Hanami::Action::RoutingHelpers","classes/Hanami/Action/RoutingHelpers.html#method-c-included","(base)",""],["included","Hanami::Action::Session","classes/Hanami/Action/Session.html#method-c-included","(action)","<p>Add session to default exposures\n<p>@since 0.4.4 @api private\n"],["included","Hanami::Action::Throwable","classes/Hanami/Action/Throwable.html#method-c-included","(base)",""],["included","Hanami::Action::Validatable","classes/Hanami/Action/Validatable.html#method-c-included","(base)",""],["included","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-c-included","(base)","<p>Inject helpers into the given class\n<p>@since 0.1.0 @api private\n"],["included","Hanami::Entity","classes/Hanami/Entity.html#method-c-included","(base)","<p>Inject the public API into the hosting class.\n<p>@since 0.1.0\n<p>@example With Object\n"],["included","Hanami::Interactor","classes/Hanami/Interactor.html#method-c-included","(base)","<p>Override for <code>Module#included</code>.\n<p>@since 0.3.5 @api private\n"],["included","Hanami::Layout","classes/Hanami/Layout.html#method-c-included","(base)","<p>Register a layout\n<p>@api private @since 0.1.0\n<p>@example\n"],["included","Hanami::Mailer","classes/Hanami/Mailer.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes basic Hanami::Mailer\nmodules to the given Class. It …\n"],["included","Hanami::Presenter","classes/Hanami/Presenter.html#method-c-included","(base)","<p>Inject escape logic into the given class.\n<p>@since 0.4.0 @api private\n<p>@see Hanami::View::Escape\n"],["included","Hanami::Repository","classes/Hanami/Repository.html#method-c-included","(base)","<p>Inject the public API into the hosting class.\n<p>@since 0.1.0\n<p>@example\n"],["included","Hanami::Utils::ClassAttribute","classes/Hanami/Utils/ClassAttribute.html#method-c-included","(base)",""],["included","Hanami::Validations","classes/Hanami/Validations.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules.\n<p>@param base [Class] the target action\n<p>@since 0.1.0 @api private\n"],["included","Hanami::Validations::AttributeDefiner","classes/Hanami/Validations/AttributeDefiner.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules.\n<p>@param base [Class] the target class\n<p>@since 0.2.2 @api private\n"],["included","Hanami::Validations::AttributeDefiner::ClassMethods","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html#method-i-included","(base)","<p>Override Ruby&#39;s hook for modules.\n<p>@param base [Class] the target class\n<p>@since 0.2.2 @api private\n"],["included","Hanami::Validations::Form","classes/Hanami/Validations/Form.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules.\n<p>@param base [Class] the target action\n<p>@since 0.1.0 @api private\n"],["included","Hanami::Validations::Predicates","classes/Hanami/Validations/Predicates.html#method-c-included","(base)",""],["included","Hanami::View","classes/Hanami/View.html#method-c-included","(base)","<p>Override Ruby&#39;s hook for modules. It includes basic Hanami::View\nmodules to the given Class. It sets …\n"],["increment!","Hanami::Model::Adapters::Memory::Collection::PrimaryKey","classes/Hanami/Model/Adapters/Memory/Collection/PrimaryKey.html#method-i-increment-21","()","<p>Increment the current count by 1 and yields the given block\n<p>@return [Fixnum] the incremented counter\n<p>@api …\n"],["inflections","Hanami::Utils::Inflector","classes/Hanami/Utils/Inflector.html#method-c-inflections","(&blk)","<p>Block for custom inflection rules.\n<p>@param [Proc] blk custom inflections\n<p>@since 0.6.0\n"],["info","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-info","()","<p>Database informations\n<p>@return [Hash] per collection informations\n<p>@api private @since 0.2.0\n"],["inherited","Hanami::Application","classes/Hanami/Application.html#method-c-inherited","(base)","<p>Override Ruby&#39;s Class#inherited\n<p>@since 0.2.0 @api private\n<p>@see www.ruby-doc.org/core/Class.html#method-i-inherited …\n"],["inherited","Hanami::Entity::ClassMethods","classes/Hanami/Entity/ClassMethods.html#method-i-inherited","(subclass)","<p>@see Class#inherited\n"],["inherited","Hanami::Utils::ClassAttribute::ClassMethods","classes/Hanami/Utils/ClassAttribute/ClassMethods.html#method-i-inherited","(subclass)","<p>@see Class#inherited\n"],["inherited","Hanami::Validations::AttributeDefiner::ClassMethods","classes/Hanami/Validations/AttributeDefiner/ClassMethods.html#method-i-inherited","(base)","<p>Override Ruby&#39;s hook for modules.\n<p>@param base [Class] the target class\n<p>@since 0.2.2 @api private\n"],["inherited","Hanami::View::Inheritable","classes/Hanami/View/Inheritable.html#method-i-inherited","(base)","<p>Register a view subclass\n<p>@api private @since 0.1.0\n<p>@example\n"],["initialize_copy","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-initialize_copy","(original)","<p>It specifies the policy for initialize copies of the object, when #clone or\n#dup are invoked.\n<p>@api private …\n"],["inner_join","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-inner_join","(collection, options = {})",""],["insert","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-insert","(entity)","<p>Creates a record for the given entity and assigns an id.\n<p>@param entity [Object] the entity to persist …\n"],["inspect","Hanami::Entity","classes/Hanami/Entity.html#method-i-inspect","()","<p>Return the contents of the entity as a nicely formatted string.\n<p>Display all attributes of the entity for …\n"],["inspect","Hanami::Routing::Endpoint","classes/Hanami/Routing/Endpoint.html#method-i-inspect","()","<p>@since 0.2.0\n"],["inspect","Hanami::Routing::LazyEndpoint","classes/Hanami/Routing/LazyEndpoint.html#method-i-inspect","()","<p>@since 0.2.0\n"],["inspect","Hanami::Utils::BasicObject","classes/Hanami/Utils/BasicObject.html#method-i-inspect","()","<p>Bare minimum inspect for debugging purposes.\n<p>@return [String] the inspect string\n<p>@since 0.3.5\n"],["inspect","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-inspect","()","<p>Returns a string describing the internal @hash\n<p>@return [String]\n<p>@since 0.3.0\n"],["inspect","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-inspect","()","<p>Returns an inspect String\n<p>@return [String] inspect String (contains classname, objectid in hex,\navailable …\n"],["inspect","Hanami::View::Rendering::Scope","classes/Hanami/View/Rendering/Scope.html#method-i-inspect","()","<p>Returns an inspect String\n<p>@return [String] inspect String (contains classname, objectid in hex,\navailable …\n"],["inspect_routes","Hanami::Routing::RoutesInspector","classes/Hanami/Routing/RoutesInspector.html#method-i-inspect_routes","(formatter, base_path)","<p>Returns a string representation of routes\n<p>@param formatter [String] the template for the output @param …\n"],["inspector","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-inspector","()","<p>Returns an routes inspector\n<p>@since 0.2.0\n<p>@see Hanami::Routing::RoutesInspector\n"],["install","Hanami::RakeHelper","classes/Hanami/RakeHelper.html#method-i-install","()","<p>@since 0.6.0 @api private\n"],["install_tasks","Hanami::RakeHelper","classes/Hanami/RakeHelper.html#method-c-install_tasks","()","<p>@since 0.6.0 @api private\n"],["interval","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-interval","(column)","<p>Returns the difference between the MAX and MIN for the given column.\n<p>@param column [Symbol] the column …\n"],["interval","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-interval","(column)","<p>Returns the difference between the MAX and MIN for the given column.\n<p>@param column [Symbol] the column …\n"],["invalid?","Hanami::ApplicationName","classes/Hanami/ApplicationName.html#method-c-invalid-3F","(name)","<p>Returns true if a potential application name matches one of the reserved\nwords.\n<p>@param name [String] the …\n"],["javascript","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-javascript","(*sources)","<p>Generate <code>script</code> tag for given source(s)\n<p>It accepts one or more strings representing the name of the asset, …\n"],["javascript_compressor","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-javascript_compressor","(value = nil)","<p>JavaScript compressor\n<p>Determine which compressor to use for JavaScript files during deploy.\n<p>By default …\n"],["jdbc?","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-jdbc-3F","()","<p>Returns a boolean telling if a DB connection is from JDBC or not\n<p>@since 0.5.0 @api private\n"],["join","Hanami::Action::Cache::Directives","classes/Hanami/Action/Cache/Directives.html#method-i-join","(separator)",""],["join","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-join","(collection, options = {})","<p>Specify an `INNER JOIN` clause.\n<p>@param collection [String] @param options [Hash] @option key [Symbol] …\n"],["join","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-i-join","(*strings)","<p>Joins self with the given token. It cleans up all the `separator`\nrepetitions.\n<p>@param strings [::String] …\n"],["join_table","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-join_table","(*args)","<p>Use join table for current scope\n<p>@return [Hanami::Model::Adapters::Sql::Collection] the filtered\n\n<pre><code>collection\n</code></pre>\n"],["jruby?","Hanami::Utils","classes/Hanami/Utils.html#method-c-jruby-3F","()","<p>Checks if the current VM is JRuby\n<p>@return [TrueClass,FalseClass] return if the VM is JRuby or not\n<p>@since …\n"],["js_compressor","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-js_compressor","()","<p>Load Javascript compressor\n<p>@return [Hanami::Assets::Compressors::Javascript] a compressor\n<p>@raise [Hanami::Assets::Compressors::UnknownCompressorError] …\n"],["keys","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-keys","()","<p>Returns a new array populated with the keys from this hash\n<p>@return [Array] the keys\n<p>@since 0.3.0\n"],["last","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-last","(collection)","<p>Returns the last record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["last","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-last","(collection)","<p>Returns the last record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["last","Hanami::Model::Adapters::Implementation","classes/Hanami/Model/Adapters/Implementation.html#method-i-last","(collection)","<p>Returns the last record in the given collection.\n<p>@param collection [Symbol] the target collection (it …\n"],["last","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-last","()","<p>Returns the last entity in the database.\n<p>@return [Object,nil] the result of the query\n<p>@since 0.1.0\n"],["layout","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-layout","(value = nil)","<p>A Hanami::Layout for this application\n<p>By default it&#39;s `nil`.\n<p>It accepts a Symbol as layout name. When …\n"],["layout","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-layout","(value = nil)","<p>Set the global layout\n<p>If not set, this value defaults to `nil`, while at the rendering time it\nwill use …\n"],["layout","Hanami::View::Dsl","classes/Hanami/View/Dsl.html#method-i-layout","(value = nil)","<p>When a value is given, it specifies the layout. When false is given,\nHanami::View::Rendering::NullLayout …\n"],["layout","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-layout","()","<p>The layout.\n<p>@return [Class, Hanami::View::Rendering::NullLayout]\n<p>@see Hanami::View::Layout @see Hanami::View.layout …\n"],["left_join","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-left_join","(collection, options = {})","<p>Specify a `LEFT JOIN` clause.\n<p>@param collection [String] @param options [Hash] @option key [Symbol] the …\n"],["left_outer_join","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-left_outer_join","(collection, options = {})",""],["level","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-i-level","(value = nil)","<p>Logger level\n<p>Available values are:\n\n<pre><code>* DEBUG\n* INFO\n* WARN\n* ERROR\n* FATAL\n* UNKNOWN</code></pre>\n"],["level=","Hanami::Logger","classes/Hanami/Logger.html#method-i-level-3D","(value)","<p>@since x.x.x @api private\n"],["limit","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-limit","(number)","<p>Limit the number of records to return.\n<p>@param number [Fixnum]\n<p>@return self\n"],["limit","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-limit","(*args)","<p>Filters the current scope with a `limit` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#limit …\n"],["limit","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-limit","(number)","<p>Limit the number of records to return.\n<p>This operation is performed at the database level with `LIMIT`. …\n"],["load","Hanami::Model::Coercer","classes/Hanami/Model/Coercer.html#method-c-load","(value)","<p>Deserialize (load) a value coming from the database into a Ruby object.\n<p>When inheriting from this class, …\n"],["load","Hanami::Model::Mapping::Coercers::Array","classes/Hanami/Model/Mapping/Coercers/Array.html#method-c-load","(value)","<p>Transform a value from the database into a Ruby Array, unless nil\n<p>@param value [Object] the object to …\n"],["load","Hanami::Model::Mapping::Coercers::BigDecimal","classes/Hanami/Model/Mapping/Coercers/BigDecimal.html#method-c-load","(value)","<p>Transform a value from the database into a BigDecimal, unless nil\n<p>@param value [Object] the object to …\n"],["load","Hanami::Model::Mapping::Coercers::Boolean","classes/Hanami/Model/Mapping/Coercers/Boolean.html#method-c-load","(value)","<p>Transform a value from the database into a Boolean, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Date","classes/Hanami/Model/Mapping/Coercers/Date.html#method-c-load","(value)","<p>Transform a value from the database into a Date, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::DateTime","classes/Hanami/Model/Mapping/Coercers/DateTime.html#method-c-load","(value)","<p>Transform a value from the database into a DateTime, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Float","classes/Hanami/Model/Mapping/Coercers/Float.html#method-c-load","(value)","<p>Transform a value from the database into a Float, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Hash","classes/Hanami/Model/Mapping/Coercers/Hash.html#method-c-load","(value)","<p>Transform a value from the database into a Hash, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Integer","classes/Hanami/Model/Mapping/Coercers/Integer.html#method-c-load","(value)","<p>Transform a value from the database into a Integer, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Set","classes/Hanami/Model/Mapping/Coercers/Set.html#method-c-load","(value)","<p>Transform a value from the database into a Set, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::String","classes/Hanami/Model/Mapping/Coercers/String.html#method-c-load","(value)","<p>Transform a value from the database into a String, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Symbol","classes/Hanami/Model/Mapping/Coercers/Symbol.html#method-c-load","(value)","<p>Transform a value from the database into a Symbol, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Mapping::Coercers::Time","classes/Hanami/Model/Mapping/Coercers/Time.html#method-c-load","(value)","<p>Transform a value from the database into a Time, unless nil\n<p>@param value [Object] the object to coerce …\n"],["load","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-i-load","()","<p>Load database schema. It must be implemented by subclasses.\n<p>@since 0.4.0 @api private\n<p>@see Hanami::Model::Migrator.prepare …\n"],["load","Hanami::Model::Migrator::MySQLAdapter","classes/Hanami/Model/Migrator/MySQLAdapter.html#method-i-load","()","<p>@since 0.4.0 @api private\n"],["load","Hanami::Model::Migrator::PostgresAdapter","classes/Hanami/Model/Migrator/PostgresAdapter.html#method-i-load","()","<p>@since 0.4.0 @api private\n"],["load","Hanami::Model::Migrator::SQLiteAdapter","classes/Hanami/Model/Migrator/SQLiteAdapter.html#method-i-load","()","<p>@since 0.4.0 @api private\n"],["load","Hanami::Utils::Json","classes/Hanami/Utils/Json.html#method-c-load","(payload)","<p>Load the given JSON payload into Ruby objects.\n<p>@param payload [String] a JSON payload\n<p>@return [Object] …\n"],["load!","Hanami::Application","classes/Hanami/Application.html#method-c-load-21","(application = self)","<p>Eager load the application configuration, by activating the framework\nduplication mechanisms.\n<p>@param application …\n"],["load!","Hanami::Assets","classes/Hanami/Assets.html#method-c-load-21","()","<p>Preload the framework\n<p>This MUST be used in production mode\n<p>@since 0.1.0\n"],["load!","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-load-21","()","<p>Load the configuration\n<p>This MUST be executed before to accept the first HTTP request\n<p>@since 0.1.0\n"],["load!","Hanami::Config::LoadPaths","classes/Hanami/Config/LoadPaths.html#method-i-load-21","(root)",""],["load!","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-load-21","(namespace = nil)","<p>Load the configuration\n<p>@param namespace [String,nil] the application namespace\n<p>@return [self]\n"],["load!","Hanami::Controller","classes/Hanami/Controller.html#method-c-load-21","()","<p>Framework loading entry point\n<p>@return [void]\n<p>@since 0.3.0\n"],["load!","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-load-21","()","<p>Load the framework\n<p>@since 0.3.0 @api private\n"],["load!","Hanami::Layout::ClassMethods","classes/Hanami/Layout/ClassMethods.html#method-i-load-21","()","<p>Loading mechanism hook.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View.load!\n"],["load!","Hanami::Loader","classes/Hanami/Loader.html#method-i-load-21","()",""],["load!","Hanami::Mailer","classes/Hanami/Mailer.html#method-c-load-21","()","<p>Load the framework\n<p>@since 0.1.0 @api private\n"],["load!","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-load-21","()","<p>Load the configuration\n"],["load!","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-load-21","()","<p>Loading mechanism hook.\n<p>@api private @since 0.1.0\n<p>@see Hanami::Mailer.load!\n"],["load!","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-load-21","(application, namespace)","<p>Load the middleware stack\n<p>@param application [Hanami::Application] the application loading the\nmiddleware …\n"],["load!","Hanami::Model","classes/Hanami/Model.html#method-c-load-21","()","<p>Load the framework\n<p>@since 0.2.0 @api private\n"],["load!","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-load-21","()","<p>Load the configuration for the current framework\n<p>@return void\n<p>@since 0.2.0\n"],["load!","Hanami::Model::Mapper","classes/Hanami/Model/Mapper.html#method-i-load-21","(adapter = nil)","<p>Loads the internals of the mapper, in order to guarantee thread safety.\n<p>This method MUST be invoked as …\n"],["load!","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-load-21","()","<p>Loads the internals of the mapper, in order to guarantee thread safety.\n<p>@api private @since 0.1.0\n"],["load!","Hanami::Utils::Class","classes/Hanami/Utils/Class.html#method-c-load-21","(name, namespace = Object)","<p>Loads a class for the given name.\n<p>@param name [String, Class] the specific class name @param namespace …\n"],["load!","Hanami::View","classes/Hanami/View.html#method-c-load-21","()","<p>Load the framework\n<p>@since 0.1.0 @api private\n"],["load!","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-load-21","()","<p>Load the configuration for the current framework\n<p>@since 0.2.0 @api private\n"],["load!","Hanami::View::Dsl","classes/Hanami/View/Dsl.html#method-i-load-21","()","<p>Loading mechanism hook.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View.load!\n"],["load!","Hanami::View::Inheritable","classes/Hanami/View/Inheritable.html#method-i-load-21","()","<p>Loading mechanism hook.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View.load!\n"],["load!","Hanami::View::Rendering","classes/Hanami/View/Rendering.html#method-i-load-21","()","<p>Loading mechanism hook.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View.load!\n"],["load_coercer","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-i-load_coercer","()","<p>@api private @since 0.5.0\n"],["load_default_stack","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-load_default_stack","(application)","<p>@api private @since 0.2.0\n"],["load_from_pattern!","Hanami::Utils::Class","classes/Hanami/Utils/Class.html#method-c-load_from_pattern-21","(pattern, namespace = Object)","<p>Loads a class from the given pattern name and namespace\n<p>@param pattern [String] the class name pattern …\n"],["load_middleware","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-load_middleware","(middleware)","<p>@api private @since 0.2.0\n"],["load_partials!","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-load_partials-21","()","<p>Load partials for each partial template file found under the given load\npaths\n<p>@since x.x.x @api private …\n"],["load_paths","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-load_paths","()","<p>Application load paths The application will recursively load all the Ruby\nfiles under these paths.\n<p>By …\n"],["local","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-local","(key)","<p>It tries to invoke a method for the view or a local for the given key. If\nthe lookup fails, it returns …\n"],["local","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-local","(key)","<p>It tries to invoke a method for the view or a local for the given key. If\nthe lookup fails, it returns …\n"],["locals","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-locals","()","<p>A set of objects available during the rendering process.\n<p>@return [Hash]\n<p>@see Hanami::View#initialize\n"],["locals","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-locals","()","<p>The current locals.\n<p>@return [Hash] the current locals\n<p>@since 0.1.0\n"],["logger","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-logger","()","<p>Defines a Config::Logger instance to the logger configuration.\n<p>This instance will be used to generate …\n"],["mailer","Hanami::CliSubCommands::Destroy","classes/Hanami/CliSubCommands/Destroy.html#method-i-mailer","(name)",""],["mailer","Hanami::CliSubCommands::Generate","classes/Hanami/CliSubCommands/Generate.html#method-i-mailer","(name)",""],["manifest","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-manifest","(value = nil)","<p>Manifest path from public directory\n<p>@since 0.1.0\n"],["manifest_path","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-manifest_path","()","<p>Absolute manifest path\n<p>@since 0.1.0 @api private\n"],["map","Hanami::Assets::Config::Sources","classes/Hanami/Assets/Config/Sources.html#method-i-map","()","<p>@since 0.1.0 @api private\n"],["map","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-map","(&blk)","<p>Iterate thru the errors, yields the given block and collect the returning\nvalue.\n<p>@param blk [Proc] the …\n"],["map_templates","Hanami::Commands::Generate::Action","classes/Hanami/Commands/Generate/Action.html#method-i-map_templates","()",""],["map_templates","Hanami::Commands::Generate::App","classes/Hanami/Commands/Generate/App.html#method-i-map_templates","()",""],["map_templates","Hanami::Commands::Generate::Mailer","classes/Hanami/Commands/Generate/Mailer.html#method-i-map_templates","()","<p>@since 0.x.x @api private\n"],["map_templates","Hanami::Commands::Generate::Migration","classes/Hanami/Commands/Generate/Migration.html#method-i-map_templates","()",""],["map_templates","Hanami::Commands::Generate::Model","classes/Hanami/Commands/Generate/Model.html#method-i-map_templates","()",""],["map_templates","Hanami::Commands::New::App","classes/Hanami/Commands/New/App.html#method-i-map_templates","()",""],["map_templates","Hanami::Commands::New::Container","classes/Hanami/Commands/New/Container.html#method-i-map_templates","()",""],["mapped","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-i-mapped","()","<p>Returns the mapped name\n<p>@return [Symbol] the mapped name\n<p>@api private @since 0.5.0\n"],["mapping","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-mapping","(path = nil, &blk)","<p>Application collection mapping.\n<p>Specify a set of collections for the application, by passing a block, …\n"],["mapping","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-mapping","(path=nil, &blk)","<p>Set global persistence mapping\n<p>@overload mapping(blk)\n\n<pre><code>Specify a set of mapping in the given block\n@param ...</code></pre>\n"],["max","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-max","(column)","<p>Returns the maximum value for the given column.\n<p>@param column [Symbol] the column name\n<p>@return result\n"],["max","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-max","(column)","<p>Returns the maximum value for the given column.\n<p>@param column [Symbol] the column name\n<p>@return result\n"],["merge","Hanami::Routing::Resource::Options","classes/Hanami/Routing/Resource/Options.html#method-i-merge","(hash)","<p>Merge the current options with the given hash, without mutating self.\n<p>@param hash [Hash] the hash to be …\n"],["message_for","Hanami::Http::Status","classes/Hanami/Http/Status.html#method-c-message_for","(code)","<p>Return a message for the given status code\n<p>@param code [Fixnum] a valid HTTP code\n<p>@return [String] a message …\n"],["messages","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-messages","(type)",""],["messages_path","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-messages_path","(path)",""],["method_added","Hanami::View::Escape","classes/Hanami/View/Escape.html#method-i-method_added","(method_name)","<p>Wraps concrete view methods with escape logic.\n<p>@since 0.4.0 @api private\n"],["method_missing","Hanami::Assets::Config::NullDigestManifest","classes/Hanami/Assets/Config/NullDigestManifest.html#method-i-method_missing","(*)","<p>@raise [Hanami::Assets::MissingDigestManifestError]\n<p>@since 0.1.0 @api private\n"],["method_missing","Hanami::Config::FrameworkConfiguration","classes/Hanami/Config/FrameworkConfiguration.html#method-i-method_missing","(m, *args, &blk)","<p>@since 0.2.0 @api private\n"],["method_missing","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-method_missing","(m, *)","<p>@since 0.3.5 @api private\n"],["method_missing","Hanami::Mailer","classes/Hanami/Mailer.html#method-i-method_missing","(m)","<p>@private @since 0.1.0\n"],["method_missing","Hanami::Model::Adapters::DisconnectedResource","classes/Hanami/Model/Adapters/DisconnectedResource.html#method-i-method_missing","(method_name, *)",""],["method_missing","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-method_missing","(m, *args, &blk)",""],["method_missing","Hanami::Model::Adapters::NullAdapter","classes/Hanami/Model/Adapters/NullAdapter.html#method-i-method_missing","(m, *args)",""],["method_missing","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-method_missing","(m, *args, &blk)","<p>Handles missing methods for query combinations\n<p>@api private @since 0.1.0\n<p>@see Hanami::Model::Adapters:Sql::Query#apply …\n"],["method_missing","Hanami::Model::NullMapper","classes/Hanami/Model/NullMapper.html#method-i-method_missing","(m, *args)",""],["method_missing","Hanami::Presenter","classes/Hanami/Presenter.html#method-i-method_missing","(m, *args, &blk)","<p>Override Ruby&#39;s method_missing\n<p>@api private @since 0.1.0\n"],["method_missing","Hanami::Routes","classes/Hanami/Routes.html#method-i-method_missing","(m, *args)","<p>@since 0.3.0 @api private\n"],["method_missing","Hanami::Routing::Resource::CollectionAction","classes/Hanami/Routing/Resource/CollectionAction.html#method-i-method_missing","(m, *args)",""],["method_missing","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-method_missing","(m, *args, &blk)","<p>Override Ruby&#39;s method_missing in order to provide ::Hash interface\n<p>@api private @since 0.3.0\n<p>@raise …\n"],["method_missing","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-method_missing","(m, *args, &blk)","<p>Override Ruby&#39;s method_missing in order to provide ::String interface\n<p>@api private @since 0.3.0\n<p>@raise …\n"],["method_missing","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-method_missing","(m)","<p>Delegates missing methods to the scope.\n<p>@see Hanami::View::Rendering::Scope\n<p>@api private @since 0.1.0\n"],["method_missing","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-method_missing","(m, *args, &blk)","<p>Forward all the missing methods to the view scope or to the layout.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View::Rendering::Scope …\n"],["method_missing","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-method_missing","(m, *)","<p>@since x.x.x @api private\n"],["method_missing","Hanami::View::Rendering::Scope","classes/Hanami/View/Rendering/Scope.html#method-i-method_missing","(m, *args, &block)",""],["middleware","Hanami::Application","classes/Hanami/Application.html#method-i-middleware","()","<p>Rack middleware stack\n<p>@return [Hanami::Middleware] the middleware stack\n<p>@since 0.1.0 @api private\n"],["middleware","Hanami::Config::Sessions","classes/Hanami/Config/Sessions.html#method-i-middleware","()","<p>Returns the Rack middleware and the options\n<p>@return [Array] Rack middleware and options\n<p>@since 0.2.0 @api …\n"],["middleware","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-middleware","()","<p>Application middleware.\n<p>Specify middleware that your application will use. This method will return\nthe …\n"],["middleware","Hanami::Server","classes/Hanami/Server.html#method-i-middleware","()","<p>Primarily this removes the ::Rack::Chunked middleware which is the cause of\nSafari content-length bugs. …\n"],["migrate","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-migrate","(version = nil)",""],["migrate","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-migrate","(version: nil)","<p>Migrate database schema\n<p>It&#39;s possible to migrate “down” by specifying a version (eg.\n<code>&quot;20150610133853&quot;</code> …\n"],["migration","Hanami::CliSubCommands::Destroy","classes/Hanami/CliSubCommands/Destroy.html#method-i-migration","(name)",""],["migration","Hanami::CliSubCommands::Generate","classes/Hanami/CliSubCommands/Generate.html#method-i-migration","(name)",""],["migration","Hanami::Model","classes/Hanami/Model.html#method-c-migration","(&blk)","<p>Define a migration\n<p>It must define an up/down strategy to write schema changes (up) and to\nrollback them …\n"],["migrations","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-migrations","(path = nil)","<p>Migrations directory\n<p>It defaults to <code>db/migrations</code>.\n<p>@overload migrations\n"],["mime_type_for","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-mime_type_for","(format)","<p>Returns a mime type for the given format\n<p>@param format [#to_sym] a format\n<p>@return [String,nil] the corresponding …\n"],["mime_types","Hanami::Routing::Parsing::JsonParser","classes/Hanami/Routing/Parsing/JsonParser.html#method-i-mime_types","()",""],["mime_types","Hanami::Routing::Parsing::Parser","classes/Hanami/Routing/Parsing/Parser.html#method-i-mime_types","()","<p>@since 0.2.0\n"],["min","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-min","(column)","<p>Returns the minimum value for the given column.\n<p>@param column [Symbol] the column name\n<p>@return result\n"],["min","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-min","(column)","<p>Returns the minimum value for the given column.\n<p>@param column [Symbol] the column name\n<p>@return result\n"],["minify","JSMin","classes/JSMin.html#method-c-minify","(input)","<p>Reads JavaScript from <em>input</em> (which can be a String or an IO\nobject) and returns a String containing minified …\n"],["model","Hanami::CliSubCommands::Destroy","classes/Hanami/CliSubCommands/Destroy.html#method-i-model","(name)",""],["model","Hanami::CliSubCommands::Generate","classes/Hanami/CliSubCommands/Generate.html#method-i-model","(name)",""],["model","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-model","()","<p>It lazily collects all the low level settings for Hanami::Model&#39;s\nconfiguration and applies them …\n"],["mount","Hanami::Container::Router","classes/Hanami/Container/Router.html#method-i-mount","(app, options)",""],["mount","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-mount","(app, options)","<p>Mount a Rack application at the specified path. All the requests starting\nwith the specified path, will …\n"],["mount","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-mount","(app, options)","<p>Allow to mount a Rack app\n<p>@see Hanami::Router#mount\n<p>@since 0.1.1 @api private\n"],["name","Hanami::Application","classes/Hanami/Application.html#method-i-name","()","<p>Return the application name\n<p>@since 0.2.0 @api private\n"],["names","Hanami::Validations::ValidationSet","classes/Hanami/Validations/ValidationSet.html#method-i-names","()","<p>@since 0.2.3 @api private\n"],["namespace","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-namespace","(value = nil)","<p>The application namespace\n<p>By default it returns the Ruby namespace of the application. For instance\nfor …\n"],["namespace","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-namespace","(value = nil)","<p>Set the Ruby namespace where to lookup for mailers.\n<p>When multiple instances of the framework are used, …\n"],["namespace","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-namespace","(namespace, &blk)","<p>Defines a Ruby block: all the routes defined within it will be namespaced\nwith the given relative path. …\n"],["namespace","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-namespace","(name, &blk)","<p>Supports nested namespaces @api private @since 0.1.0\n"],["namespace","Hanami::Routing::Resource::Action","classes/Hanami/Routing/Resource/Action.html#method-i-namespace","()","<p>Namespace\n<p>@api private @since 0.2.0\n"],["namespace","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-namespace","()","<p>Return the top level namespace name\n<p>@return [String] the transformed string\n<p>@since 0.1.2\n"],["namespace","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-namespace","(name = nil)",""],["namespace","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-namespace","(value = nil)","<p>Set the Ruby namespace where to lookup for views.\n<p>When multiple instances of the framework are used, we …\n"],["negate!","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-negate-21","()","<p>This method is defined in order to make the interface of `Memory::Query`\nidentical to `Sql::Query`, but …\n"],["negate!","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-negate-21","()","<p>Negates the current where/exclude conditions with the logical opposite\noperator.\n<p>All the other conditions …\n"],["nested_router","Hanami::Routing::Route","classes/Hanami/Routing/Route.html#method-i-nested_router","()","<p>Introspect the given route to understand if there is a wrapped router that\nhas an inspector\n<p>@since 0.2.0 …\n"],["new","Hanami::Action::BaseParams","classes/Hanami/Action/BaseParams.html#method-c-new","(env)","<p>Initialize the params and freeze them.\n<p>@param env [Hash] a Rack env or an hash of params.\n<p>@return [Params] …\n"],["new","Hanami::Action::Cache::CacheControl::Directives","classes/Hanami/Action/Cache/CacheControl/Directives.html#method-c-new","(*values)",""],["new","Hanami::Action::Cache::ConditionalGet","classes/Hanami/Action/Cache/ConditionalGet.html#method-c-new","(env, options)",""],["new","Hanami::Action::Cache::Directives","classes/Hanami/Action/Cache/Directives.html#method-c-new","(*values)",""],["new","Hanami::Action::Cache::ETag","classes/Hanami/Action/Cache/ETag.html#method-c-new","(env, value)",""],["new","Hanami::Action::Cache::Expires::Directives","classes/Hanami/Action/Cache/Expires/Directives.html#method-c-new","(amount, *values)",""],["new","Hanami::Action::Cache::LastModified","classes/Hanami/Action/Cache/LastModified.html#method-c-new","(env, value)",""],["new","Hanami::Action::Cache::NonValueDirective","classes/Hanami/Action/Cache/NonValueDirective.html#method-c-new","(name)",""],["new","Hanami::Action::Cache::ValueDirective","classes/Hanami/Action/Cache/ValueDirective.html#method-c-new","(name, value)",""],["new","Hanami::Action::CookieJar","classes/Hanami/Action/CookieJar.html#method-c-new","(env, headers, default_options)","<p>Initialize the CookieJar\n<p>@param env [Hash] a raw Rack env @param headers [Hash] the response headers\n<p>@return …\n"],["new","Hanami::Action::Flash","classes/Hanami/Action/Flash.html#method-c-new","(session, request_id)","<p>Initialize a new Flash instance\n<p>@param session [Rack::Session::Abstract::SessionHash] the session @param …\n"],["new","Hanami::Action::Mime::InstanceMethods","classes/Hanami/Action/Mime/InstanceMethods.html#method-c-new","(*)","<p>@since x.x.x @api private\n"],["new","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-c-new","(env)","<p>Initialize the params and freeze them.\n<p>@param env [Hash] a Rack env or an hash of params.\n<p>@return [Params] …\n"],["new","Hanami::Action::Rack::File","classes/Hanami/Action/Rack/File.html#method-c-new","(path)","<p>@param path [String,Pathname] file path\n<p>@since 0.4.3 @api private\n"],["new","Hanami::Action::Rack::InstanceMethods","classes/Hanami/Action/Rack/InstanceMethods.html#method-c-new","(*)","<p>@since x.x.x @api private\n"],["new","Hanami::Application","classes/Hanami/Application.html#method-c-new","(options = {})","<p>Initialize and load a new instance of the application\n<p>@return [Hanami::Application] a new instance of …\n"],["new","Hanami::ApplicationName","classes/Hanami/ApplicationName.html#method-c-new","(name)","<p>Initialize and check against reserved words\n<p>An application name needs to be translated in quite a few …\n"],["new","Hanami::Assets::Bundler","classes/Hanami/Assets/Bundler.html#method-c-new","(configuration, duplicates)","<p>Return a new instance\n<p>@param configuration [Hanami::Assets::Configuration] a single application\nconfiguration …\n"],["new","Hanami::Assets::Cache","classes/Hanami/Assets/Cache.html#method-c-new","()","<p>Return a new instance\n<p>@return [Hanami::Assets::Cache] a new instance\n"],["new","Hanami::Assets::Compiler","classes/Hanami/Assets/Compiler.html#method-c-new","(configuration, name)","<p>Return a new instance\n<p>@param configuration [Hanami::Assets::Configuration] the application\n\n<pre><code>configuration ...</code></pre>\n"],["new","Hanami::Assets::Compressors::BuiltinJavascript","classes/Hanami/Assets/Compressors/BuiltinJavascript.html#method-c-new","()",""],["new","Hanami::Assets::Compressors::ClosureJavascript","classes/Hanami/Assets/Compressors/ClosureJavascript.html#method-c-new","()","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Compressors::SassStylesheet","classes/Hanami/Assets/Compressors/SassStylesheet.html#method-c-new","()","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Compressors::UglifierJavascript","classes/Hanami/Assets/Compressors/UglifierJavascript.html#method-c-new","()","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Compressors::UnknownCompressorError","classes/Hanami/Assets/Compressors/UnknownCompressorError.html#method-c-new","(type, engine_name)","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Compressors::YuiJavascript","classes/Hanami/Assets/Compressors/YuiJavascript.html#method-c-new","()","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Compressors::YuiStylesheet","classes/Hanami/Assets/Compressors/YuiStylesheet.html#method-c-new","()","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Config::DigestManifest","classes/Hanami/Assets/Config/DigestManifest.html#method-c-new","(assets, manifest_path)","<p>Return a new instance\n<p>@param assets [Hash] the content of the digest manifest @param\nmanifest_path [Pathname] …\n"],["new","Hanami::Assets::Config::NullDigestManifest","classes/Hanami/Assets/Config/NullDigestManifest.html#method-c-new","(configuration)","<p>Return a new instance\n<p>@param configuration [Hanami::Assets::Configuration]\n<p>@return [Hanami::Assets::Config::NullDigestManifest] …\n"],["new","Hanami::Assets::Config::Sources","classes/Hanami/Assets/Config/Sources.html#method-c-new","(root)","<p>@since 0.1.0 @api private\n"],["new","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-c-new","()","<p>Return a new instance\n<p>@return [Hanami::Assets::Configuration] a new instance\n<p>@since 0.1.0 @api private …\n"],["new","Hanami::Assets::MissingAsset","classes/Hanami/Assets/MissingAsset.html#method-c-new","(name, sources)",""],["new","Hanami::Assets::MissingDigestAssetError","classes/Hanami/Assets/MissingDigestAssetError.html#method-c-new","(asset, manifest_path)",""],["new","Hanami::Assets::MissingDigestManifestError","classes/Hanami/Assets/MissingDigestManifestError.html#method-c-new","(path)",""],["new","Hanami::Assets::Precompiler","classes/Hanami/Assets/Precompiler.html#method-c-new","(configuration, duplicates)","<p>Return a new instance\n<p>@param configuration [Hanami::Assets::Configuration] the MAIN\n\n<pre><code>configuration of Hanami::Assets\n</code></pre>\n"],["new","Hanami::Assets::UnknownAssetEngine","classes/Hanami/Assets/UnknownAssetEngine.html#method-c-new","(source)",""],["new","Hanami::Cli","classes/Hanami/Cli.html#method-i-new","(application_name)",""],["new","Hanami::Commands::Assets::Precompile","classes/Hanami/Commands/Assets/Precompile.html#method-c-new","(options, environment)",""],["new","Hanami::Commands::Console","classes/Hanami/Commands/Console.html#method-c-new","(options)","<p>@param options [Hash] Environment&#39;s options\n<p>@since 0.1.0 @see Hanami::Environment#initialize\n"],["new","Hanami::Commands::DB::Abstract","classes/Hanami/Commands/DB/Abstract.html#method-c-new","(options)",""],["new","Hanami::Commands::DB::Console","classes/Hanami/Commands/DB/Console.html#method-c-new","(options, name)",""],["new","Hanami::Commands::DB::Migrate","classes/Hanami/Commands/DB/Migrate.html#method-c-new","(environment, version)",""],["new","Hanami::Commands::Generate::Abstract","classes/Hanami/Commands/Generate/Abstract.html#method-c-new","(options)",""],["new","Hanami::Commands::Generate::Action","classes/Hanami/Commands/Generate/Action.html#method-c-new","(options, application_name, controller_and_action_name)",""],["new","Hanami::Commands::Generate::App","classes/Hanami/Commands/Generate/App.html#method-c-new","(options, application_name)",""],["new","Hanami::Commands::Generate::Mailer","classes/Hanami/Commands/Generate/Mailer.html#method-c-new","(options, name)","<p>@since 0.5.0 @api private\n"],["new","Hanami::Commands::Generate::Migration","classes/Hanami/Commands/Generate/Migration.html#method-c-new","(options, name)",""],["new","Hanami::Commands::Generate::Model","classes/Hanami/Commands/Generate/Model.html#method-c-new","(options, model_name)",""],["new","Hanami::Commands::New::Abstract","classes/Hanami/Commands/New/Abstract.html#method-c-new","(options, name)",""],["new","Hanami::Commands::New::App","classes/Hanami/Commands/New/App.html#method-c-new","(options, name)",""],["new","Hanami::Commands::Routes","classes/Hanami/Commands/Routes.html#method-c-new","(options)","<p>@param options [Hash] Environment&#39;s options\n<p>@since 0.1.0 @see Hanami::Environment#initialize\n"],["new","Hanami::Commands::Server","classes/Hanami/Commands/Server.html#method-c-new","(options)",""],["new","Hanami::Config::Cookies","classes/Hanami/Config/Cookies.html#method-c-new","(configuration, options = {})","<p>Cookies configuration\n<p>httponly option enabled by default. Prevent attackers to steal cookies via\nJavaScript …\n"],["new","Hanami::Config::FrameworkConfiguration","classes/Hanami/Config/FrameworkConfiguration.html#method-c-new","(&blk)","<p>@since 0.2.0 @api private\n"],["new","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-c-new","()",""],["new","Hanami::Config::Mapper","classes/Hanami/Config/Mapper.html#method-c-new","(root, path, &blk)",""],["new","Hanami::Config::Sessions","classes/Hanami/Config/Sessions.html#method-c-new","(adapter = nil, options = {}, configuration = nil)","<p>HTTP sessions configuration\n<p>@param adapter [Symbol,String,Class] the session adapter @param options\n[Hash] …\n"],["new","Hanami::Configuration","classes/Hanami/Configuration.html#method-c-new","()","<p>Initialize a new configuration instance\n<p>@return [Hanami::Configuration]\n<p>@since 0.1.0 @api private\n"],["new","Hanami::Container","classes/Hanami/Container.html#method-c-new","()",""],["new","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-c-new","()","<p>Initialize a configuration instance\n<p>@return [Hanami::Controller::Configuration] a new configuration&#39;s …\n"],["new","Hanami::Controller::UnknownFormatError","classes/Hanami/Controller/UnknownFormatError.html#method-c-new","(format)",""],["new","Hanami::Entity","classes/Hanami/Entity.html#method-c-new","(attributes = {})","<p>Defines a generic, inefficient initializer, in case that the attributes\nweren&#39;t explicitly defined …\n"],["new","Hanami::Entity::DirtyTracking","classes/Hanami/Entity/DirtyTracking.html#method-c-new","(attributes = {})","<p>Override initialize process.\n<p>@param attributes [Hash] a set of attribute names and values\n<p>@since 0.3.1 …\n"],["new","Hanami::Environment","classes/Hanami/Environment.html#method-c-new","(options = {})","<p>Initialize a Hanami environment\n<p>It accepts an optional set of configurations from the CLI commands. Those …\n"],["new","Hanami::Hanamirc","classes/Hanami/Hanamirc.html#method-c-new","(root)","<p>Initialize Hanamirc class with application&#39;s root and environment\noptions.\n<p>@param root [Pathname] …\n"],["new","Hanami::Interactor::Interface","classes/Hanami/Interactor/Interface.html#method-c-new","(*args)","<p>Initialize an interactor\n<p>It accepts arbitrary number of arguments. Developers can override it.\n<p>@param args …\n"],["new","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-c-new","(payload = {})","<p>Initialize a new result\n<p>@param payload [Hash] a payload to carry on\n<p>@return [Hanami::Interactor::Result] …\n"],["new","Hanami::Layout","classes/Hanami/Layout.html#method-c-new","(scope, rendered)","<p>Initialize a layout\n<p>@param scope [Hanami::View::Rendering::Scope] view rendering scope @param\nrendered …\n"],["new","Hanami::Loader","classes/Hanami/Loader.html#method-c-new","(application)",""],["new","Hanami::Logger","classes/Hanami/Logger.html#method-c-new","(application_name = nil, stream: STDOUT, level: DEBUG, formatter: Formatter.new)","<p>Initialize a logger\n<p>@param application_name [String] an optional application name used for\n\n<pre><code>tagging purposes\n</code></pre>\n"],["new","Hanami::Mailer","classes/Hanami/Mailer.html#method-c-new","(locals = {})","<p>Initialize a mailer\n<p>@param locals [Hash] a set of objects that acts as context for the\nrendering @option …\n"],["new","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-c-new","()","<p>Initialize a configuration instance\n<p>@return [Hanami::Mailer::Configuration] a new configuration&#39;s …\n"],["new","Hanami::Mailer::Delivery","classes/Hanami/Mailer/Delivery.html#method-c-new","(env, &blk)","<p>@since 0.5.0 @api private\n"],["new","Hanami::Mailer::MissingDeliveryDataError","classes/Hanami/Mailer/MissingDeliveryDataError.html#method-c-new","()",""],["new","Hanami::Mailer::Rendering::TemplateName","classes/Hanami/Mailer/Rendering/TemplateName.html#method-c-new","(name, namespace)","<p>@since 0.1.0 @api private\n"],["new","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-c-new","(mailer)","<p>Initialize a finder\n<p>@param mailer [Class] the mailer class\n<p>@api private @since 0.1.0\n"],["new","Hanami::Mailer::Template","classes/Hanami/Mailer/Template.html#method-c-new","(template)",""],["new","Hanami::Middleware","classes/Hanami/Middleware.html#method-c-new","(configuration)","<p>Instantiate a middleware stack\n<p>@param configuration [Hanami::Configuration] the application&#39;s\nconfiguration …\n"],["new","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-c-new","(mapper, uri = nil, options = {})","<p>Initialize the adapter\n<p>@param mapper [Hanami::Model::Mapper] the object that defines the\n\n<pre><code>database to entities ...</code></pre>\n"],["new","Hanami::Model::Adapters::DisconnectedAdapterError","classes/Hanami/Model/Adapters/DisconnectedAdapterError.html#method-c-new","()",""],["new","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-c-new","(mapper, uri, options = {})","<p>Initialize the adapter.\n<p>@param mapper [Object] the database mapper @param uri [String] the\nconnection …\n"],["new","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-c-new","(name, identity)","<p>Initialize a collection\n<p>@param name [Symbol] the name of the collection (eg. `:users`). @param\nidentity …\n"],["new","Hanami::Model::Adapters::Memory::Collection::PrimaryKey","classes/Hanami/Model/Adapters/Memory/Collection/PrimaryKey.html#method-c-new","()","<p>Initialize\n<p>@return [Hanami::Model::Adapters::Memory::Collection::PrimaryKey]\n<p>@api private @since 0.1.0 …\n"],["new","Hanami::Model::Adapters::Memory::Command","classes/Hanami/Model/Adapters/Memory/Command.html#method-c-new","(dataset, collection)","<p>Initialize a command\n<p>@param dataset [Hanami::Model::Adapters::Memory::Collection] @param\ncollection [Hanami::Model::Mapping::Collection] …\n"],["new","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-c-new","(dataset, collection, &blk)","<p>Initialize a query\n<p>@param dataset [Hanami::Model::Adapters::Memory::Collection] @param\ncollection [Hanami::Model::Mapping::Collection] …\n"],["new","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-c-new","(mapper, uri = nil, options = {})","<p>Initialize the adapter.\n<p>@param mapper [Object] the database mapper @param uri [String] the\nconnection …\n"],["new","Hanami::Model::Adapters::MissingURIError","classes/Hanami/Model/Adapters/MissingURIError.html#method-c-new","(adapter_name)",""],["new","Hanami::Model::Adapters::NoAdapterError","classes/Hanami/Model/Adapters/NoAdapterError.html#method-c-new","(method_name)",""],["new","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-c-new","(dataset, mapped_collection)","<p>Initialize a collection\n<p>@param dataset [Sequel::Dataset] the dataset that maps a table or a\n\n<pre><code>subset of it.</code></pre>\n"],["new","Hanami::Model::Adapters::Sql::Command","classes/Hanami/Model/Adapters/Sql/Command.html#method-c-new","(query)","<p>Initialize a command\n<p>@param query [Hanami::Model::Adapters::Sql::Query]\n<p>@api private @since 0.1.0\n"],["new","Hanami::Model::Adapters::Sql::Console","classes/Hanami/Model/Adapters/Sql/Console.html#method-c-new","(uri)",""],["new","Hanami::Model::Adapters::Sql::Consoles::Mysql","classes/Hanami/Model/Adapters/Sql/Consoles/Mysql.html#method-c-new","(uri)",""],["new","Hanami::Model::Adapters::Sql::Consoles::Postgresql","classes/Hanami/Model/Adapters/Sql/Consoles/Postgresql.html#method-c-new","(uri)",""],["new","Hanami::Model::Adapters::Sql::Consoles::Sqlite","classes/Hanami/Model/Adapters/Sql/Consoles/Sqlite.html#method-c-new","(uri)",""],["new","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-c-new","(collection, context = nil, &blk)","<p>Initialize a query\n<p>@param collection [Hanami::Model::Adapters::Sql::Collection] the\n\n<pre><code>collection to query\n</code></pre>\n"],["new","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-c-new","(mapper, uri, options = {})","<p>Initialize the adapter.\n<p>Hanami::Model uses Sequel. For a complete reference of the connection URI,\nplease …\n"],["new","Hanami::Model::CheckConstraintViolationError","classes/Hanami/Model/CheckConstraintViolationError.html#method-c-new","(message = \"Check constraint has been violated\")",""],["new","Hanami::Model::Config::Adapter","classes/Hanami/Model/Config/Adapter.html#method-c-new","(**options)","<p>Initialize an adapter configuration instance\n<p>@param options [Hash] configuration options @option options …\n"],["new","Hanami::Model::Config::AdapterNotFound","classes/Hanami/Model/Config/AdapterNotFound.html#method-c-new","(adapter_name, message)",""],["new","Hanami::Model::Config::Mapper","classes/Hanami/Model/Config/Mapper.html#method-c-new","(path=nil, &blk)",""],["new","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-c-new","()","<p>Initialize a configuration instance\n<p>@return [Hanami::Model::Configuration] a new configuration&#39;s\n\n<pre><code>instance\n</code></pre>\n"],["new","Hanami::Model::ForeignKeyConstraintViolationError","classes/Hanami/Model/ForeignKeyConstraintViolationError.html#method-c-new","(message = \"Foreign key constraint has been violated\")",""],["new","Hanami::Model::InvalidCommandError","classes/Hanami/Model/InvalidCommandError.html#method-c-new","(message = \"Invalid command\")",""],["new","Hanami::Model::InvalidQueryError","classes/Hanami/Model/InvalidQueryError.html#method-c-new","(message = \"Invalid query\")",""],["new","Hanami::Model::Mapper","classes/Hanami/Model/Mapper.html#method-c-new","(coercer = nil, &blk)","<p>Instantiate a mapper.\n<p>It accepts an optional argument (`coercer`) a class that defines the\npolicies for …\n"],["new","Hanami::Model::Mapping::Attribute","classes/Hanami/Model/Mapping/Attribute.html#method-c-new","(name, coercer, options)","<p>Initialize a new attribute\n<p>@param name [#to_sym] attribute name @param coercer [.load, .dump] a\ncoercer …\n"],["new","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-c-new","(name, coercer_class, &blk)","<p>Instantiate a new collection\n<p>@param name [Symbol] the name of the mapped collection. If used with a\n\n<pre><code>SQL ...</code></pre>\n"],["new","Hanami::Model::Mapping::CollectionCoercer","classes/Hanami/Model/Mapping/CollectionCoercer.html#method-c-new","(collection)","<p>Initialize a coercer for the given collection.\n<p>@param collection [Hanami::Model::Mapping::Collection] …\n"],["new","Hanami::Model::Mapping::EntityNotFound","classes/Hanami/Model/Mapping/EntityNotFound.html#method-c-new","(name)",""],["new","Hanami::Model::Mapping::RepositoryNotFound","classes/Hanami/Model/Mapping/RepositoryNotFound.html#method-c-new","(name)",""],["new","Hanami::Model::Mapping::UnmappedCollectionError","classes/Hanami/Model/Mapping/UnmappedCollectionError.html#method-c-new","(name)",""],["new","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-c-new","(connection)","<p>Initialize an adapter\n<p>@since 0.4.0 @api private\n"],["new","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-c-new","(adapter_connection)",""],["new","Hanami::Model::Migrator::SQLiteAdapter","classes/Hanami/Model/Migrator/SQLiteAdapter.html#method-c-new","(connection)","<p>Initialize adapter\n<p>@since 0.4.0 @api private\n"],["new","Hanami::Model::NoMappingError","classes/Hanami/Model/NoMappingError.html#method-c-new","()",""],["new","Hanami::Model::NotNullConstraintViolationError","classes/Hanami/Model/NotNullConstraintViolationError.html#method-c-new","(message = \"NOT NULL constraint has been violated\")",""],["new","Hanami::Model::UniqueConstraintViolationError","classes/Hanami/Model/UniqueConstraintViolationError.html#method-c-new","(message = \"Unique constraint has been violated\")",""],["new","Hanami::Presenter","classes/Hanami/Presenter.html#method-c-new","(object)","<p>Initialize the presenter\n<p>@param object [Object] the object to present\n<p>@since 0.1.0\n"],["new","Hanami::RenderingPolicy","classes/Hanami/RenderingPolicy.html#method-c-new","(configuration)",""],["new","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-c-new","(env)",""],["new","Hanami::Routes","classes/Hanami/Routes.html#method-c-new","(routes)","<p>Initialize the factory\n<p>@param routes [Hanami::Router] a routes set\n<p>@return [Hanami::Routes] the factory …\n"],["new","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-c-new","(options = {})","<p>Initialize an endpoint resolver\n<p>@param options [Hash] the options used to customize lookup behavior\n<p>@option …\n"],["new","Hanami::Routing::ForceSsl","classes/Hanami/Routing/ForceSsl.html#method-c-new","(active, options = {})","<p>Initialize ForceSsl.\n<p>@param active [Boolean] activate redirection to SSL @param options [Hash]\nset of …\n"],["new","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-c-new","(options = {}, &blk)","<p>Initialize the router.\n<p>@see Hanami::Router#initialize\n<p>@since 0.1.0 @api private\n"],["new","Hanami::Routing::LazyEndpoint","classes/Hanami/Routing/LazyEndpoint.html#method-c-new","(name, namespace)","<p>Initialize the lazy endpoint\n<p>@since 0.1.0\n"],["new","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-c-new","(router, name, &blk)","<p>@api private @since 0.1.0\n"],["new","Hanami::Routing::Parsers","classes/Hanami/Routing/Parsers.html#method-c-new","(parsers)",""],["new","Hanami::Routing::Parsing::UnknownParserError","classes/Hanami/Routing/Parsing/UnknownParserError.html#method-c-new","(parser)",""],["new","Hanami::Routing::RecognizedRoute","classes/Hanami/Routing/RecognizedRoute.html#method-c-new","(response, env, router)","<p>Creates a new instance\n<p>@param response [HttpRouter::Response] raw response of recognition @param\nenv [Hash] …\n"],["new","Hanami::Routing::Resource","classes/Hanami/Routing/Resource.html#method-c-new","(router, name, options = {}, parent = nil, &blk)","<p>@api private @since 0.1.0\n"],["new","Hanami::Routing::Resource::Action","classes/Hanami/Routing/Resource/Action.html#method-c-new","(router, options = {}, resource = nil, &blk)","<p>Initialize an action\n<p>@param router [Hanami::Router] @param options [Hash] @param resource\n[Hanami::Routing::Resource, …\n"],["new","Hanami::Routing::Resource::Nested","classes/Hanami/Routing/Resource/Nested.html#method-c-new","(resource_name, resource)","<p>@api private @since 0.4.0\n"],["new","Hanami::Routing::Resource::Options","classes/Hanami/Routing/Resource/Options.html#method-c-new","(actions, options = {})","<p>Initialize the options for:\n\n<pre><code>* Hanami::Router#resource\n* Hanami::Router#resources</code></pre>\n<p>@param actions [Array&lt;Symbol&gt;] …\n"],["new","Hanami::Routing::Route","classes/Hanami/Routing/Route.html#method-c-new","(*)","<p>@since x.x.x @api private\n"],["new","Hanami::Routing::RoutesInspector","classes/Hanami/Routing/RoutesInspector.html#method-c-new","(routes)","<p>Instantiate a new inspector\n<p>@return [Hanami::Routing::RoutesInspector] the new instance\n<p>@since 0.2.0 @api …\n"],["new","Hanami::Server","classes/Hanami/Server.html#method-c-new","(options)","<p>@param options [Hash] Environment&#39;s options\n<p>@since 0.8.0 @see Hanami::Environment#initialize\n"],["new","Hanami::Static","classes/Hanami/Static.html#method-c-new","(app)",""],["new","Hanami::Utils::Attributes","classes/Hanami/Utils/Attributes.html#method-c-new","(hash = {})","<p>Initialize a set of attributes All the keys of the given Hash are\nrecursively converted to strings.\n<p>@param …\n"],["new","Hanami::Utils::Callbacks::Callback","classes/Hanami/Utils/Callbacks/Callback.html#method-c-new","(callback)","<p>Initialize by wrapping the given callback\n<p>@param callback [Object] the original callback that needs to …\n"],["new","Hanami::Utils::Callbacks::Chain","classes/Hanami/Utils/Callbacks/Chain.html#method-c-new","()","<p>Return a new chain\n<p>@return [Hanami::Utils::Callbacks::Chain]\n<p>@since 0.2.0\n"],["new","Hanami::Utils::Deprecation","classes/Hanami/Utils/Deprecation.html#method-c-new","(message)","<p>Initialize a deprecation message and prints it to standard error.\n<p>@param message [#to_s] a deprecation …\n"],["new","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-c-new","(hash = {}, &blk)","<p>Initialize the hash\n<p>@param hash [#to_h] the value we want to use to initialize this instance\n@param blk …\n"],["new","Hanami::Utils::Inflector::IrregularRules","classes/Hanami/Utils/Inflector/IrregularRules.html#method-c-new","(rules)","<p>@since 0.6.0 @api private\n"],["new","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-c-new","(*paths)","<p>Initialize a new collection for the given paths\n<p>@param paths [String, Pathname, Array&lt;String&gt;,  …\n"],["new","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-c-new","(string = nil, separator = DEFAULT_SEPARATOR)","<p>Initialize the path prefix\n<p>@param string [::String] the prefix value @param separator [::String] the\nseparator …\n"],["new","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-c-new","(string)","<p>Initialize the string\n<p>@param string [::String, Symbol] the value we want to initialize\n<p>@return [String] …\n"],["new","Hanami::Validations","classes/Hanami/Validations.html#method-c-new","(input)",""],["new","Hanami::Validations::Attribute","classes/Hanami/Validations/Attribute.html#method-c-new","(attributes, name, value, validations, errors)","<p>Instantiate an attribute\n<p>@param attributes [Hash] a set of attributes and values coming from the\n\n<pre><code>input\n</code></pre>\n"],["new","Hanami::Validations::AttributeDefiner","classes/Hanami/Validations/AttributeDefiner.html#method-c-new","(attributes = {})","<p>Create a new instance with the given attributes\n<p>@param attributes [#to_h] an Hash like object which contains …\n"],["new","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner::InstanceMethods","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner/InstanceMethods.html#method-c-new","(attributes = {})",""],["new","Hanami::Validations::BlankValueChecker","classes/Hanami/Validations/BlankValueChecker.html#method-c-new","(value)",""],["new","Hanami::Validations::Error","classes/Hanami/Validations/Error.html#method-c-new","(attribute_name, validation, expected, actual, namespace = nil)","<p>Initialize a validation error\n<p>@param attribute_name [Symbol] the name of the attribute @param validation\n…\n"],["new","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-c-new","()","<p>Initialize the errors\n<p>@since 0.1.0 @api private\n"],["new","Hanami::Validations::InlinePredicate","classes/Hanami/Validations/InlinePredicate.html#method-c-new","(name, message, &blk)",""],["new","Hanami::Validations::Namespace","classes/Hanami/Validations/Namespace.html#method-c-new","(name)",""],["new","Hanami::Validations::Namespace","classes/Hanami/Validations/Namespace.html#method-c-new","(name, klass)",""],["new","Hanami::Validations::ValidationSet","classes/Hanami/Validations/ValidationSet.html#method-c-new","()","<p>@since 0.2.2 @api private\n"],["new","Hanami::Validations::Validator","classes/Hanami/Validations/Validator.html#method-c-new","(validation_set, attributes, errors)",""],["new","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-c-new","()","<p>Initialize a configuration instance\n<p>@return [Hanami::View::Configuration] a new configuration&#39;s instance …\n"],["new","Hanami::View::MissingTemplateError","classes/Hanami/View/MissingTemplateError.html#method-c-new","(template, format)",""],["new","Hanami::View::MissingTemplateLayoutError","classes/Hanami/View/MissingTemplateLayoutError.html#method-c-new","(template)",""],["new","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-c-new","(template, locals)","<p>Initialize a view\n<p>@param template [Hanami::View::Template] the template to render @param\nlocals [Hash] …\n"],["new","Hanami::View::Rendering::LayoutFinder","classes/Hanami/View/Rendering/LayoutFinder.html#method-c-new","(view)","<p>Initialize the finder\n<p>@param view [Class, #layout]\n<p>@api private @since 0.1.0\n"],["new","Hanami::View::Rendering::LayoutRegistry","classes/Hanami/View/Rendering/LayoutRegistry.html#method-c-new","(view)","<p>Initialize the registry\n<p>@param view [Class] the view\n<p>@api private @since 0.1.0\n"],["new","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-c-new","(layout, scope)","<p>Initialize the scope\n<p>@param layout [Hanami::Layout] the layout to render @param scope\n[Hanami::View::Rendering::Scope] …\n"],["new","Hanami::View::Rendering::NullLayout","classes/Hanami/View/Rendering/NullLayout.html#method-c-new","(scope, rendered)","<p>Initialize a layout\n<p>@param scope [Hanami::View::Rendering::Scope] view rendering scope @param\nrendered …\n"],["new","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-c-new","(local)","<p>@since x.x.x @api private\n"],["new","Hanami::View::Rendering::PartialFile","classes/Hanami/View/Rendering/PartialFile.html#method-c-new","(key, format, template)","<p>@since x.x.x @api private\n"],["new","Hanami::View::Rendering::PartialTemplatesFinder","classes/Hanami/View/Rendering/PartialTemplatesFinder.html#method-c-new","(configuration)","<p>Initializes a new PartialTemplatesFinder\n<p>@param configuration [Configuration] the configuration object …\n"],["new","Hanami::View::Rendering::Scope","classes/Hanami/View/Rendering/Scope.html#method-c-new","(view, locals = {})","<p>Initialize the scope\n<p>@param view [Class] the view @param locals [Hash] a set of objects\navailable during …\n"],["new","Hanami::View::Rendering::Template","classes/Hanami/View/Rendering/Template.html#method-c-new","(view, options)","<p>Initialize a template\n<p>@param view [Hanami::View] the current view @param options [Hash] the\nrendering …\n"],["new","Hanami::View::Rendering::TemplateFinder","classes/Hanami/View/Rendering/TemplateFinder.html#method-c-new","(view, options)","<p>Initialize a finder\n<p>@param view [Class] a view @param options [Hash] the informations about the\ncontext …\n"],["new","Hanami::View::Rendering::TemplateName","classes/Hanami/View/Rendering/TemplateName.html#method-c-new","(name, namespace)",""],["new","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-c-new","(view)","<p>Initialize a finder\n<p>@param view [Class] the view\n<p>@api private @since 0.1.0\n"],["new","Hanami::View::Rendering::ViewFinder","classes/Hanami/View/Rendering/ViewFinder.html#method-c-new","(view)","<p>Initialize a finder\n<p>@param view [Class] the superclass view\n<p>@api private @since 0.1.0\n"],["new","Hanami::View::Template","classes/Hanami/View/Template.html#method-c-new","(template, encoding = Encoding::UTF_8)",""],["new","Hanami::Views::DefaultTemplateFinder","classes/Hanami/Views/DefaultTemplateFinder.html#method-c-new","(view, root, template_name, format)","<p>Template Finder\n<p>@since 0.2.0 @api private\n"],["new","Hanami::Views::NullView","classes/Hanami/Views/NullView.html#method-c-new","(body)",""],["new","Hanami::Welcome","classes/Hanami/Welcome.html#method-c-new","(_app)",""],["new","JSMin::ParseError","classes/JSMin/ParseError.html#method-c-new","(err, source, line)",""],["nil?","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-nil-3F","()","<p>@since x.x.x\n"],["no_response","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-no_response","(request, env)","<p>@api private\n"],["not","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-not","(condition = nil, &blk)",""],["not","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-not","(condition = nil, &blk)",""],["numeric?","Hanami::Utils::Kernel","classes/Hanami/Utils/Kernel.html#method-c-numeric-3F","(arg)","<p>Check if the given argument is a string representation of a number\n<p>@param arg [Object] the input\n<p>@return …\n"],["offset","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-offset","(number)","<p>Simulate an `OFFSET` clause, without the need of specify a limit.\n<p>@param number [Fixnum]\n<p>@return self\n"],["offset","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-offset","(*args)","<p>Filters the current scope with an `offset` directive.\n<p>@param args [Array] the array of arguments\n<p>@see  …\n"],["offset","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-offset","(number)","<p>Specify an `OFFSET` clause.\n<p>Due to SQL syntax restriction, offset MUST be used with `#limit`.\n<p>@param number …\n"],["options","Hanami::Hanamirc","classes/Hanami/Hanamirc.html#method-i-options","()","<p>Read hanamirc file (if exists) and parse it&#39;s values or return default.\n<p>@return [Hanami::Utils::Hash] …\n"],["options","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-options","(path, options = {}, &blk)","<p>Defines a route that accepts a OPTIONS request for the given path.\n<p>@param path [String] the relative  …\n"],["options","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-options","(path, options = {}, &blk)","<p>Support for OPTIONS HTTP verb\n<p>@see Hanami::Router#options\n<p>@since 0.1.0 @api private\n"],["options","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-options","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["or","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-or","(condition = nil, &blk)","<p>Adds a condition that behaves like SQL `OR`.\n<p>It accepts a `Hash` with only one pair. The key must be the …\n"],["or","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-or","(*args)","<p>Filters the current scope with an `or` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#or …\n"],["or","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-or","(condition = nil, &blk)","<p>Adds a SQL `OR` condition.\n<p>It accepts a `Hash` with only one pair. The key must be the name of the\ncolumn …\n"],["order","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-order","(*columns)","<p>Specify the ascending order of the records, sorted by the given columns.\n<p>@param columns [Array&lt;Symbol&gt;] …\n"],["order","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-order","(*args)","<p>Filters the current scope with an `order` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#order …\n"],["order","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-order","(*columns)","<p>Specify the ascending order of the records, sorted by the given columns.\n<p>@param columns [Array&lt;Symbol&gt;] …\n"],["order_more","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-order_more","(*args)","<p>Filters the current scope with an `order` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#order …\n"],["params","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-c-params","(&blk)",""],["params","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-params","()","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["params","Hanami::Action::Validatable::ClassMethods","classes/Hanami/Action/Validatable/ClassMethods.html#method-i-params","(klass = nil, &blk)","<p>Whitelist valid parameters to be passed to Hanami::Action#call.\n<p>This feature isn&#39;t mandatory, but …\n"],["params_class","Hanami::Action::Rack::ClassMethods","classes/Hanami/Action/Rack/ClassMethods.html#method-i-params_class","()","<p>Returns the class which defines the params\n<p>Returns the class which has been provided to define the params. …\n"],["parse","Hanami::Routing::Parsing::JsonParser","classes/Hanami/Routing/Parsing/JsonParser.html#method-i-parse","(body)","<p>Parse a json string\n<p>@param body [String] a json string\n<p>@return [Hash] the parsed json\n"],["parse","Hanami::Routing::Parsing::Parser","classes/Hanami/Routing/Parsing/Parser.html#method-i-parse","(body)","<p>@since 0.2.0\n"],["parsed_uri","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-parsed_uri","()","<p>Returns database connection URI instance without JDBC namespace\n<p>@since 0.5.0 @api private\n"],["partial_name","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-partial_name","()",""],["partial_template_under_view_path","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-partial_template_under_view_path","()","<p>@since 0.4.3 @api private\n"],["pass_on_response","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-pass_on_response","(response)","<p>@api private\n"],["password","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-password","()","<p>Returns user from DB connection\n<p>Even when adapter doesn&#39;t provide it explicitly it tries to parse …\n"],["patch","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-patch","(path, options = {}, &blk)","<p>Defines a route that accepts a PATCH request for the given path.\n<p>@param path [String] the relative URL …\n"],["patch","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-patch","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["path","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-path","(route, *args)","<p>Generate an relative URL for a specified named route. The additional\narguments will be used to compose …\n"],["path","Hanami::Routes","classes/Hanami/Routes.html#method-i-path","(name, *args)","<p>Return a relative path for the given route name\n<p>@param name [Symbol] the route name @param args [Array,nil] …\n"],["path_prefix","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-path_prefix","(value = nil)","<p>This options is used as a bridge between container and router application.\n<p>@return [String, NilClass] …\n"],["persist","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-persist","(collection, entity)","<p>Creates or updates a record in the database for the given entity.\n<p>@param collection [Symbol] the target …\n"],["persist","Hanami::Model::Adapters::Implementation","classes/Hanami/Model/Adapters/Implementation.html#method-i-persist","(collection, entity)","<p>Creates or updates a record in the database for the given entity.\n<p>@param collection [Symbol] the target …\n"],["persist","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-persist","(entity)","<p>Creates or updates a record in the database for the given entity.\n<p>@param entity [#id, #id=] the entity …\n"],["pluralize","Hanami::Utils::Inflector","classes/Hanami/Utils/Inflector.html#method-c-pluralize","(string)","<p>Pluralize the given string\n<p>@param string [String] a string to pluralize\n<p>@return [String,NilClass] the pluralized …\n"],["pluralize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-pluralize","()","<p>Return a pluralized version of self.\n<p>@return [Hanami::Utils::String] the pluralized string.\n<p>@api private …\n"],["port","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-port","(value = nil)","<p>URL port for the application\n<p>This is used to generate absolute URL from helpers.\n<p>@since 0.1.0\n"],["port","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-port","(value = nil)","<p>The URI port for this application. This is used by the router helpers to\ngenerate absolute URLs.\n<p>By default …\n"],["port","Hanami::Environment","classes/Hanami/Environment.html#method-i-port","()","<p>The HTTP port\n<p>In order to decide the value, it looks up the following sources:\n\n<pre><code>* CLI option `port`\n* HANAMI_PORT ...</code></pre>\n"],["port","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-port","()","<p>Returns DB connection port\n<p>Even when adapter doesn&#39;t provide it explicitly it tries to parse\n<p>@since …\n"],["post","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-post","(path, options = {}, &blk)","<p>Defines a route that accepts a POST request for the given path.\n<p>@param path [String] the relative URL …\n"],["post","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-post","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["post_process_templates","Hanami::Commands::Generate::Action","classes/Hanami/Commands/Generate/Action.html#method-i-post_process_templates","()",""],["post_process_templates","Hanami::Commands::Generate::App","classes/Hanami/Commands/Generate/App.html#method-i-post_process_templates","()",""],["post_process_templates","Hanami::Commands::New::App","classes/Hanami/Commands/New/App.html#method-i-post_process_templates","()",""],["post_process_templates","Hanami::Commands::New::Container","classes/Hanami/Commands/New/Container.html#method-i-post_process_templates","()",""],["precompile","Hanami::CliSubCommands::Assets","classes/Hanami/CliSubCommands/Assets.html#method-i-precompile","()",""],["predicate","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-predicate","(name, message: 'is invalid', &blk)",""],["predicates","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-predicates","(mod)",""],["prefix","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-prefix","(value = nil)","<p>URL port for the application\n<p>This is used to generate absolute or relative URL from helpers.\n<p>@since 0.1.0 …\n"],["prefix","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-prefix","()",""],["preload!","Hanami::Application","classes/Hanami/Application.html#method-c-preload-21","()","\n<pre><code>Preload all the registered applications, by yielding their configurations\nand preparing the frameworks. ...</code></pre>\n"],["preload_applications!","Hanami::Application","classes/Hanami/Application.html#method-c-preload_applications-21","()","\n<pre><code>Full preload for all the registered applications.\n\nThis is useful in console where we want all the application ...</code></pre>\n"],["prepare","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-prepare","()",""],["prepare","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-prepare","(&blk)","<p>Configure the logic to be executed when Hanami::Action is included This is\nuseful to DRY code by having …\n"],["prepare","Hanami::Mailer","classes/Hanami/Mailer.html#method-i-prepare","()","<p>Prepare the email message when a new mailer is initialized.\n<p>This is a hook that can be overwritten by …\n"],["prepare","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-prepare","(&blk)","<p>Prepare the mailers.\n<p>The given block will be yielded when `Hanami::Mailer` will be included by a\nmailer. …\n"],["prepare","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-prepare","()","<p>Prepare database: drop, create, load schema (if any), migrate.\n<p>This is designed for development machines …\n"],["prepare","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-prepare","(&blk)","<p>Prepare the views.\n<p>The given block will be yielded when `Hanami::View` will be included by a\nview.\n<p>This …\n"],["prepare!","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-prepare-21","(payload)","<p>Prepare the result before to be returned\n<p>@param payload [Hash] an updated payload\n<p>@since 0.3.5 @api private …\n"],["prepare!","Hanami::View::Rendering::LayoutRegistry","classes/Hanami/View/Rendering/LayoutRegistry.html#method-i-prepare-21","()",""],["prepend","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-prepend","(middleware, *args, &blk)","<p>Prepend a middleware to the stack.\n<p>@param middleware [Object] a Rack middleware @param args [Array] optional …\n"],["prepend","Hanami::Utils::Callbacks::Chain","classes/Hanami/Utils/Callbacks/Chain.html#method-i-prepend","(*callbacks, &block)","<p>Prepends the given callbacks to the beginning of the chain.\n<p>@param callbacks [Array] one or multiple callbacks …\n"],["prepend_after","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-prepend_after","(*callbacks, &blk)","<p>Define a callback for an Action. The callback will be executed\n*<strong>after</strong>* the action is called. It will …\n"],["prepend_before","Hanami::Action::Callbacks::ClassMethods","classes/Hanami/Action/Callbacks/ClassMethods.html#method-i-prepend_before","(*callbacks, &blk)","<p>Define a callback for an Action. The callback will be executed\n*<strong>before</strong>* the action is called. It will …\n"],["public_directory","Hanami","classes/Hanami.html#method-c-public_directory","()",""],["public_directory","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-public_directory","(value = nil)","<p>Application public directory\n<p>@since 0.1.0\n"],["push","Hanami::Assets::Config::GlobalSources","classes/Hanami/Assets/Config/GlobalSources.html#method-i-push","(*paths)","<p>@since 0.1.0 @api private\n"],["push","Hanami::Utils::LoadPaths","classes/Hanami/Utils/LoadPaths.html#method-i-push","(*paths)","<p>Adds the given path(s).\n<p>It returns self, so that multiple operations can be performed.\n<p>@param paths [String, …\n"],["put","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-put","(path, options = {}, &blk)","<p>Defines a route that accepts a PUT request for the given path.\n<p>@param path [String] the relative URL to …\n"],["put","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-put","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["query","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-query","(collection, &blk)","<p>Returns a query\n<p>@param collection [Symbol] the target collection (it must be mapped).\n@param blk [Proc] …\n"],["query","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-query","(collection, context = nil, &blk)","<p>Fabricates a query\n<p>@param collection [Symbol] the target collection (it must be mapped).\n@param blk [Proc] …\n"],["query","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-query","(collection, context = nil, &blk)","<p>Fabricates a query\n<p>@param collection [Symbol] the target collection (it must be mapped).\n@param blk [Proc] …\n"],["query","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-query","(collection, context = nil, &blk)","<p>Fabricates a query\n<p>@param collection [Symbol] the target collection (it must be mapped).\n@param blk [Proc] …\n"],["rack_builder","Hanami::Action::Rack::ClassMethods","classes/Hanami/Action/Rack/ClassMethods.html#method-i-rack_builder","()","<p>Build rack builder\n<p>@return [Rack::Builder]\n"],["rackserver","Hanami::Cli","classes/Hanami/Cli.html#method-i-rackserver","()",""],["rackup","Hanami::Environment","classes/Hanami/Environment.html#method-i-rackup","()","<p>Path to the Rack configuration file\n<p>In order to decide the value, it looks up the following sources:\n\n<pre><code>* ...</code></pre>\n"],["rackup_config","Hanami::Server","classes/Hanami/Server.html#method-i-rackup_config","()","<p>@since 0.8.0 @api private\n"],["raise","JSMin","classes/JSMin.html#method-c-raise","(err)",""],["raise_missing_template_error","Hanami::View::Rendering::Template","classes/Hanami/View/Rendering/Template.html#method-i-raise_missing_template_error","()","<p>@since 0.5.0 @api private\n"],["range","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-range","(column)","<p>Returns a range of values between the MAX and the MIN for the given column.\n<p>@param column [Symbol] the …\n"],["range","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-range","(column)","<p>Returns a range of values between the MAX and the MIN for the given column.\n<p>@param column [Symbol] the …\n"],["raw","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-i-raw","()","<p>Returns raw params from Rack env\n<p>@return [Hash]\n<p>@since 0.3.2\n"],["raw_call","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-raw_call","(env, &blk)","<p>@api private\n"],["raw_path","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-raw_path","(route, *args)","<p>Generate a relative URL for a specified named route.\n<p>@see Hanami::Router#path\n<p>@since 0.1.0 @api private …\n"],["raw_url","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-raw_url","(route, *args)","<p>Generate an absolute URL for a specified named route.\n<p>@see Hanami::Router#path\n<p>@since 0.1.0 @api private …\n"],["read","Hanami::Assets::Compressors::Abstract","classes/Hanami/Assets/Compressors/Abstract.html#method-i-read","(filename)","<p>Read the contents of given filename\n<p>@param filename [String, Pathname] the absolute path to the asset …\n"],["realpath","Hanami::Config::LoadPaths","classes/Hanami/Config/LoadPaths.html#method-i-realpath","(path)",""],["recognize","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-recognize","(env, options = {}, params = nil)","<p>Recognize the given env, path, or name and return a route for testing\ninspection.\n<p>If the route cannot …\n"],["recursive","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-recursive","()","<p>@api private @since 0.1.0\n"],["recursive","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-recursive","()","<p>@api private @since 0.2.0\n"],["redirect","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-redirect","(path, options = {}, &endpoint)","<p>Defines an HTTP redirect\n<p>@param path [String] the path that needs to be redirected @param options\n[Hash] …\n"],["redirect","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-redirect","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["registry","Hanami::Layout::ClassMethods","classes/Hanami/Layout/ClassMethods.html#method-i-registry","()","<p>A registry that holds all the registered layouts.\n<p>@api private @since 0.1.0\n<p>@see Hanami::View::Rendering::LayoutRegistry …\n"],["relative!","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-i-relative-21","()","<p>Modifies the path prefix to remove the leading separator.\n<p>@return [self]\n<p>@since 0.3.1 @api private\n"],["relative_join","Hanami::Utils::PathPrefix","classes/Hanami/Utils/PathPrefix.html#method-i-relative_join","(strings, separator = @separator)","<p>Joins self with the given token, without prefixing it with `separator`. It\ncleans up all the `separator` …\n"],["relative_partial_path","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-relative_partial_path","()","<p>@since x.x.x @api private\n"],["reload!","Hanami::Commands::Console::Methods","classes/Hanami/Commands/Console/Methods.html#method-i-reload-21","()",""],["render","Hanami::Layout","classes/Hanami/Layout.html#method-i-render","()","<p>Render the layout\n<p>@return [String] the output of the rendering process\n<p>@api private @since 0.1.0\n"],["render","Hanami::Mailer","classes/Hanami/Mailer.html#method-i-render","(format)","<p>Render a single template with the specified format.\n<p>@param format [Symbol] format\n<p>@return [String] the …\n"],["render","Hanami::Mailer::Template","classes/Hanami/Mailer/Template.html#method-i-render","(scope = Object.new, locals = {})","<p>Render the template within the context of the given scope.\n<p>@param scope [Class] the rendering scope @param …\n"],["render","Hanami::RenderingPolicy","classes/Hanami/RenderingPolicy.html#method-i-render","(env, response)",""],["render","Hanami::View::Rendering","classes/Hanami/View/Rendering.html#method-i-render","(context)","<p>Render the given context and locals with the appropriate template. If there\nare registered subclasses, …\n"],["render","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-render","()","<p>Render the template by bounding the local scope. If it uses a layout, it\nrenders the template first and …\n"],["render","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-render","(options)","<p>Render a partial or a template within a layout template.\n<p>@param options [Hash] @option options [String] …\n"],["render","Hanami::View::Rendering::NullLayout","classes/Hanami/View/Rendering/NullLayout.html#method-i-render","()","<p>Render the layout\n<p>@return [String] the output of the rendering process\n<p>@api private @since 0.1.0\n"],["render","Hanami::View::Rendering::NullTemplate","classes/Hanami/View/Rendering/NullTemplate.html#method-i-render","(scope, locals = {})","<p>Render the layout template\n<p>@param scope [Hanami::View::Scope] the rendering scope @param locals [Hash]\n…\n"],["render","Hanami::View::Rendering::Template","classes/Hanami/View/Rendering/Template.html#method-i-render","()","<p>Render the template.\n<p>@return [String] the output of the rendering process.\n<p>@raise [Hanami::View::MissingTemplateError] …\n"],["render","Hanami::View::Template","classes/Hanami/View/Template.html#method-i-render","(scope, &blk)","<p>Render the template within the context of the given scope.\n<p>@param scope [Hanami::View::Scope] the rendering …\n"],["render","Hanami::Views::Default","classes/Hanami/Views/Default.html#method-c-render","(root, template_name, context)",""],["render","Hanami::Views::NullView","classes/Hanami/Views/NullView.html#method-i-render","(_context)",""],["renderable?","Hanami::Action::Glue","classes/Hanami/Action/Glue.html#method-i-renderable-3F","()","<p>Check if the current HTTP request is renderable.\n<p>It verifies if the verb isn&#39;t HEAD, if the status …\n"],["rendered","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-rendered","()","<p>The output of the template rendering process.\n<p>@return [String] the rendering output\n<p>@raise [Hanami::View::MissingTemplateError] …\n"],["renderer","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-renderer","(options)",""],["repository","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-repository","(klass = nil)","<p>Defines the repository that interacts with this collection.\n<p>@param klass [Class, String] the repository …\n"],["request","Hanami::Action::Rack","classes/Hanami/Action/Rack.html#method-i-request","()","<p>Returns a Hanami specialized rack request\n<p>@return [Hanami::Action::Request] The request\n<p>@since 0.3.1\n"],["request_id","Hanami::Action::Rack","classes/Hanami/Action/Rack.html#method-i-request_id","()","<p>Calculates an unique ID for the current request\n<p>@return [String] The unique ID\n<p>@since 0.3.0\n"],["require_application_environment","Hanami::Environment","classes/Hanami/Environment.html#method-i-require_application_environment","()","<p>Require application environment\n<p>Eg <code>require &quot;config/environment&quot;</code>.\n<p>@since 0.4.0 @api private\n"],["reset!","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-reset-21","()","<p>@since 0.1.0 @api private\n"],["reset!","Hanami::Controller::Configuration","classes/Hanami/Controller/Configuration.html#method-i-reset-21","()","<p>Reset all the values to the defaults\n<p>@since 0.2.0 @api private\n"],["reset!","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-reset-21","()","<p>Reset the configuration\n"],["reset!","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-reset-21","()","<p>Reset all the values to the defaults\n<p>@return void\n<p>@since 0.2.0\n"],["reset!","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-reset-21","()","<p>@api private\n"],["reset!","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-reset-21","()","<p>Reset all the values to the defaults\n<p>@since 0.2.0 @api private\n"],["resolve","Hanami::Assets::Config::DigestManifest","classes/Hanami/Assets/Config/DigestManifest.html#method-i-resolve","(asset)","<p>Resolve the given asset into a digest path\n<p>For a given path <code>/assets/application.js</code> it will return\n<code>/assets/application-28a6b886de2372ee3922fcaf3f78f2d8.js</code> …\n"],["resolve","Hanami::Routing::EndpointResolver","classes/Hanami/Routing/EndpointResolver.html#method-i-resolve","(options, &endpoint)","<p>Resolve the given set of HTTP verb, path, endpoint and options. If it fails\nto resolve, it will mount …\n"],["resolve","Hanami::View::Rendering::LayoutRegistry","classes/Hanami/View/Rendering/LayoutRegistry.html#method-i-resolve","(context)","<p>Returns the layout for the given context.\n<p>@param context [Hash] the rendering context @option context …\n"],["resolve","Hanami::View::Rendering::Registry","classes/Hanami/View/Rendering/Registry.html#method-i-resolve","(context)","<p>Returns the view for the given context.\n<p>@param context [Hash] the rendering context @option context [Symbol] …\n"],["resource","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-resource","(name, options = {}, &blk)","<p>Defines a set of named routes for a single RESTful resource. It has a\nbuilt-in integration for Hanami::Controller …\n"],["resource","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-resource","(name, options = {})","<p>@api private @since 0.1.0\n"],["resource","Hanami::Routing::Resource","classes/Hanami/Routing/Resource.html#method-i-resource","(name, options = {}, &blk)","<p>Allow nested resource inside resource or resources\n<p>@since 0.4.0\n<p>@see Hanami::Router#resource\n"],["resource_name","Hanami::Routing::Resource::Action","classes/Hanami/Routing/Resource/Action.html#method-i-resource_name","()","<p>Resource name\n<p>@return [String]\n<p>@api private @since 0.1.0\n"],["resources","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-resources","(name, options = {}, &blk)","<p>Defines a set of named routes for a plural RESTful resource. It has a\nbuilt-in integration for Hanami::Controller …\n"],["resources","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-resources","(name, options = {})","<p>@api private @since 0.1.0\n"],["resources","Hanami::Routing::Resource","classes/Hanami/Routing/Resource.html#method-i-resources","(name, options = {}, &blk)","<p>Allow nested resources inside resource or resources\n<p>@since 0.4.0\n<p>@see Hanami::Router#resources\n"],["respond_to?","Hanami::Utils::BasicObject","classes/Hanami/Utils/BasicObject.html#method-i-respond_to-3F","(method_name, include_all = false)","<p>Returns true if responds to the given method.\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since …\n"],["respond_to?","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-respond_to-3F","(m, include_all = false)","<p>Implements “respond to” logic\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.0\n"],["respond_to_missing?","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-respond_to_missing-3F","(method_name, include_all)","<p>@since 0.3.5 @api private\n"],["respond_to_missing?","Hanami::Presenter","classes/Hanami/Presenter.html#method-i-respond_to_missing-3F","(m, include_private = false)","<p>Override Ruby&#39;s respond_to_missing? in order to support proper\ndelegation\n<p>@api private @since 0.3.0 …\n"],["respond_to_missing?","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-respond_to_missing-3F","(m, include_private=false)","<p>Override Ruby&#39;s respond_to_missing? in order to support ::Hash\ninterface\n<p>@api private @since 0.3.0 …\n"],["respond_to_missing?","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-respond_to_missing-3F","(m, include_private=false)","<p>Override Ruby&#39;s respond_to_missing? in order to support ::String\ninterface\n<p>@api private @since 0.3.0 …\n"],["respond_to_missing?","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-respond_to_missing-3F","(m, include_all)","<p>Implements “respond to” logic\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.0 @api private\n"],["respond_to_missing?","Hanami::View::Rendering::Scope","classes/Hanami/View/Rendering/Scope.html#method-i-respond_to_missing-3F","(m, include_all)","<p>Implements “respond to” logic\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.3.0 @api private\n"],["response","Hanami::Action::Rack","classes/Hanami/Action/Rack.html#method-i-response","()","<p>Returns a serialized Rack response (Array), according to the current\n\n<pre><code>status code, headers, and body.</code></pre>\n<p>@return …\n"],["reverse_order","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-reverse_order","(*columns)","<p>Specify the descending order of the records, sorted by the given columns.\n<p>@param columns [Array&lt;Symbol&gt;] …\n"],["reverse_order","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-reverse_order","(*columns)","<p>Specify the descending order of the records, sorted by the given columns.\n<p>@param columns [Array&lt;Symbol&gt;] …\n"],["rewrite_partial_path_info","Hanami::Routing::HttpRouter","classes/Hanami/Routing/HttpRouter.html#method-i-rewrite_partial_path_info","(env, request)","<p>@api private\n"],["root","Hanami","classes/Hanami.html#method-c-root","()","<p>Return root of the project (top level directory).\n<p>@return [Pathname] root path\n<p>@since 0.3.2\n"],["root","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-root","(value = nil)","<p>Sources root\n<p>@since 0.1.0\n"],["root","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-root","(value = nil)","<p>The root of the application\n<p>By default it returns the current directory, for this reason, **all the\ncommands …\n"],["root","Hanami::Environment","classes/Hanami/Environment.html#method-i-root","()","<p>Application&#39;s root\n<p>It defaults to the current working directory. Hanami assumes that all the\ncommands …\n"],["root","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-root","(value = nil)","<p>Set the root path where to search for templates\n<p>If not set, this value defaults to the current directory. …\n"],["root","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-root","()","<p>@api private @since 0.1.0\n"],["root","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-root","()","<p>Root directory\n<p>@since 0.4.0 @api private\n"],["root","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-root","(options = {}, &blk)","<p>Defines a root route (a GET route for &#39;/&#39;)\n<p>@param options [Hash] the options to customize the …\n"],["root","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-root","(value = nil)","<p>Set the root path where to search for templates\n<p>If not set, this value defaults to the current directory. …\n"],["root","Hanami::View::Dsl","classes/Hanami/View/Dsl.html#method-i-root","(value = nil)","<p>When a value is given, specify a templates root path for the view.\nOtherwise, it returns templates root …\n"],["root","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-root","()","<p>@api private @since 0.1.0\n"],["routable?","Hanami::Routing::RecognizedRoute","classes/Hanami/Routing/RecognizedRoute.html#method-i-routable-3F","()","<p>Check if routable\n<p>@return [TrueClass,FalseClass]\n<p>@since 0.5.0 @api public\n"],["routes","Hanami::Cli","classes/Hanami/Cli.html#method-i-routes","()",""],["routes","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-routes","(path = nil, &blk)","<p>Application routes.\n<p>Specify a set of routes for the application, by passing a block, or a\nrelative path …\n"],["routes","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-routes","()","<p>Returns self\n<p>This is a duck-typing trick for compatibility with `Hanami::Application`.\nIt&#39;s used by …\n"],["rsub","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-rsub","(pattern, replacement)","<p>Replace the rightmost match of <code>pattern</code> with\n<code>replacement</code>\n<p>If the pattern cannot be matched, it returns the …\n"],["rubinius?","Hanami::Utils","classes/Hanami/Utils.html#method-c-rubinius-3F","()","<p>Checks if the current VM is Rubinius\n<p>@return [TrueClass,FalseClass] return if the VM is Rubinius or not …\n"],["run","Hanami::Assets::Bundler","classes/Hanami/Assets/Bundler.html#method-i-run","()","<p>Start the process.\n<p>For each asset contained in the sources and third party gems, it will:\n\n<pre><code>* Compress\n* ...</code></pre>\n"],["run","Hanami::Assets::Precompiler","classes/Hanami/Assets/Precompiler.html#method-i-run","()","<p>Start the process\n<p>@since 0.1.0 @api private\n"],["run","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-run","()",""],["run","Hanami::Utils::Callbacks::Chain","classes/Hanami/Utils/Callbacks/Chain.html#method-i-run","(context, *args)","<p>Runs all the callbacks in the chain. The only two ways to stop the\nexecution are: `raise` or `throw`. …\n"],["scan","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-scan","(pattern, &blk)","<p>Both forms iterate through str, matching the pattern\n<p>@return [String,nil]\n<p>@see www.ruby-doc.org/core/String.html#method-i-scan …\n"],["schema","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-schema","(path = nil)","<p>Schema\n<p>It defaults to <code>db/schema.sql</code>.\n<p>@overload schema\n"],["scheme","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-scheme","(value = nil)","<p>URL scheme for the application\n<p>This is used to generate absolute URL from helpers.\n<p>@since 0.1.0\n"],["scheme","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-scheme","(value = nil)","<p>The URI scheme for this application. This is used by the router helpers to\ngenerate absolute URLs.\n<p>By …\n"],["scope","Hanami::View::Rendering::Template","classes/Hanami/View/Rendering/Template.html#method-i-scope","()",""],["scoped","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-scoped","()","<p>Apply all the conditions and returns a filtered collection.\n<p>This operation is idempotent, and the returned …\n"],["search_path","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-search_path","()","<p>@api private @since 0.1.0\n"],["search_path","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-search_path","()","<p>@api private @since 0.4.3\n"],["security","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-security","()","<p>Returns the security policy\n<p>@return [Hanami::Config::Security]\n<p>@since 0.3.0\n"],["select","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-select","(*columns)","<p>Select only the specified columns.\n<p>By default a query selects all the mapped columns.\n<p>@param columns [Array&lt;Symbol&gt;] …\n"],["select","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-select","(*args)",""],["select","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-select","(*columns)","<p>Select only the specified columns.\n<p>By default a query selects all the columns of a table (`SELECT *`). …\n"],["select_all","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-select_all","()","<p>Select all attributes for current scope\n<p>@return [Hanami::Model::Adapters::Sql::Collection] the filtered …\n"],["sending_file?","Hanami::Action::Glue","classes/Hanami/Action/Glue.html#method-i-sending_file-3F","()","<p>Check if the request&#39;s body is a file\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since …\n"],["separator","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-separator","()","<p>@api private @since 0.1.0\n"],["separator","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-separator","()","<p>@api private @since 0.1.0\n"],["serialize","Hanami::Model::Mapping::Collection","classes/Hanami/Model/Mapping/Collection.html#method-i-serialize","(entity)","<p>Serializes an entity to be persisted in the database.\n<p>@param entity [Object] an entity\n<p>@api private @since …\n"],["serve_static_assets?","Hanami::Environment","classes/Hanami/Environment.html#method-i-serve_static_assets-3F","()","<p>@since 0.6.0 @api private\n"],["server","Hanami::Cli","classes/Hanami/Cli.html#method-i-server","()",""],["session","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-session","()","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["session","Hanami::Action::Session","classes/Hanami/Action/Session.html#method-i-session","()","<p>Gets the session from the request and expose it as an Hash.\n<p>@return [Hash] the HTTP session from the request …\n"],["sessions","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-sessions","(adapter = nil, options = {})","<p>Configure sessions Enable sessions (disabled by default).\n<p>This is part of a DSL, for this reason when …\n"],["set","Hanami::Utils::Attributes","classes/Hanami/Utils/Attributes.html#method-i-set","(attribute, value)","<p>Set the given value for the given attribute\n<p>@param attribute [#to_s] a String or any object that implements …\n"],["silence_warnings","Hanami::Utils::IO","classes/Hanami/Utils/IO.html#method-c-silence_warnings","()","<p>Decreases the level of verbosity, during the execution of the given block.\n<p>Revised version of ActiveSupport&#39;s …\n"],["singularize","Hanami::Utils::Inflector","classes/Hanami/Utils/Inflector.html#method-c-singularize","(string)","<p>Singularize the given string\n<p>@param string [String] a string to singularize\n<p>@return [String,NilClass] the …\n"],["singularize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-singularize","()","<p>Return a singularized version of self.\n<p>@return [Hanami::Utils::String] the singularized string.\n<p>@api private …\n"],["size","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-size","()",""],["size","Range","classes/Range.html#method-i-size","()",""],["sources","Hanami::Assets","classes/Hanami/Assets.html#method-c-sources","()","<p>Global assets sources\n<p>This is designed for third party integration gems with frontend frameworks\nlike …\n"],["sources","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-sources","()","<p>Application&#39;s assets sources\n<p>@since 0.1.0 @api private\n"],["split","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-split","(pattern, limit = 0)","<p>Split the string with the given pattern\n<p>@return [Array&lt;String&gt;]\n<p>@see www.ruby-doc.org/core/String.html#method-i-split …\n"],["ssl?","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-ssl-3F","()","<p>Check if the application uses SSL\n<p>@return [FalseClass,TrueClass] the result of the check\n<p>@since 0.2.0\n"],["start","Hanami::Commands::Assets::Precompile","classes/Hanami/Commands/Assets/Precompile.html#method-i-start","()",""],["start","Hanami::Commands::Console","classes/Hanami/Commands/Console.html#method-i-start","()","<p>@since 0.1.0\n"],["start","Hanami::Commands::DB::Abstract","classes/Hanami/Commands/DB/Abstract.html#method-i-start","()",""],["start","Hanami::Commands::DB::Apply","classes/Hanami/Commands/DB/Apply.html#method-i-start","()",""],["start","Hanami::Commands::DB::Console","classes/Hanami/Commands/DB/Console.html#method-i-start","()",""],["start","Hanami::Commands::DB::Create","classes/Hanami/Commands/DB/Create.html#method-i-start","()",""],["start","Hanami::Commands::DB::Drop","classes/Hanami/Commands/DB/Drop.html#method-i-start","()",""],["start","Hanami::Commands::DB::Migrate","classes/Hanami/Commands/DB/Migrate.html#method-i-start","()",""],["start","Hanami::Commands::DB::Prepare","classes/Hanami/Commands/DB/Prepare.html#method-i-start","()",""],["start","Hanami::Commands::DB::Version","classes/Hanami/Commands/DB/Version.html#method-i-start","()",""],["start","Hanami::Commands::New::Abstract","classes/Hanami/Commands/New/Abstract.html#method-i-start","()",""],["start","Hanami::Commands::Routes","classes/Hanami/Commands/Routes.html#method-i-start","()","<p>Display to STDOUT application routes\n<p>@since 0.1.0\n"],["start","Hanami::Commands::Server","classes/Hanami/Commands/Server.html#method-i-start","()",""],["status","Hanami::Action::Throwable","classes/Hanami/Action/Throwable.html#method-i-status","(code, message)","<p>Sets the given code and message for the response\n<p>@param code [Fixnum] a valid HTTP status code @param …\n"],["store","Hanami::Assets::Cache","classes/Hanami/Assets/Cache.html#method-i-store","(file)","<p>Store the given file reference\n<p>@param file [String,Pathname] the file path\n<p>@return [TrueClass,FalseClass] …\n"],["stream","Hanami::Config::Logger","classes/Hanami/Config/Logger.html#method-i-stream","(value = nil)","<p>Log stream.\n<p><code>STDOUT</code> by default.\n<p>It accepts relative or absolute paths expressed as <code>String</code>, or\n<code>Pathname</code>. …\n"],["stringify!","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-stringify-21","()","<p>Convert in-place all the keys to Symbol instances, nested hashes are\nconverted too.\n<p>@return [Hash] self …\n"],["stylesheet","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-stylesheet","(*sources)","<p>Generate <code>link</code> tag for given source(s)\n<p>It accepts one or more strings representing the name of the asset, …\n"],["stylesheet_compressor","Hanami::Assets::Configuration","classes/Hanami/Assets/Configuration.html#method-i-stylesheet_compressor","(value = nil)","<p>Stylesheet compressor\n<p>Determine which compressor to use for Stylesheet files during deploy.\n<p>By default …\n"],["subclasses","Hanami::View::Inheritable","classes/Hanami/View/Inheritable.html#method-i-subclasses","()","<p>Set of registered subclasses\n<p>@api private @since 0.1.0\n"],["subject","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-subject","(value = nil)","<p>Sets the subject for mail messages\n<p>It accepts a hardcoded value as a string, or a symbol that represents …\n"],["success?","Hanami::Interactor::Result","classes/Hanami/Interactor/Result.html#method-i-success-3F","()","<p>Check if the current status is successful\n<p>@return [TrueClass,FalseClass] the result of the check\n<p>@since …\n"],["suffix","Hanami::Layout::ClassMethods","classes/Hanami/Layout/ClassMethods.html#method-i-suffix","()","<p>Template name suffix\n<p>@api private @since 0.1.0\n<p>@see Hanami::Layout::ClassMethods#SUFFIX @see\nHanami::Layout::ClassMethods#template …\n"],["sum","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-sum","(column)","<p>Returns the sum of the values for the given column.\n<p>@param column [Symbol] the column name\n<p>@return [Numeric] …\n"],["sum","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-sum","(column)","<p>Returns the sum of the values for the given column.\n<p>@param column [Symbol] the column name\n<p>@return [Numeric] …\n"],["symbolize!","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-symbolize-21","()","<p>Convert in-place all the keys to Symbol instances, nested hashes are\nconverted too.\n<p>@return [Hash] self …\n"],["table_name","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-table_name","()","<p>Return table name mapped collection\n<p>@return [String] table name\n<p>@api private @since 0.5.0\n"],["template","Hanami::Layout","classes/Hanami/Layout.html#method-i-template","()","<p>The template for the current format\n<p>@api private @since 0.1.0\n"],["template","Hanami::Layout::ClassMethods","classes/Hanami/Layout/ClassMethods.html#method-i-template","()","<p>Template name\n<p>@api private @since 0.1.0\n<p>@see Hanami::Layout::ClassMethods#SUFFIX @see\nHanami::Layout::ClassMethods#suffix …\n"],["template","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-template","(value = nil)","<p>Set the template name IF it differs from the convention.\n<p>For a given mailer named <code>Signup::Welcome</code> it will …\n"],["template","Hanami::View::Dsl","classes/Hanami/View/Dsl.html#method-i-template","(value = nil)","\n<pre><code>When a value is given, specify the relative path to the template.\nOtherwise, it returns the name that ...</code></pre>\n"],["template","Hanami::View::Rendering::InstanceMethods","classes/Hanami/View/Rendering/InstanceMethods.html#method-i-template","()","<p>The template.\n<p>@return [Hanami::View::Template] the template\n<p>@raise [Hanami::View::MissingTemplateError] …\n"],["template","Hanami::View::Rendering::Partial","classes/Hanami/View/Rendering/Partial.html#method-i-template","()",""],["template","Hanami::View::Rendering::Template","classes/Hanami/View/Rendering/Template.html#method-i-template","()",""],["template_name","Hanami::Mailer::Rendering::TemplatesFinder","classes/Hanami/Mailer/Rendering/TemplatesFinder.html#method-i-template_name","()","<p>@api private @since 0.1.0\n"],["template_name","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-template_name","()",""],["template_name","Hanami::View::Rendering::TemplateFinder","classes/Hanami/View/Rendering/TemplateFinder.html#method-i-template_name","()",""],["template_name","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-template_name","()","<p>@api private @since 0.1.0\n"],["template_options","Hanami::Commands::Generate::Action","classes/Hanami/Commands/Generate/Action.html#method-i-template_options","()","<p>@since 0.5.0 @api private\n"],["template_options","Hanami::Commands::Generate::App","classes/Hanami/Commands/Generate/App.html#method-i-template_options","()",""],["template_options","Hanami::Commands::Generate::Mailer","classes/Hanami/Commands/Generate/Mailer.html#method-i-template_options","()",""],["template_options","Hanami::Commands::Generate::Model","classes/Hanami/Commands/Generate/Model.html#method-i-template_options","()",""],["template_options","Hanami::Commands::New::App","classes/Hanami/Commands/New/App.html#method-i-template_options","()",""],["template_options","Hanami::Commands::New::Container","classes/Hanami/Commands/New/Container.html#method-i-template_options","()",""],["template_source_path","Hanami::Commands::Generate::Abstract","classes/Hanami/Commands/Generate/Abstract.html#method-i-template_source_path","()",""],["templates","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-templates","(value = nil)","<p>Templates root. The application will recursively look for templates under\nthis path.\n<p>By default it&#39;s …\n"],["templates","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-templates","(format = nil)","<p>Returns a set of associated templates or only one for the given format\n<p>This is part of a DSL, for this …\n"],["templates","Hanami::View::Rendering::LayoutRegistry","classes/Hanami/View/Rendering/LayoutRegistry.html#method-i-templates","()",""],["templates_path","Hanami::View::Rendering::TemplatesFinder","classes/Hanami/View/Rendering/TemplatesFinder.html#method-i-templates_path","(*parts)","<p>@api private @since 0.7.0\n"],["test","Hanami::Mailer::Delivery","classes/Hanami/Mailer/Delivery.html#method-i-test","(*args)","<p>@since 0.5.0 @api private\n"],["title","Hanami::Views::Default","classes/Hanami/Views/Default.html#method-i-title","()",""],["titleize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-titleize","()","<p>Return a titleized version of the string\n<p>@return [Hanami::Utils::String] the transformed string\n<p>@since …\n"],["to","Hanami::Mailer::Dsl","classes/Hanami/Mailer/Dsl.html#method-i-to","(value = nil)","<p>Sets the recipient for mail messages\n<p>It accepts a hardcoded value as a string or array of strings. For …\n"],["to_a","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-to_a","()","<p>Resolves self by fetching the records from the database and translating\nthem into entities.\n<p>@return [Array] …\n"],["to_a","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-to_a","()","<p>Converts into a nested array of [ key, value ] arrays.\n<p>@return [::Array] the array\n<p>@since 0.3.0\n"],["to_a","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-to_a","()","<p>Return a flat collection of errors.\n<p>@return [Array]\n<p>@since 0.2.1\n"],["to_config","Hanami::Mailer::Delivery","classes/Hanami/Mailer/Delivery.html#method-i-to_config","()","<p>@since 0.5.0 @api private\n"],["to_env_s","Hanami::ApplicationName","classes/Hanami/ApplicationName.html#method-i-to_env_s","()","<p>Returns the application name uppercased with non-alphanumeric characters as\nunderscores.\n<p>@return [String] …\n"],["to_h","Hanami::Action::BaseParams","classes/Hanami/Action/BaseParams.html#method-i-to_h","()","<p>Serialize params to Hash\n<p>@return [::Hash]\n<p>@since x.x.x\n"],["to_h","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-i-to_h","()","<p>Serialize params to Hash\n<p>@return [::Hash]\n<p>@since 0.3.0\n"],["to_h","Hanami::Entity","classes/Hanami/Entity.html#method-i-to_h","()","<p>Return the hash of attributes\n<p>@since 0.2.0\n<p>@example\n"],["to_h","Hanami::Utils::Attributes","classes/Hanami/Utils/Attributes.html#method-i-to_h","()","<p>Returns a deep duplicated copy of the attributes as a Hash\n<p>@return [::Hash]\n<p>@since 0.3.2\n"],["to_h","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-to_h","()","<p>Returns a Ruby Hash as duplicated version of self\n<p>@return [::Hash] the hash\n<p>@since 0.3.0\n"],["to_h","Hanami::Validations","classes/Hanami/Validations.html#method-i-to_h","()","<p>Returns a Hash with the defined attributes as symbolized keys, and their\nrelative values.\n<p>@return [Hash] …\n"],["to_h","Hanami::Validations::Errors","classes/Hanami/Validations/Errors.html#method-i-to_h","()","<p>Return a serializable Hash representation of the errors.\n<p>@return [Hanami::Utils::Hash] the Hash\n<p>@since …\n"],["to_hash","Hanami::Action::BaseParams","classes/Hanami/Action/BaseParams.html#method-i-to_hash","()",""],["to_hash","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-i-to_hash","()",""],["to_hash","Hanami::Utils::Hash","classes/Hanami/Utils/Hash.html#method-i-to_hash","()",""],["to_options","Hanami::Environment","classes/Hanami/Environment.html#method-i-to_options","()","<p>Serialize the most relevant settings into a Hash\n<p>@return [Hanami::Utils::Hash]\n<p>@since 0.1.0 @api private …\n"],["to_path","Hanami::Routing::Resource::Nested","classes/Hanami/Routing/Resource/Nested.html#method-i-to_path","()","<p>@api private @since 0.4.0\n"],["to_proc","Hanami::Config::Mapper","classes/Hanami/Config/Mapper.html#method-i-to_proc","()",""],["to_proc","Hanami::Model::Config::Mapper","classes/Hanami/Model/Config/Mapper.html#method-i-to_proc","()",""],["to_proc","Hanami::Validations::InlinePredicate","classes/Hanami/Validations/InlinePredicate.html#method-i-to_proc","()",""],["to_record","Hanami::Model::Mapping::CollectionCoercer","classes/Hanami/Model/Mapping/CollectionCoercer.html#method-i-to_record","(entity)","<p>Translates the given entity into a format compatible with the database.\n<p>@param entity [Object] the entity …\n"],["to_s","Hanami::ApplicationName","classes/Hanami/ApplicationName.html#method-i-to_s","()","<p>Returns the cleaned application name.\n<p>@return [String] the sanitized name\n<p>@example\n"],["to_s","Hanami::Entity","classes/Hanami/Entity.html#method-i-to_s","()",""],["to_s","Hanami::Mailer::Rendering::TemplateName","classes/Hanami/Mailer/Rendering/TemplateName.html#method-i-to_s","()","<p>@since 0.1.0 @api private\n"],["to_s","Hanami::Routing::RoutesInspector","classes/Hanami/Routing/RoutesInspector.html#method-i-to_s","(formatter = FORMATTER, base_path = nil)","<p>Return a formatted string that describes all the routes\n<p>@param formatter [String] the optional formatter …\n"],["to_s","Hanami::Utils::Escape::SafeString","classes/Hanami/Utils/Escape/SafeString.html#method-i-to_s","()","<p>@return [SafeString] the duped string\n<p>@since 0.4.0 @api private\n<p>@see www.ruby-doc.org/core/String.html#method-i-to_s …\n"],["to_s","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-to_s","()","<p>Returns a string representation\n<p>@return [String]\n<p>@since 0.3.0\n"],["to_s","Hanami::Validations::Namespace","classes/Hanami/Validations/Namespace.html#method-i-to_s","()",""],["to_s","Hanami::View::Rendering::TemplateName","classes/Hanami/View/Rendering/TemplateName.html#method-i-to_s","()",""],["to_str","Hanami::Action::Cache::NonValueDirective","classes/Hanami/Action/Cache/NonValueDirective.html#method-i-to_str","()",""],["to_str","Hanami::Action::Cache::ValueDirective","classes/Hanami/Action/Cache/ValueDirective.html#method-i-to_str","()",""],["to_str","Hanami::ApplicationName","classes/Hanami/ApplicationName.html#method-i-to_str","()","<p>@api private @since x.x.x\n"],["to_str","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-to_str","()",""],["to_str","Hanami::View::Rendering::NullLocal","classes/Hanami/View/Rendering/NullLocal.html#method-i-to_str","()","<p>@since x.x.x @api private\n"],["tokenize","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-tokenize","()","<p>It iterates through the tokens and calls the given block. A token is a\nsubstring wrapped by `()` and …\n"],["trace","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-trace","(path, options = {}, &blk)","<p>Defines a route that accepts a TRACE request for the given path.\n<p>@param path [String] the relative URL …\n"],["trace","Hanami::Routing::Namespace","classes/Hanami/Routing/Namespace.html#method-i-trace","(path, options = {}, &endpoint)","<p>@api private @since 0.1.0\n"],["transaction","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-transaction","(options = {})","<p>Wraps the given block in a transaction.\n<p>For performance reasons the block isn&#39;t in the signature of …\n"],["transaction","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-transaction","(options = {})","<p>WARNING: this is a no-op. For “real” transactions please use `SqlAdapter`\nor another adapter …\n"],["transaction","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-transaction","(options = {})","<p>Wraps the given block in a transaction.\n<p>For performance reasons the block isn&#39;t in the signature of …\n"],["transaction","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-transaction","(options = {})","<p>Wraps the given block in a transaction.\n<p>For performance reasons the block isn&#39;t in the signature of …\n"],["uncountable","Hanami::Utils::Inflector","classes/Hanami/Utils/Inflector.html#method-c-uncountable","(*words)","<p>Add an uncountable word\n<p>@param [Array&lt;String&gt;] words\n<p>@since 0.6.0\n"],["underscore","Hanami::Utils::String","classes/Hanami/Utils/String.html#method-i-underscore","()","<p>Return a downcased and underscore separated version of the string\n<p>Revised version of `ActiveSupport::Inflector.underscore` …\n"],["unload!","Hanami::Mailer::Configuration","classes/Hanami/Mailer/Configuration.html#method-i-unload-21","()",""],["unload!","Hanami::Model","classes/Hanami/Model.html#method-c-unload-21","()","<p>Unload the framework\n<p>@since 0.2.0 @api private\n"],["unload!","Hanami::Model::Configuration","classes/Hanami/Model/Configuration.html#method-i-unload-21","()",""],["unload!","Hanami::View::Configuration","classes/Hanami/View/Configuration.html#method-i-unload-21","()",""],["update","Hanami::Entity","classes/Hanami/Entity.html#method-i-update","(attributes={})","<p>Set attributes for entity\n<p>@since 0.2.0\n<p>@example\n"],["update","Hanami::Model::Adapters::Abstract","classes/Hanami/Model/Adapters/Abstract.html#method-i-update","(collection, entity)","<p>Updates a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["update","Hanami::Model::Adapters::FileSystemAdapter","classes/Hanami/Model/Adapters/FileSystemAdapter.html#method-i-update","(collection, entity)","<p>Updates a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["update","Hanami::Model::Adapters::Memory::Collection","classes/Hanami/Model/Adapters/Memory/Collection.html#method-i-update","(entity)","<p>Updates the record corresponding to the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see …\n"],["update","Hanami::Model::Adapters::Memory::Command","classes/Hanami/Model/Adapters/Memory/Command.html#method-i-update","(entity)","<p>Updates the corresponding record for the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see …\n"],["update","Hanami::Model::Adapters::MemoryAdapter","classes/Hanami/Model/Adapters/MemoryAdapter.html#method-i-update","(collection, entity)","<p>Updates a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["update","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-update","(entity)","<p>Updates the record corresponding to the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see …\n"],["update","Hanami::Model::Adapters::Sql::Command","classes/Hanami/Model/Adapters/Sql/Command.html#method-i-update","(entity)","<p>Updates the corresponding record for the given entity.\n<p>@param entity [Object] the entity to persist\n<p>@see …\n"],["update","Hanami::Model::Adapters::SqlAdapter","classes/Hanami/Model/Adapters/SqlAdapter.html#method-i-update","(collection, entity)","<p>Updates a record in the database corresponding to the given entity.\n<p>@param collection [Symbol] the target …\n"],["update","Hanami::Repository::InstanceMethods","classes/Hanami/Repository/InstanceMethods.html#method-i-update","(entity)","<p>Updates a record in the database corresponding to the given entity.\n<p>If not already persisted (`id` present) …\n"],["update_param","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-update_param","(*)","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["uri","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-uri","()","<p>Returns DB connection URI directly from adapter\n<p>@since 0.5.0 @api private\n"],["url","Hanami::Router::NotRoutableEndpointError","classes/Hanami/Router/NotRoutableEndpointError.html#method-i-url","(route, *args)","<p>Generate a URL for a specified named route. The additional arguments will\nbe used to compose the relative …\n"],["url","Hanami::Routes","classes/Hanami/Routes.html#method-i-url","(name, *args)","<p>Return an absolute path for the given route name\n<p>@param name [Symbol] the route name @param args [Array,nil] …\n"],["url","Hanami::Utils::Escape","classes/Hanami/Utils/Escape.html#method-c-url","(input, schemes = DEFAULT_URL_SCHEMES)","<p>Escape URL for HTML attributes (href, src, etc..).\n<p>It extracts from the given input the first valid URL …\n"],["use","Hanami::Action::Rack::ClassMethods","classes/Hanami/Action/Rack/ClassMethods.html#method-i-use","(middleware, *args, &block)","<p>Use a Rack middleware\n<p>The middleware will be used as it is.\n<p>At the runtime, the middleware be invoked with …\n"],["use","Hanami::Middleware","classes/Hanami/Middleware.html#method-i-use","(middleware, *args, &blk)","<p>Append a middleware to the stack.\n<p>@param middleware [Object] a Rack middleware @param args [Array] optional …\n"],["user","Hanami::Model::Migrator::Connection","classes/Hanami/Model/Migrator/Connection.html#method-i-user","()","<p>Returns user from DB connection\n<p>Even when adapter doesn&#39;t provide it explicitly it tries to parse …\n"],["valid?","Hanami::Action::Cache::NonValueDirective","classes/Hanami/Action/Cache/NonValueDirective.html#method-i-valid-3F","()",""],["valid?","Hanami::Action::Cache::ValueDirective","classes/Hanami/Action/Cache/ValueDirective.html#method-i-valid-3F","()",""],["valid?","Hanami::Action::Params","classes/Hanami/Action/Params.html#method-i-valid-3F","()",""],["validate","Hanami::Validations","classes/Hanami/Validations.html#method-i-validate","()","<p>Validates the object.\n<p>@return [Errors]\n<p>@since 0.2.4\n"],["validate","Hanami::Validations::Attribute","classes/Hanami/Validations/Attribute.html#method-i-validate","()","<p>@api private @since 0.2.0\n"],["validate","Hanami::Validations::Validator","classes/Hanami/Validations/Validator.html#method-i-validate","()","<p>@since 0.2.2 @api private\n"],["validates","Hanami::Validations::AttributeDefiner::EntityAttributeDefiner","classes/Hanami/Validations/AttributeDefiner/EntityAttributeDefiner.html#method-i-validates","(name, options = {})","<p>@since 0.2.3 @api private\n<p>@see Hanami::Validations::ClassMethods#validates\n"],["validations","Hanami::Validations::ClassMethods","classes/Hanami/Validations/ClassMethods.html#method-i-validations","(&blk)",""],["values","Hanami::Action::Cache::Directives","classes/Hanami/Action/Cache/Directives.html#method-i-values","()",""],["values_at","Hanami::Action::Request","classes/Hanami/Action/Request.html#method-i-values_at","(*)","<p>@raise [NotImplementedError]\n<p>@since 0.3.1 @api private\n"],["verb","Hanami::Routing::RecognizedRoute","classes/Hanami/Routing/RecognizedRoute.html#method-i-verb","()","<p>HTTP verb (aka method)\n<p>@return [String]\n<p>@since 0.5.0 @api public\n"],["version","Hanami::Cli","classes/Hanami/Cli.html#method-i-version","()",""],["version","Hanami::CliSubCommands::DB","classes/Hanami/CliSubCommands/DB.html#method-i-version","()",""],["version","Hanami::Model::Migrator","classes/Hanami/Model/Migrator.html#method-c-version","()","<p>Return current database version timestamp\n<p>If no migrations were ran, it returns <code>nil</code>.\n<p>@return [String,NilClass] …\n"],["version","Hanami::Model::Migrator::Adapter","classes/Hanami/Model/Migrator/Adapter.html#method-i-version","()","<p>Database version.\n<p>@since 0.4.0 @api private\n"],["video","Hanami::Assets::Helpers","classes/Hanami/Assets/Helpers.html#method-i-video","(source = nil, options = {}, &blk)","<p>Generate <code>video</code> tag for given source\n<p>It accepts one string representing the name of the asset, if it comes …\n"],["view","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-view","()","<p>It lazily collects all the low level settings for Hanami::View&#39;s\nconfiguration and applies them when …\n"],["view","Hanami::View::Rendering::LayoutScope","classes/Hanami/View/Rendering/LayoutScope.html#method-i-view","()","<p>The current view.\n<p>@return [Hanami::View] the current view\n<p>@since 0.1.0\n"],["view_pattern","Hanami::Configuration","classes/Hanami/Configuration.html#method-i-view_pattern","(value = nil)","<p>Defines a relative pattern to find views:.\n<p>Hanami supports multiple architectures (aka application structures), …\n"],["view_template_dir","Hanami::View::Rendering::PartialFinder","classes/Hanami/View/Rendering/PartialFinder.html#method-i-view_template_dir","()","<p>@since 0.4.3 @api private\n"],["views","Hanami::View::Inheritable","classes/Hanami/View/Inheritable.html#method-i-views","()","<p>Registered views\n<p>@api private @since 0.1.0\n"],["where","Hanami::Model::Adapters::Memory::Query","classes/Hanami/Model/Adapters/Memory/Query.html#method-i-where","(condition = nil, &blk)","<p>Adds a condition that behaves like SQL `WHERE`.\n<p>It accepts a `Hash` with only one pair. The key must be …\n"],["where","Hanami::Model::Adapters::Sql::Collection","classes/Hanami/Model/Adapters/Sql/Collection.html#method-i-where","(*args)","<p>Filters the current scope with a `where` directive.\n<p>@param args [Array] the array of arguments\n<p>@see Hanami::Model::Adapters::Sql::Query#where …\n"],["where","Hanami::Model::Adapters::Sql::Query","classes/Hanami/Model/Adapters/Sql/Query.html#method-i-where","(condition = nil, &blk)","<p>Adds a SQL `WHERE` condition.\n<p>It accepts a `Hash` with only one pair. The key must be the name of the …\n"],["wildcard_param","Hanami::Routing::Resource","classes/Hanami/Routing/Resource.html#method-i-wildcard_param","(route_param = nil)","<p>Return separator\n<p>@api private @since 0.4.0\n"],["wildcard_param","Hanami::Routing::Resources","classes/Hanami/Routing/Resources.html#method-i-wildcard_param","(route_param = nil)","<p>Return wildcard param between separators\n<p>@api private @since 0.4.0\n"],["x_frame_options","Hanami::Config::Security","classes/Hanami/Config/Security.html#method-i-x_frame_options","(value = nil)","<p>X-Frame-Options headers&#39; value\n<p>@overload x_frame_options(value)\n\n<pre><code>Sets the given value\n@param value [String] ...</code></pre>\n"],["README","","files/sources/hanami/README_md.html","","<p>Hanami\n<p>The web, with simplicity.\n<p>Frameworks\n"]]}}